{
    "version": "https://jsonfeed.org/version/1",
    "title": "LXR的小站 • All posts by \"算法基础课\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/passages/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/",
            "url": "http://example.com/passages/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/",
            "title": "基础算法",
            "date_published": "2021-11-21T02:53:13.000Z",
            "content_html": "<h1 id=\"acwing-785-快速排序\"><a class=\"markdownIt-Anchor\" href=\"#acwing-785-快速排序\">#</a> AcWing 785. 快速排序</h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>给定你一个长度为 n 的整数数列。</p>\n<p>请你使用快速排序对这个数列按照从小到大进行排序。</p>\n<p>并将排好序的数列按顺序输出。</p>\n<h4 id=\"输入格式\"><a class=\"markdownIt-Anchor\" href=\"#输入格式\">#</a> 输入格式</h4>\n<p>输入共两行，第一行包含整数 n。</p>\n<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整个数列。</p>\n<h4 id=\"输出格式\"><a class=\"markdownIt-Anchor\" href=\"#输出格式\">#</a> 输出格式</h4>\n<p>输出共一行，包含 n 个整数，表示排好序的数列。</p>\n<h4 id=\"数据范围\"><a class=\"markdownIt-Anchor\" href=\"#数据范围\">#</a> 数据范围</h4>\n<p>1≤n≤100000</p>\n<h4 id=\"输入样例\"><a class=\"markdownIt-Anchor\" href=\"#输入样例\">#</a> 输入样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">3 1 2 4 5</span><br></pre></td></tr></table></figure>\n<h4 id=\"输出样例\"><a class=\"markdownIt-Anchor\" href=\"#输出样例\">#</a> 输出样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\"><a class=\"markdownIt-Anchor\" href=\"#解题思路\">#</a> 解题思路</h2>\n<h4 id=\"题意理解\"><a class=\"markdownIt-Anchor\" href=\"#题意理解\">#</a> 题意理解</h4>\n<p>这道题目显然是要我们将一个无序数列排序，成为具有升序性质的升序序列.</p>\n<h4 id=\"算法处理\"><a class=\"markdownIt-Anchor\" href=\"#算法处理\">#</a> 算法处理</h4>\n<p>一道排序题目，数据范围是关键，我们发现这道题目只能让我们使用 O (nlogn) 的算法，显然我们可以选择快速排序，归并排序等算法，这里我们就使用快速排序.</p>\n<h2 id=\"代码实现\"><a class=\"markdownIt-Anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<h4 id=\"c\"><a class=\"markdownIt-Anchor\" href=\"#c\">#</a> C++</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> q[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">quick_sort</span><span class=\"params\">(<span class=\"keyword\">int</span> q[],<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l &gt;= r) <span class=\"keyword\">return</span>; <span class=\"comment\">// 如果没有数据或者只有一个数字的话，则不用排序</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> x = q[(l + r) / <span class=\"number\">2</span>],i = l - <span class=\"number\">1</span>, j = r + <span class=\"number\">1</span>; <span class=\"comment\">// 确定分界点和指针</span></span><br><span class=\"line\">    <span class=\"comment\">// 注意：分界点有四种取法，这里取的是中间的数据</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt; j) &#123; <span class=\"comment\">// i和j未相遇时，一直循环</span></span><br><span class=\"line\">        <span class=\"keyword\">do</span> i++; <span class=\"keyword\">while</span>(q[i] &lt; x); <span class=\"comment\">// 寻找</span></span><br><span class=\"line\">        <span class=\"keyword\">do</span> j--; <span class=\"keyword\">while</span>(q[j] &gt; x); <span class=\"comment\">// 寻找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; j) <span class=\"built_in\">swap</span>(q[i],q[j]); <span class=\"comment\">// 未相遇则交换，相遇了就不交换</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 继续对整理出的两段数据进行排序</span></span><br><span class=\"line\">    <span class=\"built_in\">quick_sort</span>(q, l, j); </span><br><span class=\"line\">    <span class=\"built_in\">quick_sort</span>(q, j + <span class=\"number\">1</span>, r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n ; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">quick_sort</span>(q, <span class=\"number\">0</span> ,n<span class=\"number\">-1</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n ; i++) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,q[i]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"java\"><a class=\"markdownIt-Anchor\" href=\"#java\">#</a> Java</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> 基础算法;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Quick_Sort</span> </span>&#123; <span class=\"comment\">// 快速排序</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> N = (<span class=\"keyword\">int</span>) (<span class=\"number\">1e6</span> +<span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> n; <span class=\"comment\">// 要排序的整数的个数</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> [] p = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">quick_sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] p,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(l &gt;= r) <span class=\"keyword\">return</span>; <span class=\"comment\">// 如果没有数据或者只有一个数字的话，则不用排序</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = p[(l + r)/<span class=\"number\">2</span>],i = l - <span class=\"number\">1</span>,j = r + <span class=\"number\">1</span>;<span class=\"comment\">// 确定分界点和指针</span></span><br><span class=\"line\">        <span class=\"comment\">// 注意：分界点有四种取法，这里取的是中间的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; j) &#123; <span class=\"comment\">// i和j未相遇时，一直循环</span></span><br><span class=\"line\">            <span class=\"keyword\">do</span> i++; <span class=\"keyword\">while</span>(p[i] &lt; x); <span class=\"comment\">// 寻找</span></span><br><span class=\"line\">            <span class=\"keyword\">do</span> j--; <span class=\"keyword\">while</span>(p[j] &gt; x); <span class=\"comment\">// 寻找</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &lt; j) &#123; <span class=\"comment\">// 指针未相遇则交换，相遇了就不交换</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> t = p[i];</span><br><span class=\"line\">                p[i] = p[j];</span><br><span class=\"line\">                p[j] = t;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        quick_sort(p,l,j); <span class=\"comment\">// 递归处理左半边</span></span><br><span class=\"line\">        quick_sort(p,j+<span class=\"number\">1</span>,r); <span class=\"comment\">// 递归处理右半边</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        n = in.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i++) &#123;</span><br><span class=\"line\">            p[i] = in.nextInt();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        quick_sort(p,<span class=\"number\">0</span>,n-<span class=\"number\">1</span>); <span class=\"comment\">// 快排</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i++) &#123;</span><br><span class=\"line\">            System.out.println(p[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"acwing-787-归并排序\"><a class=\"markdownIt-Anchor\" href=\"#acwing-787-归并排序\">#</a> AcWing 787. 归并排序</h1>\n<h2 id=\"题目描述-2\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-2\">#</a> 题目描述</h2>\n<p>给定你一个长度为 n 的整数数列。</p>\n<p>请你使用归并排序对这个数列按照从小到大进行排序。</p>\n<p>并将排好序的数列按顺序输出。</p>\n<h4 id=\"输入格式-2\"><a class=\"markdownIt-Anchor\" href=\"#输入格式-2\">#</a> 输入格式</h4>\n<p>输入共两行，第一行包含整数 n。</p>\n<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整个数列。</p>\n<h4 id=\"输出格式-2\"><a class=\"markdownIt-Anchor\" href=\"#输出格式-2\">#</a> 输出格式</h4>\n<p>输出共一行，包含 n 个整数，表示排好序的数列。</p>\n<h4 id=\"数据范围-2\"><a class=\"markdownIt-Anchor\" href=\"#数据范围-2\">#</a> 数据范围</h4>\n<p>1≤n≤100000</p>\n<h4 id=\"输入样例-2\"><a class=\"markdownIt-Anchor\" href=\"#输入样例-2\">#</a> 输入样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">3 1 2 4 5</span><br></pre></td></tr></table></figure>\n<h4 id=\"输出样例-2\"><a class=\"markdownIt-Anchor\" href=\"#输出样例-2\">#</a> 输出样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路-2\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-2\">#</a> 解题思路</h2>\n<h4 id=\"题意理解-2\"><a class=\"markdownIt-Anchor\" href=\"#题意理解-2\">#</a> 题意理解</h4>\n<p>这道题目还是让我们排序，只不过这里强制要求我们使用归并排序，所以既然如此的话，让我们好好地康康这道题目.</p>\n<h4 id=\"算法处理-2\"><a class=\"markdownIt-Anchor\" href=\"#算法处理-2\">#</a> 算法处理</h4>\n<p>归并排序，它有两大核心操作.</p>\n<p>一个是将数组一分为二，一个无序的数组成为两个数组.</p>\n<p>另外一个操作就是，合二为一，将两个有序数组合并成为一个有序数组.</p>\n<p><img src=\"https://cdn.acwing.com/media/article/image/2019/05/19/1130_4cf170747a-3.gif\" alt=\"\"></p>\n<h2 id=\"代码实现-2\"><a class=\"markdownIt-Anchor\" href=\"#代码实现-2\">#</a> 代码实现</h2>\n<h4 id=\"c-2\"><a class=\"markdownIt-Anchor\" href=\"#c-2\">#</a> C++</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n; <span class=\"comment\">// 要排序的整数的个数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> q[N],tmp[N]; <span class=\"comment\">// 排序的数组和功能数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge_sort</span><span class=\"params\">(<span class=\"keyword\">int</span> q[],<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span> </span>&#123; <span class=\"comment\">// 归并排序</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l &gt;= r) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">// 选取中间点，相当于 int mid = (l+r) / 2;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">merge_sort</span>(q,l,mid); <span class=\"comment\">// 对左半部分进行递归</span></span><br><span class=\"line\">    <span class=\"built_in\">merge_sort</span>(q,mid+<span class=\"number\">1</span>,r); <span class=\"comment\">// 对右半部分进行递归</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>,i = l,j = mid+<span class=\"number\">1</span>; <span class=\"comment\">// 设置递归左右两边区域时使用的三个指针</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt;= mid &amp;&amp; j &lt;= r) <span class=\"comment\">// 左右两边都没遍历完的时候</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++]; <span class=\"comment\">// 后指针指的数字更小的话，将后指针所指数字放入功能数组并指向下一位</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> tmp[k++] = q[j++]; <span class=\"comment\">// 前指针指的数字更小的话，将前指针所指数字放入功能数组并指向下一位</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 将未遍历完的部分放入功能数组</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt;= mid) tmp[k++] = q[i++]; <span class=\"comment\">// 将前半部分未遍历完的部分放入功能数组</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(j &lt;= r) tmp[k++] = q[j++]; <span class=\"comment\">// 将后半部分未遍历完的部分放入功能数组</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = l,j = <span class=\"number\">0</span>;i &lt;= r;i++,j++) q[i] = tmp[j]; <span class=\"comment\">// 将功能数组中排好序的数字复制到原始数组中</span></span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">merge_sort</span>(q,<span class=\"number\">0</span>,n<span class=\"number\">-1</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i++) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,q[i]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"java-2\"><a class=\"markdownIt-Anchor\" href=\"#java-2\">#</a> Java</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 基础算法;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Merge_Sort</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> N = (<span class=\"keyword\">int</span>) (<span class=\"number\">1e6</span> +<span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> n; <span class=\"comment\">// 要排序的整数的个数</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> [] p = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> [] tmp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">merge_sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] p,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(l &gt;= r) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">// 选取中间点，相当于 int mid = (l+r) / 2;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        merge_sort(p,l,mid); <span class=\"comment\">// 对左半部分进行递归</span></span><br><span class=\"line\">        merge_sort(p,mid+<span class=\"number\">1</span>,r); <span class=\"comment\">// 对右半部分进行递归</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>,i = l,j = mid+<span class=\"number\">1</span>; <span class=\"comment\">// 设置递归左右两边区域时使用的三个指针  // 这句易错</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt;= mid &amp;&amp; j &lt;= r) <span class=\"comment\">// 左右两边都没遍历完的时候</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p[i] &lt;= p[j]) tmp[k++] = p[i++]; <span class=\"comment\">// 后指针指的数字更小的话，将后指针所指数字放入功能数组并指向下一位</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> tmp[k++] = p[j++]; <span class=\"comment\">// 前指针指的数字更小的话，将前指针所指数字放入功能数组并指向下一位</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 将未遍历完的部分放入功能数组</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt;= mid) tmp[k++] = p[i++]; <span class=\"comment\">// 将前半部分未遍历完的部分放入功能数组</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j &lt;= r) tmp[k++] = p[j++]; <span class=\"comment\">// 将后半部分未遍历完的部分放入功能数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = l,j = <span class=\"number\">0</span>;i &lt;= r;i++,j++) p[i] = tmp[j]; <span class=\"comment\">// 将功能数组中排好序的数字复制到原始数组中</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        n = in.nextInt();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i++) &#123;</span><br><span class=\"line\">            p[i] = in.nextInt();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        merge_sort(p,<span class=\"number\">0</span>,n-<span class=\"number\">1</span>); <span class=\"comment\">// 快排</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i++) &#123;</span><br><span class=\"line\">            System.out.println(p[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"acwing-789-数的范围二分\"><a class=\"markdownIt-Anchor\" href=\"#acwing-789-数的范围二分\">#</a> AcWing 789. 数的范围（二分）</h1>\n<h2 id=\"题目描述-3\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-3\">#</a> 题目描述</h2>\n<p>给定一个按照升序排列的长度为 n 的整数数组，以及 q 个查询。</p>\n<p>对于每个查询，返回一个元素 k 的起始位置和终止位置（位置从 00 开始计数）。</p>\n<p>如果数组中不存在该元素，则返回  <code>-1 -1</code> 。</p>\n<h4 id=\"输入格式-3\"><a class=\"markdownIt-Anchor\" href=\"#输入格式-3\">#</a> 输入格式</h4>\n<p>第一行包含整数 n 和 q，表示数组长度和询问个数。</p>\n<p>第二行包含 n 个整数（均在 1∼10000 范围内），表示完整数组。</p>\n<p>接下来 q 行，每行包含一个整数 k，表示一个询问元素。</p>\n<h4 id=\"输出格式-3\"><a class=\"markdownIt-Anchor\" href=\"#输出格式-3\">#</a> 输出格式</h4>\n<p>共 q 行，每行包含两个整数，表示所求元素的起始位置和终止位置。</p>\n<p>如果数组中不存在该元素，则返回  <code>-1 -1</code> 。</p>\n<h4 id=\"数据范围-3\"><a class=\"markdownIt-Anchor\" href=\"#数据范围-3\">#</a> 数据范围</h4>\n<p>1≤n≤100000<br>\n1≤q≤10000<br>\n1≤k≤10000</p>\n<h4 id=\"输入样例-3\"><a class=\"markdownIt-Anchor\" href=\"#输入样例-3\">#</a> 输入样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6 3</span><br><span class=\"line\">1 2 2 3 3 4</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<h4 id=\"输出样例-3\"><a class=\"markdownIt-Anchor\" href=\"#输出样例-3\">#</a> 输出样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 4</span><br><span class=\"line\">5 5</span><br><span class=\"line\">-1 -1</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路-3\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-3\">#</a> 解题思路</h2>\n<h4 id=\"整数二分\"><a class=\"markdownIt-Anchor\" href=\"#整数二分\">#</a> 整数二分</h4>\n<p>二分的本质是二段性不是单调性。</p>\n<p>当想找不满足性质的边界值（红色区域的右边界值）</p>\n<p><img src=\"https://gitee.com/adameta/img/raw/master/1580979705_20200206160241434_9286.png\" alt=\"\"></p>\n<p>找中间值  <code>mid = (l+r+1)/2</code> <br>\nif (check (mid)) 等于 true 或者是 false<br>\ncheck (m) 是检查 m 是在<strong>不满足性质的区间</strong>（检查是不是在红色区间）<br>\n更新 l 或者 r</p>\n<p><img src=\"https://gitee.com/adameta/img/raw/master/1580979706_20200206161754906_7010.png\" alt=\"\"></p>\n<p>当想找满足性质的边界值（绿色区域的左边界值）</p>\n<ol>\n<li>找中间值  <code>mid = (l+r)/2</code></li>\n<li>if (check (mid)) 等于 true 或者是 false<br>\ncheck (m) 是检查 m 是在<strong>满足性质的区间</strong>（检查是不是在绿色区间）</li>\n<li>更新 l 或者 r</li>\n</ol>\n<p><img src=\"https://gitee.com/adameta/img/raw/master/1580979706_20200206163113295_29079.png\" alt=\"\"></p>\n<p>归结上面的两种二分方法，步骤为：</p>\n<ol>\n<li>先写一个 check 函数</li>\n<li>判定在 check 的情况下（true 和 false 的情况下），如何更新区间。</li>\n<li>在 check (m)==true 的分支下是:\n<ol>\n<li><code>l=mid</code>  的情况，中间点的更新方式是 <code>m=(l+r+1)/2</code></li>\n<li><code>r=mid</code>  的情况，中间点的更新方式是 <code>m=(l+r)/2</code></li>\n</ol>\n</li>\n</ol>\n<p>这种方法保证了：</p>\n<ol>\n<li>最后的 <code>l==r</code></li>\n<li>搜索到达的答案是闭区间的，即 a [l] 是满足 check () 条件的。</li>\n</ol>\n<h2 id=\"代码实现-3\"><a class=\"markdownIt-Anchor\" href=\"#代码实现-3\">#</a> 代码实现</h2>\n<h4 id=\"java-3\"><a class=\"markdownIt-Anchor\" href=\"#java-3\">#</a> Java</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> N = (<span class=\"keyword\">int</span>)<span class=\"number\">1e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] q = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] srgs)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        n = in.nextInt(); <span class=\"comment\">// 读入数组长度</span></span><br><span class=\"line\">        m = in.nextInt(); <span class=\"comment\">// 读入询问个数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt;n;i++) q[i] = in.nextInt(); <span class=\"comment\">// 读入数组数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(m-- &gt; <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 询问个数大于0（还未询问完）</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">            x = in.nextInt(); <span class=\"comment\">// 读入要询问的数字</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">int</span> l = <span class=\"number\">0</span>, r = n - <span class=\"number\">1</span>; <span class=\"comment\">// 选取左右指针(数组的左右两边)</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (l &lt; r) &#123; <span class=\"comment\">// 当指针未相遇时(未找到想找到的边界时)</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">// mid = l // 定义中间量 用于检查数据和更新指针</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (q[mid] &gt;= x) r = mid; <span class=\"comment\">// 更新右指针</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> l = mid + <span class=\"number\">1</span>; <span class=\"comment\">// 更新左指针</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (q[l] != x) System.out.println(<span class=\"string\">&quot;-1 -1&quot;</span>); <span class=\"comment\">// 未找到想要的边界(未找到想要的数字(找到的位置上的数字不是我们想要的))</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.print(l + <span class=\"string\">&quot; &quot;</span>); <span class=\"comment\">// 输出我们想要的左边界(查询的数字第一次出现的位置)</span></span><br><span class=\"line\">                l = <span class=\"number\">0</span>;r = n - <span class=\"number\">1</span>; <span class=\"comment\">// 重新选取选取左右指针(数组的左右两边)</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (l &lt; r) &#123; <span class=\"comment\">// // 当指针未相遇时(未找到想找到的边界时)</span></span><br><span class=\"line\">                    <span class=\"keyword\">int</span> mid = l + r + <span class=\"number\">1</span> &gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">// mid = r // 重新定义中间量 用于检查数据和更新指针</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (q[mid] &lt;= x) l = mid; <span class=\"comment\">// 更新左指针</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span> r = mid - <span class=\"number\">1</span>; <span class=\"comment\">// 更新右指针</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                System.out.println(l); <span class=\"comment\">// 输出我们想要的右边界(查询的数字最后一次出现的位置)</span></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"c-3\"><a class=\"markdownIt-Anchor\" href=\"#c-3\">#</a> C++</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1e6</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> q[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i++) </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(m--) &#123; <span class=\"comment\">// 询问个数大于0（还未查询完）</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x); <span class=\"comment\">// 读入要查询的数字</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> l = <span class=\"number\">0</span>,r = n<span class=\"number\">-1</span>; <span class=\"comment\">// 选取左右指针（数组的左右两边）</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 确定左边界（第一次出现的位置）</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l &lt; r) &#123; <span class=\"comment\">// 当指针未相遇时(未找到想找到的边界时)）</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">// mid = l // 定义中间量 用于检查数据和更新指针</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q[mid] &gt;= x) r = mid; <span class=\"comment\">// 更新右指针</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> l = mid+<span class=\"number\">1</span>; <span class=\"comment\">// 更新左指针</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q[l] != x) cout &lt;&lt; <span class=\"string\">&quot;-1 -1&quot;</span> &lt;&lt; endl; <span class=\"comment\">// 未找到想要的边界(未找到想要的数字(找到的位置上的数字不是我们想要的))</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cout &lt;&lt; l &lt;&lt; <span class=\"string\">&quot; &quot;</span> ; <span class=\"comment\">// 输出我们想要的左边界(查询的数字第一次出现的位置)</span></span><br><span class=\"line\">            l = <span class=\"number\">0</span>,r = n<span class=\"number\">-1</span>; <span class=\"comment\">// 重新选取选取左右指针(数组的左右两边)</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 确定左边界（第一次出现的位置）</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(l &lt; r) &#123; <span class=\"comment\">// 当指针未相遇时(未找到想找到的边界时)</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> mid = (l + r + <span class=\"number\">1</span>) &gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">// mid = r // 重新定义中间量 用于检查数据和更新指针</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(q[mid] &lt;= x) l = mid; <span class=\"comment\">// 更新左指针</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> r = mid<span class=\"number\">-1</span>; <span class=\"comment\">// 更新右指针</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cout &lt;&lt; l &lt;&lt; endl; <span class=\"comment\">// 输出我们想要的右边界(查询的数字最后一次出现的位置)</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"acwing-790-数的三次方根二分\"><a class=\"markdownIt-Anchor\" href=\"#acwing-790-数的三次方根二分\">#</a> AcWing 790. 数的三次方根（二分）</h1>\n<h2 id=\"题目描述-4\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-4\">#</a> 题目描述</h2>\n<p>给定一个浮点数 n，求它的三次方根。</p>\n<h4 id=\"输入格式-4\"><a class=\"markdownIt-Anchor\" href=\"#输入格式-4\">#</a> 输入格式</h4>\n<p>共一行，包含一个浮点数 n。</p>\n<h4 id=\"输出格式-4\"><a class=\"markdownIt-Anchor\" href=\"#输出格式-4\">#</a> 输出格式</h4>\n<p>共一行，包含一个浮点数，表示问题的解。</p>\n<p>注意，结果保留 6 位小数。</p>\n<h4 id=\"数据范围-4\"><a class=\"markdownIt-Anchor\" href=\"#数据范围-4\">#</a> 数据范围</h4>\n<p>−10000≤n≤10000</p>\n<h4 id=\"输入样例-4\"><a class=\"markdownIt-Anchor\" href=\"#输入样例-4\">#</a> 输入样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1000.00</span><br></pre></td></tr></table></figure>\n<h4 id=\"输出样例-4\"><a class=\"markdownIt-Anchor\" href=\"#输出样例-4\">#</a> 输出样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.000000</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路-4\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-4\">#</a> 解题思路</h2>\n<p>学会整数二分后，相信这个大家有手就行。</p>\n<h2 id=\"代码实现-4\"><a class=\"markdownIt-Anchor\" href=\"#代码实现-4\">#</a> 代码实现</h2>\n<h4 id=\"c-4\"><a class=\"markdownIt-Anchor\" href=\"#c-4\">#</a> C++</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> x;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; x; <span class=\"comment\">// 读入数据</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> l = <span class=\"number\">-10000</span>,r = <span class=\"number\">10000</span>; <span class=\"comment\">// 设定范围</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(r - l &gt; <span class=\"number\">1e-8</span>) &#123; <span class=\"comment\">// 是否找到</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> mid = (l + r) / <span class=\"number\">2</span>; <span class=\"comment\">// 中间值</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mid*mid*mid &gt;= x) r = mid;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> l = mid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lf\\n&quot;</span>,l); <span class=\"comment\">// %lf默认保留六位小数</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"java-4\"><a class=\"markdownIt-Anchor\" href=\"#java-4\">#</a> Java</h4>\n<p><strong><a href=\"https://cloud.tencent.com/developer/article/1607231\">JAVA 字符串格式化 ——String.format () 的使用</a></strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] srgs)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">double</span> x;</span><br><span class=\"line\">        x = in.nextDouble(); <span class=\"comment\">// 读入数据</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> l = -<span class=\"number\">10000</span>,r = <span class=\"number\">10000</span>; <span class=\"comment\">// 设定范围</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(r - l &gt; <span class=\"number\">1e-8</span>) &#123; <span class=\"comment\">// 是否找到</span></span><br><span class=\"line\">            <span class=\"keyword\">double</span> mid = (l + r) / <span class=\"number\">2</span>; <span class=\"comment\">// 中间值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mid*mid*mid &gt;= x) r = mid;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> l = mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(String.format(<span class=\"string\">&quot;%.6f&quot;</span>, l)); <span class=\"comment\">// 保留六位小数</span></span><br><span class=\"line\">        <span class=\"comment\">// System.out.printf(&quot;%.6f&quot;,l); // 作用相同</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"acwing-791-高精度加法\"><a class=\"markdownIt-Anchor\" href=\"#acwing-791-高精度加法\">#</a> AcWing 791. 高精度加法</h1>\n<h2 id=\"题目描述-5\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-5\">#</a> 题目描述</h2>\n<p>给定两个正整数（不含前导 00），计算它们的和。</p>\n<h4 id=\"输入格式-5\"><a class=\"markdownIt-Anchor\" href=\"#输入格式-5\">#</a> 输入格式</h4>\n<p>共两行，每行包含一个整数。</p>\n<h4 id=\"输出格式-5\"><a class=\"markdownIt-Anchor\" href=\"#输出格式-5\">#</a> 输出格式</h4>\n<p>共一行，包含所求的和。</p>\n<h4 id=\"数据范围-5\"><a class=\"markdownIt-Anchor\" href=\"#数据范围-5\">#</a> 数据范围</h4>\n<p>1≤整数长度≤1000001≤整数长度≤100000</p>\n<h4 id=\"输入样例-5\"><a class=\"markdownIt-Anchor\" href=\"#输入样例-5\">#</a> 输入样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12</span><br><span class=\"line\">23</span><br></pre></td></tr></table></figure>\n<h4 id=\"输出样例-5\"><a class=\"markdownIt-Anchor\" href=\"#输出样例-5\">#</a> 输出样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">35</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路-5\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-5\">#</a> 解题思路</h2>\n<ol>\n<li>\n<p>因为是长整数的加法运算，普通的数据类型无法存放，所以选择了 vector（也因为有  <code>.size</code>  这个函数才采用它）。</p>\n</li>\n<li>\n<p>过长的数据使我选择了字符串来读入，用循环放入 vector 即可（将数字低位在前高位在后的放入）。</p>\n</li>\n<li>\n<p>在循环中通过算子 <code>t</code>  来进行每一位的运算，并将下一次运算的进位算出： <code>t /= 10;</code> （参与下一位数的运算），剩余部分写入结果中： <code>C.push_back(t%10);</code> 。</p>\n</li>\n<li>\n<p>循环结束（各位的运算完成）后，如果最高位时 0，则需要进一位： <code>C.push_back(1);</code></p>\n</li>\n</ol>\n<h2 id=\"代码实现-5\"><a class=\"markdownIt-Anchor\" href=\"#代码实现-5\">#</a> 代码实现</h2>\n<h4 id=\"c-5\"><a class=\"markdownIt-Anchor\" href=\"#c-5\">#</a> C++</h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">add</span><span class=\"params\">(vector&lt;<span class=\"keyword\">int</span>&gt; &amp;A,vector&lt;<span class=\"keyword\">int</span>&gt; &amp;B)</span> </span>&#123; <span class=\"comment\">// 使用引用传参，就不用再复制一遍了</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    vector&lt;<span class=\"keyword\">int</span>&gt; C; <span class=\"comment\">// 储存结果</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> t = <span class=\"number\">0</span>; <span class=\"comment\">// 运算的算子以及进位</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; A.<span class=\"built_in\">size</span>() || i &lt; B.<span class=\"built_in\">size</span>();i++) &#123; <span class=\"comment\">// 加法运算，A或B未读完时，加法继续</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; A.<span class=\"built_in\">size</span>()) t += A[i]; <span class=\"comment\">// 从个位数开始加，一次循环加一位</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; B.<span class=\"built_in\">size</span>()) t += B[i]; <span class=\"comment\">// 从个位数开始加，一次循环加一位</span></span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(t%<span class=\"number\">10</span>); <span class=\"comment\">// 排除t中需要进位的部分并将剩下的放在C里面</span></span><br><span class=\"line\">        t /= <span class=\"number\">10</span>; <span class=\"comment\">// 下一次运算时的进位</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(t) C.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>); <span class=\"comment\">// 运算后最高位是0，则进1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string a,b;</span><br><span class=\"line\">    vector&lt;<span class=\"keyword\">int</span>&gt; A,B;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b; <span class=\"comment\">// 使用字符串读入数据</span></span><br><span class=\"line\">    <span class=\"comment\">// 在下面一步时，注意字符串的末尾有&#x27;0&#x27;，所以有 size() - 1 </span></span><br><span class=\"line\">    <span class=\"comment\">// 而 a[i] - &#x27;0&#x27; 是为了拿到数据(eg: &#x27;2&#x27; - &#x27;0&#x27; = 0)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;i &gt;= <span class=\"number\">0</span>;i--) A.<span class=\"built_in\">push_back</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span>); <span class=\"comment\">// 将数据放入vector中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = b.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;i &gt;= <span class=\"number\">0</span>;i--) B.<span class=\"built_in\">push_back</span>(b[i] - <span class=\"string\">&#x27;0&#x27;</span>); <span class=\"comment\">// 将数据放入vector中</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    vector&lt;<span class=\"keyword\">int</span>&gt; C = <span class=\"built_in\">add</span>(A,B); <span class=\"comment\">// 进行加法运算并将结果放入C中</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 在下面这一步时，要注意size() - 1,不然的话结果前面会多一个0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = C.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;i &gt;= <span class=\"number\">0</span>;i--) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,C[i]); <span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"acwing-792-高精度减法\"><a class=\"markdownIt-Anchor\" href=\"#acwing-792-高精度减法\">#</a> AcWing 792. 高精度减法</h1>\n<h2 id=\"题目描述-6\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-6\">#</a> 题目描述</h2>\n<p>给定两个正整数（不含前导 0），计算它们的差，计算结果可能为负数。</p>\n<h4 id=\"输入格式-6\"><a class=\"markdownIt-Anchor\" href=\"#输入格式-6\">#</a> 输入格式</h4>\n<p>共两行，每行包含一个整数。</p>\n<h4 id=\"输出格式-6\"><a class=\"markdownIt-Anchor\" href=\"#输出格式-6\">#</a> 输出格式</h4>\n<p>共一行，包含所求的差。</p>\n<h4 id=\"数据范围-6\"><a class=\"markdownIt-Anchor\" href=\"#数据范围-6\">#</a> 数据范围</h4>\n<p>1≤整数长度≤105</p>\n<h4 id=\"输入样例-6\"><a class=\"markdownIt-Anchor\" href=\"#输入样例-6\">#</a> 输入样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">32</span><br><span class=\"line\">11</span><br></pre></td></tr></table></figure>\n<h4 id=\"输出样例-6\"><a class=\"markdownIt-Anchor\" href=\"#输出样例-6\">#</a> 输出样例：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">21</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路-6\"><a class=\"markdownIt-Anchor\" href=\"#解题思路-6\">#</a> 解题思路</h2>\n<p>判断需要相减的两个数的大小，然后进行逐位相减。</p>\n<h2 id=\"代码实现-6\"><a class=\"markdownIt-Anchor\" href=\"#代码实现-6\">#</a> 代码实现</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// A - B 是否大于0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(vector&lt;<span class=\"keyword\">int</span>&gt; &amp;A, vector&lt;<span class=\"keyword\">int</span>&gt; &amp;B)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.<span class=\"built_in\">size</span>() != B.<span class=\"built_in\">size</span>()) <span class=\"keyword\">return</span> A.<span class=\"built_in\">size</span>() &gt; B.<span class=\"built_in\">size</span>(); <span class=\"comment\">// 先看长度，长度长的大</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = A.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i -- ) <span class=\"comment\">// 从个位开始比较，相同跳过这位数，不相同返回结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (A[i] != B[i])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> A[i] &gt; B[i];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">// 都相同，返回true(此时A - B = 0)</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 减法运算</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">sub</span><span class=\"params\">(vector&lt;<span class=\"keyword\">int</span>&gt; &amp;A, vector&lt;<span class=\"keyword\">int</span>&gt; &amp;B)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"keyword\">int</span>&gt; C;</span><br><span class=\"line\">    <span class=\"comment\">// 从个位开始逐位相减</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, t = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>(); i ++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        t = A[i] - t; <span class=\"comment\">// 减去上一次的借位</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; B.<span class=\"built_in\">size</span>()) t -= B[i]; <span class=\"comment\">// 由于A&gt;B,i有可能超出B的位数，需要验证</span></span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>((t + <span class=\"number\">10</span>) % <span class=\"number\">10</span>); <span class=\"comment\">// 添加结果(包含t&gt;0与t&lt;0的情况) --&gt; t&gt;0: t%10,  t&lt;0: (t + 10) % 10</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 计算借位</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t &lt; <span class=\"number\">0</span>) t = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>(); <span class=\"comment\">// 消除结果前的0(eg: 111-110=001 , 需要去除两个数字 0 使结果变成 1 )</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string a, b;</span><br><span class=\"line\">    vector&lt;<span class=\"keyword\">int</span>&gt; A, B;</span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b; <span class=\"comment\">// 读入数据为字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = a.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i -- ) A.<span class=\"built_in\">push_back</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span>); <span class=\"comment\">// 转换成数字</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = b.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i -- ) B.<span class=\"built_in\">push_back</span>(b[i] - <span class=\"string\">&#x27;0&#x27;</span>); <span class=\"comment\">// 转换成数字</span></span><br><span class=\"line\"></span><br><span class=\"line\">    vector&lt;<span class=\"keyword\">int</span>&gt; C; <span class=\"comment\">// 定义结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// A &gt; B 时,sub(A, B),否则 sub(B, A),并输出一个&#x27;-&#x27;号</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">cmp</span>(A, B)) C = <span class=\"built_in\">sub</span>(A, B);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> C = <span class=\"built_in\">sub</span>(B, A), cout &lt;&lt; <span class=\"string\">&#x27;-&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = C.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i -- ) cout &lt;&lt; C[i];</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"写在后面\"><a class=\"markdownIt-Anchor\" href=\"#写在后面\">#</a> 写在后面</h1>\n<p>暂时先写这么多，学了其他的继续写（~~ 菜鸡嘤嘤</p>\n",
            "tags": [
                "算法基础课"
            ]
        }
    ]
}