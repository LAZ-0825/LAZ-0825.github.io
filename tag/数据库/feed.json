{
    "version": "https://jsonfeed.org/version/1",
    "title": "LXR的小站 • All posts by \"数据库\" tag",
    "description": "",
    "home_page_url": "http://laz0825.cn",
    "items": [
        {
            "id": "http://laz0825.cn/passages/20/",
            "url": "http://laz0825.cn/passages/20/",
            "title": "MySql基础篇",
            "date_published": "2022-08-28T05:49:59.000Z",
            "content_html": "<h1 id=\"一-sql\"><a class=\"markdownIt-Anchor\" href=\"#一-sql\">#</a> 一、SQL</h1>\n<blockquote>\n<p>全称  <code>Structured Query Language</code> ，结构化查询语言。操作关系型数据库的编程语言，定义了一套操作关系型数据库统一<strong>标准</strong> 。</p>\n</blockquote>\n<h2 id=\"1sql通用语法\"><a class=\"markdownIt-Anchor\" href=\"#1sql通用语法\">#</a> 1.SQL 通用语法</h2>\n<blockquote>\n<p>在学习具体的 SQL 语句之前，先来了解一下 SQL 语言的同于语法。</p>\n</blockquote>\n<ol>\n<li>SQL 语句可以单行或多行书写，以分号结尾。</li>\n<li>SQL 语句可以使用空格 / 缩进来增强语句的可读性。</li>\n<li>MySQL 数据库的 SQL 语句<strong>不区分大小写</strong>，关键字建议使用大写。</li>\n<li>注释：\n<ul>\n<li>单行注释： <code>--</code>  注释内容 或  <code># </code> 注释内容</li>\n<li>多行注释： <code>/* 注释内容 */</code></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2sql分类\"><a class=\"markdownIt-Anchor\" href=\"#2sql分类\">#</a> 2.SQL 分类</h2>\n<blockquote>\n<p><strong>SQL 语句，根据其功能，主要分为四类： <code>DDL</code> 、 <code>DML</code> 、 <code>DQL</code> 、 <code>DCL</code> 。</strong></p>\n<p><strong>但是作为 <code>Java开发</code> 的程序员我们仅需掌握 <code>DML</code>  及 <code>DQL</code>  即可。</strong></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">分类</th>\n<th style=\"text-align:left\">全称</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>DDL</strong></td>\n<td style=\"text-align:left\">Data Definition Language</td>\n<td style=\"text-align:left\">数据定义语言，用来定义数据库对象（<strong>数据库、表、字段</strong>）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>DML</strong></td>\n<td style=\"text-align:left\">Data Manipulation Language</td>\n<td style=\"text-align:left\">数据操作语言，用来对数据库表中的数据进行<strong>增删改</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>DQL</strong></td>\n<td style=\"text-align:left\">Data Query Language</td>\n<td style=\"text-align:left\">数据查询语言，用来<strong>查询数据库中表的记录</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>DCL</strong></td>\n<td style=\"text-align:left\">Data Control Language</td>\n<td style=\"text-align:left\">数据控制语言，用来<strong>创建数据库用户</strong>、控制数据库的控制权限</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3ddl\"><a class=\"markdownIt-Anchor\" href=\"#3ddl\">#</a> 3.DDL</h2>\n<blockquote>\n<p><strong> <code>Data Definition Language</code> ，数据定义语言，用来定义数据库对象 (数据库，表，字段) 。</strong></p>\n</blockquote>\n<h3 id=\"31-操作数据库的命令\"><a class=\"markdownIt-Anchor\" href=\"#31-操作数据库的命令\">#</a> 3.1 操作数据库的命令</h3>\n<blockquote>\n<p>下面演示的命令中出现的中括号表示为可选命令（加粗字体为常用命令）</p>\n</blockquote>\n<ol>\n<li>\n<p>查询所有数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW DATABASES;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询当前数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT DATABASE();</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>创建数据库</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># UTF8字符集长度为3字节，有些符号占4字节，所以推荐用utf8mb4字符集</span><br><span class=\"line\">CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];</span><br><span class=\"line\">SQL</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>删除数据库</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP DATABASE [ IF EXISTS ] 数据库名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USE 数据库名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"32-操作表的命令\"><a class=\"markdownIt-Anchor\" href=\"#32-操作表的命令\">#</a> 3.2 操作表的命令</h3>\n<blockquote>\n<p>下面演示的命令中出现的中括号表示为可选命令（加粗字体为常用命令）</p>\n</blockquote>\n<ol>\n<li>\n<p>查询当前数据库所有表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW TABLES;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>查询表结构</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DESC 表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>查询指定表的建表语句</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW CREATE TABLE 表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>创建表（注意：最后一个字段后面没有逗号）</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create table 表名 (</span><br><span class=\"line\">字段名1 类型(宽度) 约束条件 [COMMENT 字段1注释],</span><br><span class=\"line\">字段名2 类型(宽度) 约束条件 [COMMENT 字段2注释],</span><br><span class=\"line\">字段名3 类型(宽度) 约束条件 [COMMENT 字段3注释]</span><br><span class=\"line\">) [ COMMENT 表注释 ];</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>添加字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束];</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改数据类型</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改字段名和字段类型</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 DROP 字段名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改表名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 RENAME TO 新表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>删除表</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#将整张表彻底删掉</span><br><span class=\"line\">DROP TABLE [IF EXISTS] 表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#以该方式删除的表相当于仅删除表中的数据，但是表结构保留</span><br><span class=\"line\">TRUNCATE TABLE 表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>Ps：实际开发中表的结构在创建时就已经确定了，后期基本上不会出现更改或者添加字段的情况，因此关于操作字段的命令可以不用死记。</strong></p>\n<h3 id=\"33-字段的数据类型\"><a class=\"markdownIt-Anchor\" href=\"#33-字段的数据类型\">#</a> 3.3 字段的数据类型</h3>\n<h4 id=\"a-整型\"><a class=\"markdownIt-Anchor\" href=\"#a-整型\">#</a> a） 整型</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">MySQL 数据类型</th>\n<th style=\"text-align:left\">含义（有符号）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tinyint</td>\n<td style=\"text-align:left\">1 字节，范围（-128~127）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">smallint</td>\n<td style=\"text-align:left\">2 字节，范围（-32768~32767）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mediumint</td>\n<td style=\"text-align:left\">3 字节，范围（-8388608~8388607）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">4 字节，范围（-2147483648~2147483647）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bigint</td>\n<td style=\"text-align:left\">8 字节，范围（±9.22*10 的 18 次方）</td>\n</tr>\n</tbody>\n</table>\n<p>整型默认使用的都是有符号的，当然了，我们也可以加上 <code>unsigned</code>  关键字，定义成无符号的类型，那么对应的取值范围就会发生改变。</p>\n<p>比如： <code>tinyint unsigned</code>  的取值范围为 <code>0~255</code> ，</p>\n<h4 id=\"b-浮点型\"><a class=\"markdownIt-Anchor\" href=\"#b-浮点型\">#</a> b） 浮点型</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">MySQL 数据类型</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">float(m, d)</td>\n<td style=\"text-align:left\">4 字节，单精度浮点型，m 总长度，d 小数位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">double(m, d)</td>\n<td style=\"text-align:left\">8 字节，双精度浮点型，m 总长度，d 小数位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">decimal(m, d)</td>\n<td style=\"text-align:left\">decimal 是存储为字符串的浮点数，对应我们 java 的 Bigdecimal</td>\n</tr>\n</tbody>\n</table>\n<p>我们使用一个例子来判断小括号内参数的含义，针对数据类型为 <code>float(5, 3)</code>  的列，做了以下试验：</p>\n<ul>\n<li>插入 <code>123.45678</code> ，最后查询得到的结果为 <code>99.999</code> ；</li>\n<li>插入 <code>12.34567</code> ，最后查询结果为 <code>12.346</code> ；</li>\n</ul>\n<p>所以，在使用浮点型的时候，还是要注意陷阱的，要以插入数据库中的实际结果为准。</p>\n<h4 id=\"c-字符串\"><a class=\"markdownIt-Anchor\" href=\"#c-字符串\">#</a> c） 字符串</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">MySQL 数据类型</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">char(n)</td>\n<td style=\"text-align:left\">固定长度，最多 255 个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">varchar(n)</td>\n<td style=\"text-align:left\">可变长度，最大容量 65535 个字节</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tinytext</td>\n<td style=\"text-align:left\">可变长度，最大容量 255 个字节</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">text</td>\n<td style=\"text-align:left\">可变长度，最大容量 65535 个字节</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mediumtext</td>\n<td style=\"text-align:left\">可变长度，最大容量 2 的 24 次方 - 1 个字节 16MB</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">longtext</td>\n<td style=\"text-align:left\">可变长度，最大容量 2 的 32 次方 - 1 个字节 4GB</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"d-日期和时间\"><a class=\"markdownIt-Anchor\" href=\"#d-日期和时间\">#</a> d） 日期和时间</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">MySQL 数据类型</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>date</strong></td>\n<td style=\"text-align:left\">3 字节，日期，格式：2022-09-18</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>time</strong></td>\n<td style=\"text-align:left\">3 字节，时间，格式：08:42:30</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>datetime</strong></td>\n<td style=\"text-align:left\">8 字节，日期时间，格式：2022-09-18 08:42:30</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timestamp</td>\n<td style=\"text-align:left\">4 字节，自动存储记录修改的时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">year</td>\n<td style=\"text-align:left\">1 字节，年份，格式：2020</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4dml常用\"><a class=\"markdownIt-Anchor\" href=\"#4dml常用\">#</a> 4.DML（常用）</h2>\n<blockquote>\n<p><strong>DML 英文全称是 Data Manipulation Language (数据操作语言)，用来对数据库中表的数据记录进行 <code>增、删、改</code> 操作。</strong></p>\n</blockquote>\n<ul>\n<li>添加数据（ <code>INSERT</code> ）</li>\n<li>修改数据（ <code>UPDATE</code> ）</li>\n<li>删除数据（ <code>DELETE</code> ）</li>\n</ul>\n<h3 id=\"41-添加数据\"><a class=\"markdownIt-Anchor\" href=\"#41-添加数据\">#</a> 4.1 添加数据</h3>\n<ol>\n<li>\n<p>添加指定字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>添加全部字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO 表名 VALUES (值1, 值2, ...);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>批量添加数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...),(值1, 值2, ...), (值1, 值2, ...);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>注意事项</p>\n<ul>\n<li>插入数据时，指定的字段顺序需要与值的顺序是一一对应的。</li>\n<li>字符串和日期类型数据应该包含在引号中</li>\n<li>插入的数据大小应该在字段的规定范围内</li>\n</ul>\n<h3 id=\"42-修改和删除数据\"><a class=\"markdownIt-Anchor\" href=\"#42-修改和删除数据\">#</a> 4.2 修改和删除数据</h3>\n<ol>\n<li>\n<p>修改符合条件的数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除复合条件的数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DELETE FROM 表名 [ WHERE 条件 ];</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>注意：如果不加 <code>WHERE</code>  条件则默认操作整张表的数据</strong></p>\n<h2 id=\"5dql常用\"><a class=\"markdownIt-Anchor\" href=\"#5dql常用\">#</a> 5.DQL（常用）</h2>\n<blockquote>\n<p><strong> <code>DQL</code>  英文全称是 <code>Data Query Language</code>  (数据查询语言)，数据查询语言，用来查询数据库中表的记录。</strong></p>\n</blockquote>\n<p>小提示：</p>\n<ul>\n<li>查询关键字:  <code>SELECT</code></li>\n<li><code>DQL</code>  是我们每天接触编写最多也是最难的 SQL，该语言用来查询记录，不会修改数据库和表结构。</li>\n<li>实际开发中<strong>查询操作</strong>的频次是要远高于<strong>增删改</strong>的。</li>\n<li>查询可以当作一个很大的章节，其中包含<strong>单表查询、多表查询、分组查询</strong>等等。</li>\n</ul>\n<h3 id=\"51-课前准备\"><a class=\"markdownIt-Anchor\" href=\"#51-课前准备\">#</a> 5.1 课前准备</h3>\n<blockquote>\n<p><strong>在学习查询语句前我们需要用到一个图形化工具来操作数据库，这会使我们的学习效率及开发效率大大的提高。</strong></p>\n</blockquote>\n<ul>\n<li>\n<p>图形化界面工具（根据个人喜好选择）：<a href=\"https://lanzoux.com/iHtYJ05vitze\">Navicat15</a></p>\n</li>\n<li>\n<p>在开始学习之前我们需要执行以下 SQL 语句作为我们的学习素材：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE IF NOT EXISTS itcast DEFAULT CHARSET utf8mb4;</span><br><span class=\"line\">DROP TABLE IF EXISTS employee;</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE emp (</span><br><span class=\"line\">\tid int COMMENT &#x27;编号&#x27;,</span><br><span class=\"line\">\tworkno varchar(10) COMMENT &#x27;工号&#x27;,</span><br><span class=\"line\">\tname varchar(10) COMMENT &#x27;姓名&#x27;,</span><br><span class=\"line\">\tgender char(1) COMMENT &#x27;性别&#x27;,</span><br><span class=\"line\">\tage tinyint UNSIGNED COMMENT &#x27;年龄&#x27;,</span><br><span class=\"line\">\tidcard char(18) COMMENT &#x27;身份证号&#x27;,</span><br><span class=\"line\">\tworkaddress varchar(50) COMMENT &#x27;工作地址&#x27;,</span><br><span class=\"line\">\tentrydate date COMMENT &#x27;入职时间&#x27;</span><br><span class=\"line\">) COMMENT &#x27;员工表&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (1, &#x27;00001&#x27;, &#x27;柳岩666&#x27;, &#x27;女&#x27;, 20, &#x27;123456789012345678&#x27;, &#x27;北京&#x27;, &#x27;2000-01-01&#x27;);</span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (2, &#x27;00002&#x27;, &#x27;张无忌&#x27;, &#x27;男&#x27;, 18, &#x27;123456789012345670&#x27;, &#x27;北京&#x27;, &#x27;2005-09-01&#x27;);</span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (3, &#x27;00003&#x27;, &#x27;韦一笑&#x27;, &#x27;男&#x27;, 38, &#x27;123456789712345670&#x27;, &#x27;上海&#x27;, &#x27;2005-08-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (4, &#x27;00004&#x27;, &#x27;赵敏&#x27;, &#x27;女&#x27;, 18, &#x27;123456757123845670&#x27;, &#x27;北京&#x27;, &#x27;2009-12-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (5, &#x27;00005&#x27;, &#x27;小昭&#x27;, &#x27;女&#x27;, 16, &#x27;123456769012345678&#x27;, &#x27;上海&#x27;, &#x27;2007-07-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (6, &#x27;00006&#x27;, &#x27;杨逍&#x27;, &#x27;男&#x27;, 28, &#x27;12345678931234567X&#x27;, &#x27;北京&#x27;, &#x27;2006-01-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (7, &#x27;00007&#x27;, &#x27;范瑶&#x27;, &#x27;男&#x27;, 40, &#x27;123456789212345670&#x27;, &#x27;北京&#x27;, &#x27;2005-05-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (8, &#x27;00008&#x27;, &#x27;黛绮丝&#x27;, &#x27;女&#x27;, 38, &#x27;123456157123645670&#x27;, &#x27;天津&#x27;, &#x27;2015-05-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (9, &#x27;00009&#x27;, &#x27;范凉凉&#x27;, &#x27;女&#x27;, 45, &#x27;123156789012345678&#x27;, &#x27;北京&#x27;, &#x27;2010-04-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (10, &#x27;00010&#x27;, &#x27;陈友谅&#x27;, &#x27;男&#x27;, 53, &#x27;123456789012345670&#x27;, &#x27;上海&#x27;, &#x27;2011-01-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (11, &#x27;00011&#x27;, &#x27;张士诚&#x27;, &#x27;男&#x27;, 55, &#x27;123567897123465670&#x27;, &#x27;江苏&#x27;, &#x27;2015-05-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (12, &#x27;00012&#x27;, &#x27;常遇春&#x27;, &#x27;男&#x27;, 32, &#x27;123446757152345670&#x27;, &#x27;北京&#x27;, &#x27;2004-02-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (13, &#x27;00013&#x27;, &#x27;张三丰&#x27;, &#x27;男&#x27;, 88, &#x27;123656789012345678&#x27;, &#x27;江苏&#x27;, &#x27;2020-11-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (14, &#x27;00014&#x27;, &#x27;灭绝&#x27;, &#x27;女&#x27;, 65, &#x27;123456719012345670&#x27;, &#x27;西安&#x27;, &#x27;2019-05-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (15, &#x27;00015&#x27;, &#x27;胡青牛&#x27;, &#x27;男&#x27;, 70, &#x27;12345674971234567X&#x27;, &#x27;西安&#x27;, &#x27;2018-04-01&#x27;); </span><br><span class=\"line\">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate) VALUES (16, &#x27;00016&#x27;, &#x27;周芷若&#x27;, &#x27;女&#x27;, 18, null, &#x27;北京&#x27;, &#x27;2012-06-01&#x27;);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"52-基本语法\"><a class=\"markdownIt-Anchor\" href=\"#52-基本语法\">#</a> 5.2 基本语法</h3>\n<ul>\n<li>\n<p>DQL 查询语句，语法结构如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">    字段列表</span><br><span class=\"line\">FROM</span><br><span class=\"line\">    表名字段</span><br><span class=\"line\">WHERE</span><br><span class=\"line\">    条件列表</span><br><span class=\"line\">GROUP BY</span><br><span class=\"line\">    分组字段列表</span><br><span class=\"line\">HAVING</span><br><span class=\"line\">    分组后的条件列表</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">    排序字段列表</span><br><span class=\"line\">LIMIT</span><br><span class=\"line\">    分页参数</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>我们在学习的时候，会将上面的完整语法进行拆分，分为以下几个部分：</p>\n<ul>\n<li>基础查询（不带任何条件）</li>\n<li>条件查询（ <code>WHERE</code> ）</li>\n<li>聚合函数（ <code>count</code> 、 <code>max</code> 、 <code>min</code> 、 <code>avg</code> 、 <code>sum</code> ）</li>\n<li>分组查询（ <code>group by</code> ）</li>\n<li>排序查询（ <code>order by</code> ）</li>\n<li>分页查询（ <code>limit</code> ）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"53-基础查询\"><a class=\"markdownIt-Anchor\" href=\"#53-基础查询\">#</a> 5.3 基础查询</h3>\n<h4 id=\"a语法格式\"><a class=\"markdownIt-Anchor\" href=\"#a语法格式\">#</a> a）语法格式</h4>\n<ul>\n<li>\n<p>查询多个字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段1, 字段2, 字段3 ... FROM 表名 ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * FROM 表名 ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p><strong>注意 : * 号代表查询所有字段，在实际开发中尽量少用（不直观、影响效率）。</strong></p>\n</li>\n<li>\n<p>字段设置别名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段1 [ 别名1 ] , 字段2 [ 别名2 ] ... FROM 表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>去除重复记录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT DISTINCT 字段列表 FROM 表名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"b案例练习\"><a class=\"markdownIt-Anchor\" href=\"#b案例练习\">#</a> b）案例练习</h4>\n<ul>\n<li>\n<p>查询指定字段  <code>name</code> ,  <code>workno</code> ,  <code>age</code>  并返回</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select name,workno,age from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询返回所有字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id, workno, name, gender, age, idcard, workaddress, entrydate from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp; #不推荐</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询所有员工的工作地址，起别名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select workaddress AS &#x27;工作地址&#x27; from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select workaddress &#x27;工作地址&#x27; from emp; #省略AS的写法</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询公司员工的上班地址有哪些（不要重复）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select DISTINCT workaddress from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"54-条件查询\"><a class=\"markdownIt-Anchor\" href=\"#54-条件查询\">#</a> 5.4 条件查询</h3>\n<h4 id=\"a语法格式-2\"><a class=\"markdownIt-Anchor\" href=\"#a语法格式-2\">#</a> a）语法格式</h4>\n<ul>\n<li>\n<p>查询语句中使用 <code>WHERE</code>  条件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表名 WHERE 条件列表 ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"b条件运算符\"><a class=\"markdownIt-Anchor\" href=\"#b条件运算符\">#</a> b）条件运算符</h4>\n<ul>\n<li>\n<p>常用的比较运算符</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">比较运算符</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">&gt;</td>\n<td style=\"text-align:left\">大于</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;=</td>\n<td style=\"text-align:left\">大于等于</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;</td>\n<td style=\"text-align:left\">小于</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;=</td>\n<td style=\"text-align:left\">小于等于</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">=</td>\n<td style=\"text-align:left\">等于</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&gt; 或！=</td>\n<td style=\"text-align:left\">不等于</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">BETWEEN … AND …</td>\n<td style=\"text-align:left\">在某个范围内（含最小、最大值）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IN(…)</td>\n<td style=\"text-align:left\">在 in 之后的列表中的值，多选一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LIKE 占位符</td>\n<td style=\"text-align:left\">模糊匹配（ <code>_</code> 匹配单个字符， <code>%</code>  匹配任意个字符）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IS NULL</td>\n<td style=\"text-align:left\">是 NULL</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>常用的逻辑运算符</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">逻辑运算符</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AND 或 &amp;&amp;</td>\n<td style=\"text-align:left\">并且（多个条件同时成立）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">OR 或 ||</td>\n<td style=\"text-align:left\">或者（多个条件任意一个成立）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">NOT 或！</td>\n<td style=\"text-align:left\">非，不是</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<h4 id=\"c案例练习\"><a class=\"markdownIt-Anchor\" href=\"#c案例练习\">#</a> c）案例练习</h4>\n<ul>\n<li>\n<p>查询年龄等于 88 的员工</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age = 88;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询年龄小于 20 的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age &lt; 20;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询年龄小于等于 20 的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age &lt;= 20;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询没有身份证号的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where idcard is null;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询有身份证号的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where idcard is not null;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询年龄不等于 88 的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age != 88;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age &lt;&gt; 88;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询年龄在 15 岁（包含）到 20 岁（包含）之间的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age &gt;= 15 &amp;&amp; age &lt;= 20;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age &gt;= 15 and age &lt;= 20;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age BETWEEN 15 AND 20;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询性别为 女 且年龄小于 25 岁的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where gender = &#x27;女&#x27; and age &lt; 25;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询年龄等于 18 或 20 或 40 的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age = 18 or age = 20 or age = 40;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where age in(18,20,40);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询姓名为两个字的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where name like &#x27;__&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询身份证号最后一位是 X 的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where idcard like &#x27;%X&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"55-聚合函数\"><a class=\"markdownIt-Anchor\" href=\"#55-聚合函数\">#</a> 5.5 聚合函数</h3>\n<blockquote>\n<p><strong>将一列数据作为一个整体，进行纵向计算。</strong></p>\n</blockquote>\n<h4 id=\"a常见的聚合函数\"><a class=\"markdownIt-Anchor\" href=\"#a常见的聚合函数\">#</a> a）常见的聚合函数</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">count</td>\n<td style=\"text-align:left\">统计数量</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">max</td>\n<td style=\"text-align:left\">最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">min</td>\n<td style=\"text-align:left\">最小值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">avg</td>\n<td style=\"text-align:left\">平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sum</td>\n<td style=\"text-align:left\">求和</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"b语法格式\"><a class=\"markdownIt-Anchor\" href=\"#b语法格式\">#</a> b）语法格式</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 聚合函数(字段列表) FROM 表名 ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p><strong>注意 : NULL 值是不参与所有聚合函数运算的。</strong></p>\n<h4 id=\"c案例练习-2\"><a class=\"markdownIt-Anchor\" href=\"#c案例练习-2\">#</a> c）案例练习</h4>\n<ul>\n<li>\n<p>统计该企业员工数量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(*) from emp; #返回结果是16，统计的是总记录数</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(idcard) from emp; #返回结果是15，统计的是idcard字段不为null的记录数</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(1) from emp; #会统计表中的所有的记录数，包含字段为null 的记录</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p>对于 <code>count(*) </code> 、 <code>count(字段)</code> 、  <code>count(1) </code> 的具体原理，我们在进阶篇中 SQL 优化部分会详细讲解，此处大家只需要知道如何使用即可。</p>\n</li>\n<li>\n<p>统计该企业员工的平均年龄</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select avg(age) from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>统计该企业员工的最大年龄</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select max(age) from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>统计该企业员工的最小年龄</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select min(age) from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>统计西安地区员工的年龄之和</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select sum(age) from emp where workaddress = &#x27;西安&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"56-分组查询\"><a class=\"markdownIt-Anchor\" href=\"#56-分组查询\">#</a> 5.6 分组查询</h3>\n<h4 id=\"a-语法格式\"><a class=\"markdownIt-Anchor\" href=\"#a-语法格式\">#</a> a） 语法格式</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组 后过滤条件 ];</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"bwhere与having区别\"><a class=\"markdownIt-Anchor\" href=\"#bwhere与having区别\">#</a> b）where 与 having 区别</h4>\n<ul>\n<li>执行时机不同： <code>where</code>  是分组之前进行过滤，不满足 <code>where</code>  条件，不参与分组；而 <code>having</code>  是分组之后对结果进行过滤。</li>\n<li>判断条件不同： <code>where</code>  不能对聚合函数进行判断，而 <code>having</code>  可以。</li>\n</ul>\n<h4 id=\"c案例练习-3\"><a class=\"markdownIt-Anchor\" href=\"#c案例练习-3\">#</a> c）案例练习</h4>\n<ul>\n<li>\n<p>根据性别分组，统计男性员工 和 女性员工的数量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select gender, count(*) from emp group by gender ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据性别分组，统计男性员工 和 女性员工的平均年龄</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select gender, avg(age) from emp group by gender ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询年龄小于 45 的员工，并根据工作地址分组，获取员工数量大于等于 3 的工作地址</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT workaddress,count(*) address_count</span><br><span class=\"line\">FROM emp</span><br><span class=\"line\">WHERE age &lt; 45</span><br><span class=\"line\">GROUP BY  workaddress</span><br><span class=\"line\">HAVING address_count &gt;= 3;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>统计各个工作地址上班的男性及女性员工的数量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select workaddress, gender, count(*) &#x27;数量&#x27; from emp group by gender , workaddress ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"57-排序查询\"><a class=\"markdownIt-Anchor\" href=\"#57-排序查询\">#</a> 5.7 排序查询</h3>\n<blockquote>\n<p>排序在日常开发中是非常常见的一个操作，有升序排序，也有降序排序。</p>\n</blockquote>\n<h4 id=\"a语法格式-3\"><a class=\"markdownIt-Anchor\" href=\"#a语法格式-3\">#</a> a）语法格式</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"b排序方式\"><a class=\"markdownIt-Anchor\" href=\"#b排序方式\">#</a> b）排序方式</h4>\n<ul>\n<li><code>ASC</code> : 升序（默认）</li>\n<li><code>DESC</code> : 降序</li>\n</ul>\n<p><strong>注意：如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序。</strong></p>\n<h4 id=\"c案例练习-4\"><a class=\"markdownIt-Anchor\" href=\"#c案例练习-4\">#</a> c）案例练习</h4>\n<ul>\n<li>\n<p>根据年龄对公司的员工进行升序排序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp order by age asc;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp order by age;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据入职时间，对员工进行降序排序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp order by entrydate desc;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据年龄对公司的员工进行升序排序，年龄相同，再按照入职时间进行降序排序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp order by age asc , entrydate desc;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"58-分页查询\"><a class=\"markdownIt-Anchor\" href=\"#58-分页查询\">#</a> 5.8 分页查询</h3>\n<blockquote>\n<p>分页操作在业务系统开发时，也是非常常见的一个功能，我们在网站中看到的各种各样的分页条，后台都需要借助于数据库的分页操作。</p>\n</blockquote>\n<h4 id=\"a语法格式-4\"><a class=\"markdownIt-Anchor\" href=\"#a语法格式-4\">#</a> a）语法格式</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"b注意事项\"><a class=\"markdownIt-Anchor\" href=\"#b注意事项\">#</a> b）注意事项</h4>\n<ul>\n<li>起始索引从 <code>0</code>  开始，<mark>起始索引 = （查询页码 - 1）* 每页显示记录数</mark>。</li>\n<li>分页查询是数据库的方言，<strong>不同的数据库有不同的实现</strong>， <code>MySQL</code>  中是 <code>LIMIT</code> 。</li>\n<li>如果查询的是第一页数据，起始索引可以省略，直接简写为 limit 10。</li>\n</ul>\n<h4 id=\"c案例练习-5\"><a class=\"markdownIt-Anchor\" href=\"#c案例练习-5\">#</a> c）案例练习</h4>\n<ul>\n<li>\n<p>查询第 1 页员工数据，每页展示 10 条记录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp limit 10;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp limit 0,10;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询第 2 页员工数据，每页展示 10 条记录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp limit 10,10;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"59-执行顺序\"><a class=\"markdownIt-Anchor\" href=\"#59-执行顺序\">#</a> 5.9 执行顺序</h3>\n<blockquote>\n<p>在讲解 DQL 语句的具体语法之前，我们已经讲解了 DQL 语句的完整语法，及编写顺序，接下来，我们要来说明的是 DQL 语句在执行时的执行顺序，也就是先执行那一部分，后执行那一部分。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM` ➤ `WHERE `➤ `GROUP BY` ➤ `SELECT `➤ `ORDER BY` ➤ `LIMIT</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220604130048234.png\" alt=\"image-20220604130048234\"></p>\n<h2 id=\"6dcl不重要\"><a class=\"markdownIt-Anchor\" href=\"#6dcl不重要\">#</a> 6.DCL（不重要）</h2>\n<blockquote>\n<p><code>DCL</code>  英文全称是 ** <code>Data Control Language</code> **(数据控制语言)，用来管理数据库用户、控制数据库的访问权限。</p>\n<p>作为 Java 开发程序员的话，我们是无需关心 DCL 这一部分的，因为在实际工作中这不是我们所负责的内容！</p>\n</blockquote>\n<h3 id=\"61-用户管理\"><a class=\"markdownIt-Anchor\" href=\"#61-用户管理\">#</a> 6.1 用户管理</h3>\n<ul>\n<li>\n<p>查询用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USER mysql;</span><br><span class=\"line\">SELECT * FROM user;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>创建用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER &#x27;用户名&#x27;@&#x27;主机名&#x27; IDENTIFIED BY &#x27;密码&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改用户密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER &#x27;用户名&#x27;@&#x27;主机名&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;新密码&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP USER &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>注意：主机名可以使用 % 通配</p>\n<h3 id=\"62-权限控制\"><a class=\"markdownIt-Anchor\" href=\"#62-权限控制\">#</a> 6.2 权限控制</h3>\n<ul>\n<li>\n<p>常用权限</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">权限</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ALL, ALL PRIVILEGES</td>\n<td style=\"text-align:left\">所有权限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SELECT</td>\n<td style=\"text-align:left\">查询数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INSERT</td>\n<td style=\"text-align:left\">插入数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UPDATE</td>\n<td style=\"text-align:left\">修改数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DELETE</td>\n<td style=\"text-align:left\">删除数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ALTER</td>\n<td style=\"text-align:left\">修改表</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DROP</td>\n<td style=\"text-align:left\">删除数据库 / 表 / 视图</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CREATE</td>\n<td style=\"text-align:left\">创建数据库 / 表</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>查询权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW GRANTS FOR &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>授予权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT 权限列表 ON 数据库名.表名 TO &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>撤销权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REVOKE 权限列表 ON 数据库名.表名 FROM &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>注意事项</p>\n<ul>\n<li>多个权限用逗号分隔</li>\n<li>授权时，数据库名和表名可以用  <code>*</code>  进行通配，代表所有</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"二-函数\"><a class=\"markdownIt-Anchor\" href=\"#二-函数\">#</a> 二、函数</h1>\n<blockquote>\n<p><mark>函数</mark>是指一段可以<strong>直接被另一段程序调用</strong>的程序或代码。 也就意味着，这一段程序或代码在 <code>MySQL</code>  中已经给我们提供了，我们要做的就是在合适的业务场景调用对应的函数完成对应的业务需求即可。</p>\n</blockquote>\n<p>Ps：其实很少用到函数的，可以说基本用不到，所以我这就不记那么详细了。</p>\n<h2 id=\"1字符串函数\"><a class=\"markdownIt-Anchor\" href=\"#1字符串函数\">#</a> 1. 字符串函数</h2>\n<ul>\n<li>\n<p>常用函数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">CONCAT(s1, s2, …, sn)</td>\n<td style=\"text-align:left\">字符串拼接，将 s1, s2, …, sn 拼接成一个字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LOWER(str)</td>\n<td style=\"text-align:left\">将字符串全部转为小写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UPPER(str)</td>\n<td style=\"text-align:left\">将字符串全部转为大写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LPAD(str, n, pad)</td>\n<td style=\"text-align:left\">左填充，用字符串 pad 对 str 的左边进行填充，达到 n 个字符串长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">RPAD(str, n, pad)</td>\n<td style=\"text-align:left\">右填充，用字符串 pad 对 str 的右边进行填充，达到 n 个字符串长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TRIM(str)</td>\n<td style=\"text-align:left\">去掉字符串头部和尾部的空格</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SUBSTRING(str, start, len)</td>\n<td style=\"text-align:left\">返回从字符串 str 从 start 位置起的 len 个长度的字符串</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>使用示例</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 拼接</span><br><span class=\"line\">SELECT CONCAT(&#x27;Hello&#x27;, &#x27;World&#x27;);</span><br><span class=\"line\">-- 小写</span><br><span class=\"line\">SELECT LOWER(&#x27;Hello&#x27;);</span><br><span class=\"line\">-- 大写</span><br><span class=\"line\">SELECT UPPER(&#x27;Hello&#x27;);</span><br><span class=\"line\">-- 左填充</span><br><span class=\"line\">SELECT LPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class=\"line\">-- 右填充</span><br><span class=\"line\">SELECT RPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class=\"line\">-- 去除空格</span><br><span class=\"line\">SELECT TRIM(&#x27; Hello World &#x27;);</span><br><span class=\"line\">-- 切片（起始索引为1）</span><br><span class=\"line\">SELECT SUBSTRING(&#x27;Hello World&#x27;, 1, 5);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"2数值函数\"><a class=\"markdownIt-Anchor\" href=\"#2数值函数\">#</a> 2. 数值函数</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">CEIL(x)</td>\n<td style=\"text-align:left\">向上取整</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">FLOOR(x)</td>\n<td style=\"text-align:left\">向下取整</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MOD(x, y)</td>\n<td style=\"text-align:left\">返回 x/y 的模</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">RAND()</td>\n<td style=\"text-align:left\">返回 0~1 内的随机数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ROUND(x, y)</td>\n<td style=\"text-align:left\">求参数 x 的四舍五入值，保留 y 位小数</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3日期函数\"><a class=\"markdownIt-Anchor\" href=\"#3日期函数\">#</a> 3. 日期函数</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">CURDATE()</td>\n<td style=\"text-align:left\">返回当前日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CURTIME()</td>\n<td style=\"text-align:left\">返回当前时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">NOW()</td>\n<td style=\"text-align:left\">返回当前日期和时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">YEAR(date)</td>\n<td style=\"text-align:left\">获取指定 date 的年份</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MONTH(date)</td>\n<td style=\"text-align:left\">获取指定 date 的月份</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DAY(date)</td>\n<td style=\"text-align:left\">获取指定 date 的日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DATE_ADD(date, INTERVAL expr type)</td>\n<td style=\"text-align:left\">返回一个日期 / 时间值加上一个时间间隔 expr 后的时间值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DATEDIFF(date1, date2)</td>\n<td style=\"text-align:left\">返回起始时间 date1 和结束时间 date2 之间的天数</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4流程函数\"><a class=\"markdownIt-Anchor\" href=\"#4流程函数\">#</a> 4. 流程函数</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">IF(value, t, f)</td>\n<td style=\"text-align:left\">如果 value 为 true，则返回 t，否则返回 f</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IFNULL(value1, value2)</td>\n<td style=\"text-align:left\">如果 value1 不为空，返回 value1，否则返回 value2</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CASE WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td>\n<td style=\"text-align:left\">如果 val1 为 true，返回 res1，… 否则返回 default 默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td>\n<td style=\"text-align:left\">如果 expr 的值等于 val1，返回 res1，… 否则返回 default 默认值</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"三-约束\"><a class=\"markdownIt-Anchor\" href=\"#三-约束\">#</a> 三、约束</h1>\n<blockquote>\n<p>约束是作用于表中字段上的规则，用于限制存储在表中的数据。</p>\n</blockquote>\n<p>Ps：我们仅需了解约束的含义即可，实际开发中这都是在建表时就已经确定了的。</p>\n<h2 id=\"1常用约束\"><a class=\"markdownIt-Anchor\" href=\"#1常用约束\">#</a> 1. 常用约束</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">约束</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">非空约束</td>\n<td style=\"text-align:left\">限制该字段的数据不能为 null</td>\n<td style=\"text-align:left\">NOT NULL</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">唯一约束</td>\n<td style=\"text-align:left\">保证该字段的所有数据都是唯一、不重复的</td>\n<td style=\"text-align:left\">UNIQUE</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">主键约束</td>\n<td style=\"text-align:left\">主键是一行数据的唯一标识，要求非空且唯一</td>\n<td style=\"text-align:left\">PRIMARY KEY</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">默认约束</td>\n<td style=\"text-align:left\">保存数据时，如果未指定该字段的值，则采用默认值</td>\n<td style=\"text-align:left\">DEFAULT</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">检查约束（8.0.1 版本后）</td>\n<td style=\"text-align:left\">保证字段值满足某一个条件</td>\n<td style=\"text-align:left\">CHECK</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">外键约束</td>\n<td style=\"text-align:left\">用来让两张图的数据之间建立连接，保证数据的一致性和完整性</td>\n<td style=\"text-align:left\">FOREIGN KEY</td>\n</tr>\n</tbody>\n</table>\n<p>约束是作用于表中字段上的，可以在创建表 / 修改表的时候添加约束。</p>\n<h2 id=\"2外键约束\"><a class=\"markdownIt-Anchor\" href=\"#2外键约束\">#</a> 2. 外键约束</h2>\n<blockquote>\n<p>用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性</p>\n</blockquote>\n<ul>\n<li>\n<p>建表时添加外键约束</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE 表名(</span><br><span class=\"line\">    字段名 字段类型,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    [CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名)</span><br><span class=\"line\">);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>建表后添加外键约束</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名) REFERENCES 主表(主表列名);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除外键</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 DROP FOREIGN KEY 外键名;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>删除 / 更新行为</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">行为</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">NO ACTION</td>\n<td style=\"text-align:left\">当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除 / 更新（与 RESTRICT 一致）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">RESTRICT</td>\n<td style=\"text-align:left\">当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除 / 更新（与 NO ACTION 一致）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CASCADE</td>\n<td style=\"text-align:left\">当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则也删除 / 更新外键在子表中的记录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SET NULL</td>\n<td style=\"text-align:left\">当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为 null（要求该外键允许为 null）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SET DEFAULT</td>\n<td style=\"text-align:left\">父表有变更时，子表将外键设为一个默认值（Innodb 不支持）</td>\n</tr>\n</tbody>\n</table>\n<p>更改删除 / 更新行为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE 行为 ON DELETE 行为;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h1 id=\"三-多表查询\"><a class=\"markdownIt-Anchor\" href=\"#三-多表查询\">#</a> 三、多表查询</h1>\n<blockquote>\n<p>我们之前在讲解 SQL 语句的时候，讲解了 DQL 语句，也就是数据查询语句，但是之前讲解的查询都是单表查询，而本章节我们要学习的则是多表查询操作。</p>\n</blockquote>\n<p>Ps：相较于约束来讲，本章确实是个重点，多表联查会在开发中经常用到，因此需要认真学习！！！</p>\n<h2 id=\"1多表关系\"><a class=\"markdownIt-Anchor\" href=\"#1多表关系\">#</a> 1. 多表关系</h2>\n<p>项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：</p>\n<ol>\n<li><strong>一对多（多对一）</strong></li>\n<li><strong>多对多</strong></li>\n<li><strong>一对一</strong></li>\n</ol>\n<h3 id=\"11-一对多\"><a class=\"markdownIt-Anchor\" href=\"#11-一对多\">#</a> 1.1 一对多</h3>\n<ul>\n<li>案例：部门 与 员工的关系</li>\n<li>关系：一个部门对应多个员工，一个员工对应一个部门</li>\n<li>实现：在多的一方建立外键，指向一的一方的主键</li>\n</ul>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220604201130760.png\" alt=\"image-20220604201130760\"></p>\n<h3 id=\"12-多对多\"><a class=\"markdownIt-Anchor\" href=\"#12-多对多\">#</a> 1.2 多对多</h3>\n<ul>\n<li>案例：学生 与 课程的关系</li>\n<li>关系：一个学生可以选修多门课程，一门课程也可以供多个学生选择</li>\n<li>实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</li>\n</ul>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220604201411978.png\" alt=\"image-20220604201411978\"></p>\n<h3 id=\"13-一对一\"><a class=\"markdownIt-Anchor\" href=\"#13-一对一\">#</a> 1.3 一对一</h3>\n<ul>\n<li>案例：用户 与 用户详情的关系</li>\n<li>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率</li>\n<li>实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的 (UNIQUE)</li>\n</ul>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220604201513196.png\" alt=\"image-20220604201513196\"></p>\n<h2 id=\"2多表查询概述\"><a class=\"markdownIt-Anchor\" href=\"#2多表查询概述\">#</a> 2. 多表查询概述</h2>\n<h3 id=\"21-数据准备\"><a class=\"markdownIt-Anchor\" href=\"#21-数据准备\">#</a> 2.1 数据准备</h3>\n<ul>\n<li>\n<p>删除之前的 emp, dept 表</p>\n</li>\n<li>\n<p>执行下面 SQL 语句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE dept (</span><br><span class=\"line\">\tid int PRIMARY KEY AUTO_INCREMENT COMMENT &#x27;ID&#x27;,</span><br><span class=\"line\">\tname varchar(50) NOT NULL COMMENT &#x27;部门名称&#x27;</span><br><span class=\"line\">) COMMENT &#x27;部门表&#x27;;</span><br><span class=\"line\">INSERT INTO dept (id, name) VALUES (1, &#x27;研发部&#x27;), (2, &#x27;市场部&#x27;),(3, &#x27;财务部&#x27;), (4, &#x27;销售部&#x27;), (5, &#x27;总经办&#x27;), (6, &#x27;人事部&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE emp (</span><br><span class=\"line\">\tid int PRIMARY KEY AUTO_INCREMENT COMMENT &#x27;ID&#x27;,</span><br><span class=\"line\">\tname varchar(50) NOT NULL COMMENT &#x27;姓名&#x27;,</span><br><span class=\"line\">\tage int COMMENT &#x27;年龄&#x27;,</span><br><span class=\"line\">\tjob varchar(20) COMMENT &#x27;职位&#x27;,</span><br><span class=\"line\">\tsalary int COMMENT &#x27;薪资&#x27;,</span><br><span class=\"line\">\tentrydate date COMMENT &#x27;入职时间&#x27;,</span><br><span class=\"line\">\tmanagerid int COMMENT &#x27;直属领导ID&#x27;,</span><br><span class=\"line\">\tdept_id int COMMENT &#x27;部门ID&#x27;</span><br><span class=\"line\">) COMMENT &#x27;员工表&#x27;;</span><br><span class=\"line\">alter table emp add constraint fk_emp_dept_id foreign key (dept_id) references dept(id);</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO emp (id, name, age, job,salary, entrydate, managerid, dept_id)</span><br><span class=\"line\">VALUES</span><br><span class=\"line\">    (1, &#x27;金庸&#x27;, 66, &#x27;总裁&#x27;, 20000, &#x27;2000-01-01&#x27;, null, 5),</span><br><span class=\"line\">    (2, &#x27;张无忌&#x27;, 20, &#x27;项目经理&#x27;, 12500, &#x27;2005-12-05&#x27;, 1, 1),</span><br><span class=\"line\">    (3, &#x27;杨逍&#x27;, 33, &#x27;开发&#x27;, 8400, &#x27;2000-11-03&#x27;, 2, 1),</span><br><span class=\"line\">    (4, &#x27;韦一笑&#x27;, 48, &#x27;开发&#x27;, 11000, &#x27;2002-02-05&#x27;, 2, 1),</span><br><span class=\"line\">    (5, &#x27;常遇春&#x27;, 43, &#x27;开发&#x27;, 10500, &#x27;2004-09-07&#x27;, 3, 1),</span><br><span class=\"line\">    (6, &#x27;小昭&#x27;, 19, &#x27;程序员鼓励师&#x27;, 6600, &#x27;2004-10-12&#x27;, 2, 1),</span><br><span class=\"line\">    (7, &#x27;灭绝&#x27;, 60, &#x27;财务总监&#x27;, 8500, &#x27;2002-09-12&#x27;, 1, 3),</span><br><span class=\"line\">    (8, &#x27;周芷若&#x27;, 19, &#x27;会计&#x27;, 48000, &#x27;2006-06-02&#x27;, 7, 3),</span><br><span class=\"line\">    (9, &#x27;丁敏君&#x27;, 23, &#x27;出纳&#x27;, 5250, &#x27;2009-05-13&#x27;, 7, 3),</span><br><span class=\"line\">    (10, &#x27;赵敏&#x27;, 20, &#x27;市场部总监&#x27;, 12500, &#x27;2004-10-12&#x27;, 1, 2),</span><br><span class=\"line\">    (11, &#x27;鹿杖客&#x27;, 56, &#x27;职员&#x27;, 3750, &#x27;2006-10-03&#x27;, 10, 2),</span><br><span class=\"line\">    (12, &#x27;鹤笔翁&#x27;, 19, &#x27;职员&#x27;, 3750, &#x27;2007-05-09&#x27;, 10, 2),</span><br><span class=\"line\">    (13, &#x27;方东白&#x27;, 19, &#x27;职员&#x27;, 5500, &#x27;2009-02-12&#x27;, 10, 2),</span><br><span class=\"line\">    (14, &#x27;张三丰&#x27;, 88, &#x27;销售总监&#x27;, 14000, &#x27;2004-10-12&#x27;, 1, 4),</span><br><span class=\"line\">    (15, &#x27;俞莲舟&#x27;, 38, &#x27;销售&#x27;, 4600, &#x27;2004-10-12&#x27;, 14, 4),</span><br><span class=\"line\">    (16, &#x27;宋远桥&#x27;, 40, &#x27;销售&#x27;, 4600, &#x27;2004-10-12&#x27;, 14, 4),</span><br><span class=\"line\">    (17, &#x27;陈友谅&#x27;, 42, null, 2000, &#x27;2011-10-12&#x27;, 1, null);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"22-笛卡尔积\"><a class=\"markdownIt-Anchor\" href=\"#22-笛卡尔积\">#</a> 2.2 笛卡尔积</h3>\n<blockquote>\n<p>笛卡尔乘积是指在数学中，两个集合 A 集合 和 B 集合 的所有组合情况。</p>\n</blockquote>\n<ul>\n<li>\n<p>这是我们查单表的 SQL 语句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>那么我们要执行多表查询，就只需要使用逗号分隔多张表即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp , dept;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>但是这个时候查出来的结果却是 102 条记录</p>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605080339628.png\" alt=\"image-20220605080339628\"></p>\n<p>与 部门表 dept 所有记录 (6) 的所有组合情况，这种现象称之为笛卡尔积。</p>\n</li>\n</ul>\n<blockquote>\n<p>在 SQL 语句中，如何来去除无效的笛卡尔积呢？ 我们可以给多表查询加上连接查询的条件即可。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp , dept where emp.dept_id = dept.id;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605080630910.png\" alt=\"image-20220605080630910\"></p>\n<p>而由于 id 为 17 的员工，没有 <code>dept_id</code>  字段值，所以在多表查询时，根据连接查询的条件并没有查询到。</p>\n<h3 id=\"23-分类\"><a class=\"markdownIt-Anchor\" href=\"#23-分类\">#</a> 2.3 分类</h3>\n<blockquote>\n<p>多表查询又分为以下两大类：</p>\n</blockquote>\n<ul>\n<li>连接查询\n<ul>\n<li>内连接：相当于查询 A、B 交集部分数据</li>\n<li>外连接：\n<ul>\n<li>左外连接：查询左表所有数据，以及两张表交集部分数据</li>\n<li>右外连接：查询右表所有数据，以及两张表交集部分数据</li>\n</ul>\n</li>\n<li>自连接：当前表与自身的连接查询，自连接必须使用表别名</li>\n</ul>\n</li>\n<li>子查询</li>\n</ul>\n<h2 id=\"3内连接\"><a class=\"markdownIt-Anchor\" href=\"#3内连接\">#</a> 3. 内连接</h2>\n<blockquote>\n<p>内连接查询的是两张表交集部分的数据。(也就是绿色部分的数据)</p>\n</blockquote>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605081106113.png\" alt=\"image-20220605081106113\"></p>\n<p>内连接的语法分为两种：<strong>隐式内连接</strong>、<strong>显式内连接</strong>。</p>\n<h3 id=\"31-语法格式\"><a class=\"markdownIt-Anchor\" href=\"#31-语法格式\">#</a> 3.1 语法格式</h3>\n<ul>\n<li>\n<p>隐式内连接</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表1 , 表2 WHERE 条件 ... ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>显式内连接</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ... ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"32-案例练习\"><a class=\"markdownIt-Anchor\" href=\"#32-案例练习\">#</a> 3.2 案例练习</h3>\n<ul>\n<li>查询每一个员工的姓名，及关联的部门的名称 (隐式内连接实现)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select e.`name`, d.`name` from emp e,dept d where e.dept_id = d.id;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>查询每一个员工的姓名，及关联的部门的名称 (显式内连接实现)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select e.`name`, d.`name` from emp e join dept d on e.dept_id = d.id;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"4外连接\"><a class=\"markdownIt-Anchor\" href=\"#4外连接\">#</a> 4. 外连接</h2>\n<blockquote>\n<p>外连接和内连接一样查询的都是两个表交集的数据，不同的是左外连接会查询左表的全部数据以及交集数据，右外连接与之相对。</p>\n</blockquote>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605081106113.png\" alt=\"image-20220605081106113\"></p>\n<h3 id=\"41-语法格式\"><a class=\"markdownIt-Anchor\" href=\"#41-语法格式\">#</a> 4.1 语法格式</h3>\n<ul>\n<li>\n<p>左外连接</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ... ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>右外连接</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ...;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"42-案例练习\"><a class=\"markdownIt-Anchor\" href=\"#42-案例练习\">#</a> 4.2 案例练习</h3>\n<ul>\n<li>\n<p>查询 <code>emp</code>  表的所有数据，和对应的部门信息（左外）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select e.*,d.name from emp e left join dept d on e.dept_id = d.id;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询 <code>dept</code>  表的所有数据，和对应的员工信息（右外）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select e.*,d.name from emp e right join dept d on e.dept_id = d.id;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>左外连接和右外连接是可以相互替换的，只需要调整在连接查询时 SQL 中，表结构的先后顺序就可以了。而我们在日常开发使用时，更偏向于左外连接。</p>\n<h2 id=\"5自连接\"><a class=\"markdownIt-Anchor\" href=\"#5自连接\">#</a> 5. 自连接</h2>\n<h3 id=\"51-自链接查询\"><a class=\"markdownIt-Anchor\" href=\"#51-自链接查询\">#</a> 5.1 自链接查询</h3>\n<blockquote>\n<p>当前表与自身的连接查询，自连接必须使用表别名</p>\n</blockquote>\n<ul>\n<li>\n<p>语法格式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ...;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p>自连接查询，可以是内连接查询，也可以是外连接查询</p>\n</li>\n<li>\n<p>案例练习</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 查询员工及其所属领导的名字</span><br><span class=\"line\">select a.name, b.name from employee a, employee b where a.manager = b.id;</span><br><span class=\"line\">-- 没有领导的也查询出来</span><br><span class=\"line\">select a.name, b.name from employee a left join employee b on a.manager = b.id;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"52-联合查询\"><a class=\"markdownIt-Anchor\" href=\"#52-联合查询\">#</a> 5.2 联合查询</h3>\n<blockquote>\n<p>把多次查询的结果合并，形成一个新的查询集，其实就是吧两个查询语句给连起来了。</p>\n</blockquote>\n<ul>\n<li>\n<p>语法格式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT 字段列表 FROM 表A ...</span><br><span class=\"line\">UNION [ALL]</span><br><span class=\"line\">SELECT 字段列表 FROM 表B ...</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>注意事项</p>\n<ul>\n<li>UNION ALL 会有重复结果，UNION 不会</li>\n<li>联合查询比使用 or 效率高，不会使索引失效</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6子查询\"><a class=\"markdownIt-Anchor\" href=\"#6子查询\">#</a> 6. 子查询</h2>\n<h3 id=\"61-概述\"><a class=\"markdownIt-Anchor\" href=\"#61-概述\">#</a> 6.1 概述</h3>\n<blockquote>\n<p>SQL 语句中嵌套 SELECT 语句，称为嵌套查询，又称子查询。</p>\n</blockquote>\n<ul>\n<li>\n<p>语法格式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p>子查询外部的语句可以是 <code>INSERT </code> /  <code>UPDATE </code> /  <code>DELETE </code> /  <code>SELECT </code> 的任何一个。</p>\n</li>\n<li>\n<p>根据子查询结果不同，分为：</p>\n<ul>\n<li>标量子查询（子查询结果为单个值）</li>\n<li>列子查询（子查询结果为一列）</li>\n<li>行子查询（子查询结果为一行）</li>\n<li>表子查询（子查询结果为多行多列）</li>\n</ul>\n</li>\n<li>\n<p>根据子查询位置，分为：</p>\n<ul>\n<li>WHERE 之后</li>\n<li>FROM 之后</li>\n<li>SELECT 之后</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"62-标量子查询\"><a class=\"markdownIt-Anchor\" href=\"#62-标量子查询\">#</a> 6.2 标量子查询</h3>\n<blockquote>\n<p>子查询返回的结果是单个值（数字、字符串、日期等），最简单的形式，这种子查询称为标量子查询。</p>\n</blockquote>\n<p>常用操作符： <code>- &lt; &gt; &gt; &gt;= &lt; &lt;=</code></p>\n<p>案例练习：</p>\n<ul>\n<li>\n<p>查询 “销售部” 的所有员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where dept_id = (select id from dept where name = &#x27;销售部&#x27;);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询在 “方东白” 入职之后的员工信息</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where entrydate &gt; (select entrydate from emp where name = &#x27;方东白&#x27;);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h3 id=\"63-列子查询\"><a class=\"markdownIt-Anchor\" href=\"#63-列子查询\">#</a> 6.3 列子查询</h3>\n<blockquote>\n<p>子查询返回的结果是一列（可以是多行），这种子查询称为列子查询。</p>\n</blockquote>\n<p>常用的操作符： <code>IN 、NOT IN 、 ANY 、SOME 、 ALL</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">操作符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">IN</td>\n<td style=\"text-align:left\">在指定的集合范围内，多选一</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">NOT IN</td>\n<td style=\"text-align:left\">不在指定的集合范围内</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ANY</td>\n<td style=\"text-align:left\">子查询返回列表中，有任意一个满足即可</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SOME</td>\n<td style=\"text-align:left\">与 ANY 等同，使用 SOME 的地方都可以使用 ANY</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ALL</td>\n<td style=\"text-align:left\">子查询返回列表的所有值都必须满足</td>\n</tr>\n</tbody>\n</table>\n<p>案例练习：</p>\n<ul>\n<li>\n<p>查询 “销售部” 和 “市场部” 的所有员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where dept_id in (select id from dept where name = &#x27;销售部&#x27; or name = &#x27;市场部&#x27;);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询比 “财务部” 所有人工资都高的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where salary &gt; all ( select salary from emp where dept_id = (select id from dept where name = &#x27;财务部&#x27;) );</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询比研发部其中任意一人工资高的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where salary &gt; any ( select salary from emp where dept_id = (select id from dept where name = &#x27;研发部&#x27;) );</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"64-行子查询\"><a class=\"markdownIt-Anchor\" href=\"#64-行子查询\">#</a> 6.4 行子查询</h3>\n<blockquote>\n<p>子查询返回的结果是一行（可以是多列），这种子查询称为行子查询。</p>\n</blockquote>\n<p>常用的操作符： <code>= 、&lt;&gt; 、IN 、NOT IN</code></p>\n<p>案例练习：</p>\n<ul>\n<li>查询与 “张无忌” 的薪资及直属领导相同的员工信息；</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where (salary,managerid) = (select salary, managerid from emp where name = &#x27;张无忌&#x27;);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h3 id=\"65-表子查询\"><a class=\"markdownIt-Anchor\" href=\"#65-表子查询\">#</a> 6.5 表子查询</h3>\n<blockquote>\n<p>子查询返回的结果是多行多列，这种子查询称为表子查询。</p>\n</blockquote>\n<p>常用操作符： <code>IN</code></p>\n<p>案例练习：</p>\n<ul>\n<li>\n<p>查询与 “鹿杖客” , “宋远桥” 的职位和薪资相同的员工信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from emp where (job,salary) in ( select job, salary from emp where name = &#x27;鹿杖客&#x27; or name = &#x27;宋远桥&#x27; );</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询入职日期是 “2006-01-01” 之后的员工信息，及其部门信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select e.*, d.* from (select * from emp where entrydate &gt; &#x27;2006-01-01&#x27;) e left join dept d on e.dept_id = d.id ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"四-事务\"><a class=\"markdownIt-Anchor\" href=\"#四-事务\">#</a> 四、事务</h1>\n<h2 id=\"1事务简介\"><a class=\"markdownIt-Anchor\" href=\"#1事务简介\">#</a> 1. 事务简介</h2>\n<blockquote>\n<p><strong>事务</strong>是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p>\n</blockquote>\n<p>举例说明：</p>\n<p>张三给李四转账 1000 块钱，张三银行账户的钱<mark>减少 1000</mark>，而李四银行账户的钱要<mark>增加 1000</mark>。 这一组操作就必须在一个事务的范围内，<strong>要么都成功</strong>，<strong>要么都失败</strong>。</p>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605121214330.png\" alt=\"image-20220605121214330\"></p>\n<p><strong>注意： 默认 MySQL 的事务是自动提交的，也就是说，当执行完一条 DML 语句时，MySQL 会立即隐式的提交事务。</strong></p>\n<h2 id=\"2事务操作\"><a class=\"markdownIt-Anchor\" href=\"#2事务操作\">#</a> 2. 事务操作</h2>\n<h3 id=\"21-数据准备-2\"><a class=\"markdownIt-Anchor\" href=\"#21-数据准备-2\">#</a> 2.1 数据准备</h3>\n<blockquote>\n<p>在开始学习事务之前需要先执行以下 SQL 语句来导入数据。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop table if exists account;</span><br><span class=\"line\"></span><br><span class=\"line\">create table account(</span><br><span class=\"line\">    id int primary key AUTO_INCREMENT comment &#x27;ID&#x27;,</span><br><span class=\"line\">    name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class=\"line\">    money double(10, 2) comment &#x27;余额&#x27;</span><br><span class=\"line\">) comment &#x27;账户表&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">insert into account(name, money) VALUES (&#x27;张三&#x27;, 2000),(&#x27;李四&#x27;, 2000);</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h3 id=\"22-未控制事务\"><a class=\"markdownIt-Anchor\" href=\"#22-未控制事务\">#</a> 2.2 未控制事务</h3>\n<blockquote>\n<p>当前情境下事务是 MySQL 默认的事务，也就是每执行一句更新操作都将由 MySQL 自动隐式提交。</p>\n</blockquote>\n<ul>\n<li>\n<p>测试转账操作的正常情况</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 1. 查询张三余额 </span><br><span class=\"line\">select * from account where name = &#x27;张三&#x27;; </span><br><span class=\"line\">-- 2. 张三的余额减少1000 </span><br><span class=\"line\">update account set money = money - 1000 where name = &#x27;张三&#x27;; </span><br><span class=\"line\">-- 3. 李四的余额增加1000 </span><br><span class=\"line\">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605122748424.png\" alt=\"image-20220605122748424\"></p>\n</li>\n<li>\n<p>测试异常情况（执行之前先将两个人的余额都恢复到 2000）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 1. 查询张三余额 </span><br><span class=\"line\">select * from account where name = &#x27;张三&#x27;; </span><br><span class=\"line\">-- 2. 张三的余额减少1000 </span><br><span class=\"line\">update account set money = money - 1000 where name = &#x27;张三&#x27;; </span><br><span class=\"line\">出错了...</span><br><span class=\"line\">-- 3. 李四的余额增加1000 </span><br><span class=\"line\">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605123015353.png\" alt=\"image-20220605123015353\"></p>\n</li>\n</ul>\n<p>通过上面的两种情况演示，我们得知如果是异常情况的话，这种错误是非常致命的，假如真的是两个人之间的转账，一方钱减少了，另一方却没有增加的话，用户必定会勃然大怒，因此我们需要通过控制事务的方式来避免这种情况的出现！</p>\n<h3 id=\"23-控制事务一不常用\"><a class=\"markdownIt-Anchor\" href=\"#23-控制事务一不常用\">#</a> 2.3 控制事务一（不常用）</h3>\n<ul>\n<li>\n<p>查看 / 设置事务提交方式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT @@autocommit ; </span><br><span class=\"line\">SET @@autocommit = 0 ;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>提交事务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COMMIT;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>回滚事务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ROLLBACK;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>注意</strong>：上述的这种方式，我们是修改了事务的自动提交行为，把默认的自动提交修改为了手动提交，此时我们执行的 DML 语句都不会提交，需要手动的执行 <code>commit</code>  进行提交。</p>\n<h3 id=\"24-控制事务二常用\"><a class=\"markdownIt-Anchor\" href=\"#24-控制事务二常用\">#</a> 2.4 控制事务二（常用）</h3>\n<ul>\n<li>\n<p>开启事务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">START TRANSACTION 或 BEGIN TRANSACTION;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>提交事务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COMMIT;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>回滚事务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ROLLBACK;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"25-转账案例\"><a class=\"markdownIt-Anchor\" href=\"#25-转账案例\">#</a> 2.5 转账案例</h3>\n<blockquote>\n<p>接下来通过控制事务的方式演示一遍转账操作。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 开启事务 </span><br><span class=\"line\">start transaction </span><br><span class=\"line\">-- 1. 查询张三余额 </span><br><span class=\"line\">select * from account where name = &#x27;张三&#x27;; </span><br><span class=\"line\">-- 2. 张三的余额减少1000 </span><br><span class=\"line\">update account set money = money - 1000 where name = &#x27;张三&#x27;; </span><br><span class=\"line\">-- 3. 李四的余额增加1000 </span><br><span class=\"line\">update account set money = money + 1000 where name = &#x27;李四&#x27;; </span><br><span class=\"line\">-- 如果正常执行完毕, 则提交事务 </span><br><span class=\"line\">commit; </span><br><span class=\"line\">-- 如果执行过程中报错, 则回滚事务 </span><br><span class=\"line\">-- rollback;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<h2 id=\"3事务四大特性acid\"><a class=\"markdownIt-Anchor\" href=\"#3事务四大特性acid\">#</a> 3. 事务四大特性（ACID）</h2>\n<ul>\n<li>原子性 ( <code>Atomicity</code> )：事务是不可分割的最小操作但愿，要么全部成功，要么全部失败</li>\n<li>一致性 ( <code>Consistency</code> )：事务完成时，必须使所有数据都保持一致状态</li>\n<li>隔离性 ( <code>Isolation</code> )：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li>\n<li>持久性 ( <code>Durability</code> )：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li>\n</ul>\n<h2 id=\"4并发事务问题\"><a class=\"markdownIt-Anchor\" href=\"#4并发事务问题\">#</a> 4. 并发事务问题</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">问题</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">脏读</td>\n<td style=\"text-align:left\">一个事务读到另一个事务还没提交的数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">不可重复读</td>\n<td style=\"text-align:left\">一个事务先后读取同一条记录，但两次读取的数据不同</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">幻读</td>\n<td style=\"text-align:left\">一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>赃读（比如 B 读取到了 A 未提交的数据）</p>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605125309397.png\" alt=\"image-20220605125309397\"></p>\n</li>\n<li>\n<p>不可重复读（事务 A 两次读取同一条记录，但是读取到的数据却是不一样的）</p>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605125417374.png\" alt=\"image-20220605125417374\"></p>\n</li>\n<li>\n<p>幻读</p>\n<p><img src=\"https://image-bed-vz.oss-cn-hangzhou.aliyuncs.com/MySQL/image-20220605125445124.png\" alt=\"image-20220605125445124\"></p>\n</li>\n</ul>\n<h2 id=\"5事务隔离级别\"><a class=\"markdownIt-Anchor\" href=\"#5事务隔离级别\">#</a> 5. 事务隔离级别</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">隔离级别</th>\n<th style=\"text-align:left\">脏读</th>\n<th style=\"text-align:left\">不可重复读</th>\n<th style=\"text-align:left\">幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Read uncommitted</td>\n<td style=\"text-align:left\">√</td>\n<td style=\"text-align:left\">√</td>\n<td style=\"text-align:left\">√</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Read committed</td>\n<td style=\"text-align:left\">×</td>\n<td style=\"text-align:left\">√</td>\n<td style=\"text-align:left\">√</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Repeatable Read (默认)</strong></td>\n<td style=\"text-align:left\">×</td>\n<td style=\"text-align:left\">×</td>\n<td style=\"text-align:left\">√</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Serializable</td>\n<td style=\"text-align:left\">×</td>\n<td style=\"text-align:left\">×</td>\n<td style=\"text-align:left\">×</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>√表示在当前隔离级别下该问题会出现</p>\n</li>\n<li>\n<p><code>Serializable </code> 性能最低； <code>Read uncommitted</code>  性能最高，数据安全性最差</p>\n</li>\n<li>\n<p>查看事务隔离级别： <code>SELECT @@TRANSACTION_ISOLATION;</code></p>\n</li>\n<li>\n<p>设置事务隔离级别：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE &#125;;</span><br><span class=\"line\">sql</span><br></pre></td></tr></table></figure>\n<p><code>SESSION </code> 是会话级别，表示只针对当前会话有效， <code>GLOBAL </code> 表示对所有会话有效</p>\n</li>\n</ul>\n",
            "tags": [
                "数据库",
                "学习",
                "教程"
            ]
        },
        {
            "id": "http://laz0825.cn/passages/17/",
            "url": "http://laz0825.cn/passages/17/",
            "title": "使用java将ResultSet中的数据打印成表格",
            "date_published": "2022-07-04T10:43:15.000Z",
            "content_html": "<h1 id=\"背景介绍\"><a class=\"markdownIt-Anchor\" href=\"#背景介绍\">#</a> 背景介绍</h1>\n<p>在写课设的时候呢，有一个需求是将数据库的数据输出到控制台，最好是格式化输出。</p>\n<p>刚开始的时候我使用的方法是使用 select 语句讲数据拿到 ResultSet 中，之后将数据一条一条的放进对象中，之后放进 Arraylist 中来遍历输出。这种方法的效率较低，占用的时间空间都比较大。于是开始寻找一些方便好用的格式化输出 ResultSet 数据的方法，最终在参考了一些资料后整理出了这个方法。</p>\n<h1 id=\"需求描述\"><a class=\"markdownIt-Anchor\" href=\"#需求描述\">#</a> 需求描述</h1>\n<p><code>MySQL</code>  的查询语句输出如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from student;</span><br><span class=\"line\">+------------+-----------+-----------+</span><br><span class=\"line\">| id         | name      | phone     |</span><br><span class=\"line\">+------------+-----------+-----------+</span><br><span class=\"line\">| <span class=\"number\">2007040901</span> | 小亮      | <span class=\"number\">789789789</span> |</span><br><span class=\"line\">| <span class=\"number\">2007040902</span> | 小白      | <span class=\"number\">852852852</span> |</span><br><span class=\"line\">| <span class=\"number\">2007040903</span> | 小明      | <span class=\"number\">123123123</span> |</span><br><span class=\"line\">| <span class=\"number\">2007040904</span> | 小红      | <span class=\"number\">456456456</span> |</span><br><span class=\"line\">| <span class=\"number\">2007040905</span> | 大飞      | <span class=\"number\">456645564</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041001</span> | 小青      | <span class=\"number\">123456789</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041002</span> | 小飞      | <span class=\"number\">321654987</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041003</span> | 小跑      | <span class=\"number\">963852741</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041004</span> | 大白      | <span class=\"number\">789789789</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041101</span> | 小王      | <span class=\"number\">111222333</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041102</span> | 小星      | <span class=\"number\">444555666</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041103</span> | 小义      | <span class=\"number\">777888999</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041104</span> | 萧山      | <span class=\"number\">111444777</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041105</span> | 大王      | <span class=\"number\">123123123</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041201</span> | 赵小花    | <span class=\"number\">222555888</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041202</span> | 赵大花    | <span class=\"number\">333666999</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041203</span> | 赵老花    | <span class=\"number\">159357123</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041204</span> | 赵仙花    | <span class=\"number\">623847456</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041205</span> | 大力      | <span class=\"number\">915915159</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041301</span> | 郭小凯    | <span class=\"number\">159159159</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041302</span> | 郭大凯    | <span class=\"number\">357357357</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041303</span> | 郭老凯    | <span class=\"number\">852852852</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041304</span> | 郭仙凯    | <span class=\"number\">963963963</span> |</span><br><span class=\"line\">| <span class=\"number\">2007041305</span> | 大明      | <span class=\"number\">357537753</span> |</span><br><span class=\"line\">+------------+-----------+-----------+</span><br><span class=\"line\"><span class=\"number\">24</span> <span class=\"function\">rows in <span class=\"title\">set</span> <span class=\"params\">(<span class=\"number\">0.00</span> sec)</span></span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>JDBC</code>  执行上述的查询语句，将结果集中的查询结果以表格的形式打印出来。</p>\n<h1 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h1>\n<ul>\n<li>通过结果集的元数据可以知道结果集中的列数，和列名.</li>\n<li>然后遍历结果集，分别统计每一列中的最大字符数。</li>\n<li>然后通过 <code>System.out.printf()</code>  方法进行格式化输出。</li>\n</ul>\n<h1 id=\"具体实现\"><a class=\"markdownIt-Anchor\" href=\"#具体实现\">#</a> 具体实现</h1>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSetMetaData;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 结果集打印机.将结果集中的数据打印成表格.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ResultSetPrinter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printResultSet</span><span class=\"params\">(ResultSet rs)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        ResultSetMetaData resultSetMetaData = rs.getMetaData();</span><br><span class=\"line\">        <span class=\"comment\">// 获取列数</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> ColumnCount = resultSetMetaData.getColumnCount();</span><br><span class=\"line\">        <span class=\"comment\">// 保存当前列最大长度的数组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] columnMaxLengths = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[ColumnCount];</span><br><span class=\"line\">        <span class=\"comment\">// 缓存结果集,结果集可能有序,所以用ArrayList保存变得打乱顺序.</span></span><br><span class=\"line\">        ArrayList&lt;String[]&gt; results = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"comment\">// 按行遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (rs.next()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 保存当前行所有列</span></span><br><span class=\"line\">            String[] columnStr = <span class=\"keyword\">new</span> String[ColumnCount];</span><br><span class=\"line\">            <span class=\"comment\">// 获取属性值.</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ColumnCount; i++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 获取一列</span></span><br><span class=\"line\">                columnStr[i] = rs.getString(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"comment\">// 计算当前列的最大长度</span></span><br><span class=\"line\">                columnMaxLengths[i] = Math.max(columnMaxLengths[i], (columnStr[i] == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : columnStr[i].length());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 缓存这一行.</span></span><br><span class=\"line\">            results.add(columnStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printSeparator(columnMaxLengths);</span><br><span class=\"line\">        printColumnName(resultSetMetaData, columnMaxLengths);</span><br><span class=\"line\">        printSeparator(columnMaxLengths);</span><br><span class=\"line\">        <span class=\"comment\">// 遍历集合输出结果</span></span><br><span class=\"line\">        Iterator&lt;String[]&gt; iterator = results.iterator();</span><br><span class=\"line\">        String[] columnStr;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">            columnStr = iterator.next();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ColumnCount; i++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// System.out.printf(&quot;|%&quot; + (columnMaxLengths[i] + 1) + &quot;s&quot;, columnStr[i]);</span></span><br><span class=\"line\">                System.out.printf(<span class=\"string\">&quot;|%&quot;</span> + columnMaxLengths[i] + <span class=\"string\">&quot;s&quot;</span>, columnStr[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;|&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printSeparator(columnMaxLengths);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 输出列名.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> resultSetMetaData 结果集的元数据对象.</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> columnMaxLengths  每一列最大长度的字符串的长度.</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> SQLException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printColumnName</span><span class=\"params\">(ResultSetMetaData resultSetMetaData, <span class=\"keyword\">int</span>[] columnMaxLengths)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> columnCount = resultSetMetaData.getColumnCount();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; columnCount; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// System.out.printf(&quot;|%&quot; + (columnMaxLengths[i] + 1) + &quot;s&quot;, resultSetMetaData.getColumnName(i + 1));</span></span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;|%&quot;</span> + columnMaxLengths[i] + <span class=\"string\">&quot;s&quot;</span>, resultSetMetaData.getColumnName(i + <span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;|&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 输出分隔符.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> columnMaxLengths 保存结果集中每一列的最长的字符串的长度.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printSeparator</span><span class=\"params\">(<span class=\"keyword\">int</span>[] columnMaxLengths)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; columnMaxLengths.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(<span class=\"string\">&quot;+&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// for (int j = 0; j &lt; columnMaxLengths[i] + 1; j++) &#123;</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; columnMaxLengths[i]; j++) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;-&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;+&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"测试\"><a class=\"markdownIt-Anchor\" href=\"#测试\">#</a> 测试</h1>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String driver = <span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String URL = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/student_information?useUnicode=true&amp;characterEncoding=utf-8&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String user = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String password = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * JDBC测试.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">JDBCexample</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1.加载数据库驱动</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Class.forName(driver);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        testStatement();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 测试Statement的用法.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testStatement</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"comment\">// 2.打开数据库连接</span></span><br><span class=\"line\">             Connection conn = DriverManager.getConnection(URL, user, password);</span><br><span class=\"line\">             <span class=\"comment\">// 3.创建语句</span></span><br><span class=\"line\">             Statement stmt = conn.createStatement()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 模拟SQL注入</span></span><br><span class=\"line\">            testSqlInjecton(stmt);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SQLException sqle) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;SQLException : &quot;</span> + sqle);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 模拟SQL注入.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> stmt Statement对象.</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> SQLException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testSqlInjecton</span><span class=\"params\">(Statement stmt)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        String sql = <span class=\"string\">&quot;select * from student&quot;</span>;</span><br><span class=\"line\">        ResultSet rs = stmt.executeQuery(sql);</span><br><span class=\"line\">        ResultSetPrinter.printResultSet(rs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        JDBCexample();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"运行结果\"><a class=\"markdownIt-Anchor\" href=\"#运行结果\">#</a> 运行结果</h1>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----------+---+---------+</span><br><span class=\"line\">|        id|name|    phone|</span><br><span class=\"line\">+----------+---+---------+</span><br><span class=\"line\">|<span class=\"number\">2007040901</span>| 小亮|<span class=\"number\">789789789</span>|</span><br><span class=\"line\">|<span class=\"number\">2007040902</span>| 小白|<span class=\"number\">852852852</span>|</span><br><span class=\"line\">|<span class=\"number\">2007040903</span>| 小明|<span class=\"number\">123123123</span>|</span><br><span class=\"line\">|<span class=\"number\">2007040904</span>| 小红|<span class=\"number\">456456456</span>|</span><br><span class=\"line\">|<span class=\"number\">2007040905</span>| 大飞|<span class=\"number\">456645564</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041001</span>| 小青|<span class=\"number\">123456789</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041002</span>| 小飞|<span class=\"number\">321654987</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041003</span>| 小跑|<span class=\"number\">963852741</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041004</span>| 大白|<span class=\"number\">789789789</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041101</span>| 小王|<span class=\"number\">111222333</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041102</span>| 小星|<span class=\"number\">444555666</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041103</span>| 小义|<span class=\"number\">777888999</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041104</span>| 萧山|<span class=\"number\">111444777</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041105</span>| 大王|<span class=\"number\">123123123</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041201</span>|赵小花|<span class=\"number\">222555888</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041202</span>|赵大花|<span class=\"number\">333666999</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041203</span>|赵老花|<span class=\"number\">159357123</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041204</span>|赵仙花|<span class=\"number\">623847456</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041205</span>| 大力|<span class=\"number\">915915159</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041301</span>|郭小凯|<span class=\"number\">159159159</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041302</span>|郭大凯|<span class=\"number\">357357357</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041303</span>|郭老凯|<span class=\"number\">852852852</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041304</span>|郭仙凯|<span class=\"number\">963963963</span>|</span><br><span class=\"line\">|<span class=\"number\">2007041305</span>| 大明|<span class=\"number\">357537753</span>|</span><br><span class=\"line\">+----------+---+---------+</span><br></pre></td></tr></table></figure>\n<h2 id=\"提示\"><a class=\"markdownIt-Anchor\" href=\"#提示\">#</a> 提示</h2>\n<p>在使用时可以根据具体情况适当的做一些微调，以便达到想要的效果。</p>\n",
            "tags": [
                "数据库",
                "Java"
            ]
        }
    ]
}