{
    "version": "https://jsonfeed.org/version/1",
    "title": "LXR的小站 • All posts by \"学习 教程\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/passages/MyBatis/",
            "url": "http://example.com/passages/MyBatis/",
            "title": "MyBatis笔记",
            "date_published": "2022-08-15T14:26:13.000Z",
            "content_html": "<h1 id=\"mybatis简介\"><a class=\"markdownIt-Anchor\" href=\"#mybatis简介\">#</a> Mybatis 简介</h1>\n<h2 id=\"mybatis历史\"><a class=\"markdownIt-Anchor\" href=\"#mybatis历史\">#</a> MyBatis 历史</h2>\n<ul>\n<li>MyBatis 最初是 Apache 的一个开源项目 iBatis, 2010 年 6 月这个项目由 Apache Software Foundation 迁移到了 Google Code。随着开发团队转投 Google Code 旗下，iBatis3.x 正式更名为 MyBatis。代码于 2013 年 11 月迁移到 Github</li>\n<li>iBatis 一词来源于 “internet” 和 “abatis” 的组合，是一个基于 Java 的持久层框架。iBatis 提供的持久层框架包括 SQL Maps 和 Data Access Objects（DAO）</li>\n</ul>\n<h2 id=\"mybatis特性\"><a class=\"markdownIt-Anchor\" href=\"#mybatis特性\">#</a> MyBatis 特性</h2>\n<ol>\n<li>MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架</li>\n<li>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集</li>\n<li>MyBatis 可以使用简单的 XML 或注解用于配置和原始映射，将接口和 Java 的 POJO（Plain Old Java Objects，普通的 Java 对象）映射成数据库中的记录</li>\n<li>MyBatis 是一个 半自动的 ORM（Object Relation Mapping）框架</li>\n</ol>\n<h2 id=\"mybatis下载\"><a class=\"markdownIt-Anchor\" href=\"#mybatis下载\">#</a> MyBatis 下载</h2>\n<ul>\n<li><a href=\"https://github.com/mybatis/mybatis-3\">MyBatis 下载地址</a></li>\n<li><img src=\"/passages/MyBatis/MyBatis%E4%B8%8B%E8%BD%BD.png\" alt></li>\n</ul>\n<h2 id=\"和其它持久化层技术对比\"><a class=\"markdownIt-Anchor\" href=\"#和其它持久化层技术对比\">#</a> 和其它持久化层技术对比</h2>\n<ul>\n<li>JDBC</li>\n<li>SQL 夹杂在 Java 代码中耦合度高，导致硬编码内伤\n<ul>\n<li>维护不易且实际开发需求中 SQL 有变化，频繁修改的情况多见</li>\n<li>代码冗长，开发效率低</li>\n</ul>\n</li>\n<li>Hibernate 和 JPA</li>\n<li>操作简便，开发效率高\n<ul>\n<li>程序中的长难复杂 SQL 需要绕过框架</li>\n<li>内部自动生产的 SQL，不容易做特殊优化</li>\n<li>基于全映射的全自动框架，大量字段的 POJO 进行部分映射时比较困难。</li>\n<li>反射操作太多，导致数据库性能下降</li>\n</ul>\n</li>\n<li>MyBatis</li>\n<li>轻量级，性能出色\n<ul>\n<li>SQL 和 Java 编码分开，功能边界清晰。Java 代码专注业务、SQL 语句专注数据</li>\n<li>开发效率稍逊于 HIbernate，但是完全能够接受</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"搭建mybatis\"><a class=\"markdownIt-Anchor\" href=\"#搭建mybatis\">#</a> 搭建 MyBatis</h1>\n<h2 id=\"开发环境\"><a class=\"markdownIt-Anchor\" href=\"#开发环境\">#</a> 开发环境</h2>\n<ul>\n<li>IDE：idea 2019.2</li>\n<li>构建工具：maven 3.5.4</li>\n<li>MySQL 版本：MySQL 5.7</li>\n<li>MyBatis 版本：MyBatis 3.5.7</li>\n</ul>\n<h2 id=\"创建maven工程\"><a class=\"markdownIt-Anchor\" href=\"#创建maven工程\">#</a> 创建 maven 工程</h2>\n<ul>\n<li>\n<p>打包方式：jar</p>\n</li>\n<li>\n<p>引入依赖</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- Mybatis核心 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- junit测试 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"创建mybatis的核心配置文件\"><a class=\"markdownIt-Anchor\" href=\"#创建mybatis的核心配置文件\">#</a> 创建 MyBatis 的核心配置文件</h2>\n<blockquote>\n<p>习惯上命名为 <code>mybatis-config.xml</code> ，这个文件名仅仅只是建议，并非强制要求。将来整合 Spring 之后，这个配置文件可以省略，所以大家操作时可以直接复制、粘贴。<br>\n核心配置文件主要用于配置连接数据库的环境以及 MyBatis 的全局配置信息<br>\n核心配置文件存放的位置是 src/main/resources 目录下</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>  </span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">configuration</span>  </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta-keyword\">PUBLIC</span> <span class=\"meta-string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>  </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--设置连接数据库的环境--&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span>  </span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span>  </span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/MyBatis&quot;</span>/&gt;</span>  </span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span>  </span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123456&quot;</span>/&gt;</span>  </span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span>  </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--引入映射文件--&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span>  </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;mappers/UserMapper.xml&quot;</span>/&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建mapper接口\"><a class=\"markdownIt-Anchor\" href=\"#创建mapper接口\">#</a> 创建 mapper 接口</h2>\n<blockquote>\n<p>MyBatis 中的 mapper 接口相当于以前的 dao。但是区别在于，mapper 仅仅是接口，我们不需要提供实现类</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.atguigu.mybatis.mapper;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserMapper</span> </span>&#123;  </span><br><span class=\"line\">\t<span class=\"comment\">/**  </span></span><br><span class=\"line\"><span class=\"comment\">\t* 添加用户信息  </span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span>  </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">insertUser</span><span class=\"params\">()</span></span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建mybatis的映射文件\"><a class=\"markdownIt-Anchor\" href=\"#创建mybatis的映射文件\">#</a> 创建 MyBatis 的映射文件</h2>\n<ul>\n<li>相关概念：ORM（Object Relationship Mapping）对象关系映射。</li>\n<li>对象：Java 的实体类对象\n<ul>\n<li>关系：关系型数据库</li>\n<li>映射：二者之间的对应关系</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Java 概念</th>\n<th>数据库概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类</td>\n<td>表</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>字段 / 列</td>\n</tr>\n<tr>\n<td>对象</td>\n<td>记录 / 行</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>映射文件的命名规则</li>\n<li>表所对应的实体类的类名 + Mapper.xml\n<ul>\n<li>例如：表 t_user，映射的实体类为 User，所对应的映射文件为 UserMapper.xml</li>\n<li>因此一个映射文件对应一个实体类，对应一张表的操作</li>\n<li>MyBatis 映射文件用于编写 SQL，访问以及操作表中的数据</li>\n<li>MyBatis 映射文件存放的位置是 src/main/resources/mappers 目录下</li>\n</ul>\n</li>\n<li>MyBatis 中可以面向接口操作数据，要保证两个一致</li>\n<li>mapper 接口的全类名和映射文件的命名空间（namespace）保持一致\n<ul>\n<li>mapper 接口中方法的方法名和映射文件中编写 SQL 的标签的 id 属性保持一致</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>  </span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">mapper</span>  </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta-keyword\">PUBLIC</span> <span class=\"meta-string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>  </span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.atguigu.mybatis.mapper.UserMapper&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--int insertUser();--&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertUser&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t\tinsert into t_user values(null,&#x27;张三&#x27;,&#x27;123&#x27;,23,&#x27;女&#x27;)  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"通过junit测试功能\"><a class=\"markdownIt-Anchor\" href=\"#通过junit测试功能\">#</a> 通过 junit 测试功能</h2>\n<ul>\n<li>SqlSession：代表 Java 程序和数据库之间的会话。（HttpSession 是 Java 程序和浏览器之间的会话）</li>\n<li>SqlSessionFactory：是 “生产” SqlSession 的 “工厂”</li>\n<li>工厂模式：如果创建某一个对象，使用的过程基本固定，那么我们就可以把创建这个对象的相关代码封装到一个 “工厂类” 中，以后都使用这个工厂类来 “生产” 我们需要的对象</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserMapperTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testInsertUser</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//读取MyBatis的核心配置文件</span></span><br><span class=\"line\">        InputStream is = Resources.getResourceAsStream(<span class=\"string\">&quot;mybatis-config.xml&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取SqlSessionFactoryBuilder对象</span></span><br><span class=\"line\">        SqlSessionFactoryBuilder sqlSessionFactoryBuilder = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder();</span><br><span class=\"line\">        <span class=\"comment\">//通过核心配置文件所对应的字节输入流创建工厂类SqlSessionFactory，生产SqlSession对象</span></span><br><span class=\"line\">        SqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(is);</span><br><span class=\"line\">        <span class=\"comment\">//获取sqlSession，此时通过SqlSession对象所操作的sql都必须手动提交或回滚事务</span></span><br><span class=\"line\">        <span class=\"comment\">//SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class=\"line\">\t    <span class=\"comment\">//创建SqlSession对象，此时通过SqlSession对象所操作的sql都会自动提交  </span></span><br><span class=\"line\">\t\tSqlSession sqlSession = sqlSessionFactory.openSession(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过代理模式创建UserMapper接口的代理实现类对象</span></span><br><span class=\"line\">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">        <span class=\"comment\">//调用UserMapper接口中的方法，就可以根据UserMapper的全类名匹配元素文件，通过调用的方法名匹配映射文件中的SQL标签，并执行标签中的SQL语句</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> result = userMapper.insertUser();</span><br><span class=\"line\">        <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">        <span class=\"comment\">//sqlSession.commit();</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;result:&quot;</span> + result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>此时需要手动提交事务，如果要自动提交事务，则在获取 sqlSession 对象时，使用 <code>SqlSession sqlSession = sqlSessionFactory.openSession(true);</code> ，传入一个 Boolean 类型的参数，值为 true，这样就可以自动提交</li>\n</ul>\n<h2 id=\"加入log4j日志功能\"><a class=\"markdownIt-Anchor\" href=\"#加入log4j日志功能\">#</a> 加入 log4j 日志功能</h2>\n<ol>\n<li>\n<p>加入依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- log4j日志 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>加入 log4j 的配置文件</p>\n<ul>\n<li>log4j 的配置文件名为 log4j.xml，存放的位置是 src/main/resources 目录下</li>\n<li>日志的级别：FATAL (致命)&gt;ERROR (错误)&gt;WARN (警告)&gt;INFO (信息)&gt;DEBUG (调试) 从左到右打印的内容越来越详细</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">log4j</span>:configuration <span class=\"meta-keyword\">SYSTEM</span> <span class=\"meta-string\">&quot;log4j.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">log4j:configuration</span> <span class=\"attr\">xmlns:log4j</span>=<span class=\"string\">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;STDOUT&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Encoding&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">layout</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ConversionPattern&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125; %m (%F:%L) \\n&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">logger</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;java.sql&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">level</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;debug&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">logger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">logger</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;org.apache.ibatis&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">level</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;info&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">logger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">level</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;debug&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"核心配置文件详解\"><a class=\"markdownIt-Anchor\" href=\"#核心配置文件详解\">#</a> 核心配置文件详解</h1>\n<blockquote>\n<p>核心配置文件中的标签必须按照固定的顺序 (有的标签可以不写，但顺序一定不能乱)：<br>\nproperties、settings、typeAliases、typeHandlers、objectFactory、objectWrapperFactory、reflectorFactory、plugins、environments、databaseIdProvider、mappers</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"meta-keyword\">PUBLIC</span> <span class=\"meta-string\">&quot;-//MyBatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"meta-string\">&quot;http://MyBatis.org/dtd/MyBatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--引入properties文件，此时就可以$&#123;属性名&#125;的方式访问属性值--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;jdbc.properties&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--将表中字段的下划线自动转换为驼峰--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;mapUnderscoreToCamelCase&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--开启延迟加载--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;lazyLoadingEnabled&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        typeAlias：设置某个具体的类型的别名</span></span><br><span class=\"line\"><span class=\"comment\">        属性：</span></span><br><span class=\"line\"><span class=\"comment\">        type：需要设置别名的类型的全类名</span></span><br><span class=\"line\"><span class=\"comment\">        alias：设置此类型的别名，且别名不区分大小写。若不设置此属性，该类型拥有默认的别名，即类名</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--&lt;typeAlias type=&quot;com.atguigu.mybatis.bean.User&quot;&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--&lt;typeAlias type=&quot;com.atguigu.mybatis.bean.User&quot; alias=&quot;user&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/typeAlias&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--以包为单位，设置改包下所有的类型都拥有默认的别名，即类名且不区分大小写--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.atguigu.mybatis.bean&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    environments：设置多个连接数据库的环境</span></span><br><span class=\"line\"><span class=\"comment\">    属性：</span></span><br><span class=\"line\"><span class=\"comment\">\t    default：设置默认使用的环境的id</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;mysql_test&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        environment：设置具体的连接数据库的环境信息</span></span><br><span class=\"line\"><span class=\"comment\">        属性：</span></span><br><span class=\"line\"><span class=\"comment\">\t        id：设置环境的唯一标识，可通过environments标签中的default设置某一个环境的id，表示默认使用的环境</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mysql_test&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            transactionManager：设置事务管理方式</span></span><br><span class=\"line\"><span class=\"comment\">            属性：</span></span><br><span class=\"line\"><span class=\"comment\">\t            type：设置事务管理方式，type=&quot;JDBC|MANAGED&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t            type=&quot;JDBC&quot;：设置当前环境的事务管理都必须手动处理</span></span><br><span class=\"line\"><span class=\"comment\">\t            type=&quot;MANAGED&quot;：设置事务被管理，例如spring中的AOP</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            dataSource：设置数据源</span></span><br><span class=\"line\"><span class=\"comment\">            属性：</span></span><br><span class=\"line\"><span class=\"comment\">\t            type：设置数据源的类型，type=&quot;POOLED|UNPOOLED|JNDI&quot;</span></span><br><span class=\"line\"><span class=\"comment\">\t            type=&quot;POOLED&quot;：使用数据库连接池，即会将创建的连接进行缓存，下次使用可以从缓存中直接获取，不需要重新创建</span></span><br><span class=\"line\"><span class=\"comment\">\t            type=&quot;UNPOOLED&quot;：不使用数据库连接池，即每次使用连接都需要重新创建</span></span><br><span class=\"line\"><span class=\"comment\">\t            type=&quot;JNDI&quot;：调用上下文中的数据源</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--设置驱动类的全类名--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--设置连接数据库的连接地址--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--设置连接数据库的用户名--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--设置连接数据库的密码--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--引入映射文件--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;mapper resource=&quot;UserMapper.xml&quot;/&gt; --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        以包为单位，将包下所有的映射文件引入核心配置文件</span></span><br><span class=\"line\"><span class=\"comment\">        注意：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t1. 此方式必须保证mapper接口和mapper映射文件必须在相同的包下</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t2. mapper接口要和mapper映射文件的名字一致</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.atguigu.mybatis.mapper&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><img src=\"/passages/MyBatis/mapper%E6%8E%A5%E5%8F%A3%E5%92%8Cmapper%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6%E5%9C%A8%E5%90%8C%E4%B8%80%E5%8C%85%E4%B8%8B.png\" alt></li>\n</ul>\n<h1 id=\"默认的类型别名\"><a class=\"markdownIt-Anchor\" href=\"#默认的类型别名\">#</a> 默认的类型别名</h1>\n<p><img src=\"/passages/MyBatis/%E9%BB%98%E8%AE%A4%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D1.png\" alt><br>\n<img src=\"/passages/MyBatis/%E9%BB%98%E8%AE%A4%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D2.png\" alt></p>\n<h1 id=\"mybatis的增删改查\"><a class=\"markdownIt-Anchor\" href=\"#mybatis的增删改查\">#</a> MyBatis 的增删改查</h1>\n<ol>\n<li>\n<p>添加</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--int insertUser();--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertUser&quot;</span>&gt;</span></span><br><span class=\"line\">\tinsert into t_user values(null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;,&#x27;12345@qq.com&#x27;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--int deleteUser();--&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteUser&quot;</span>&gt;</span></span><br><span class=\"line\">     delete from t_user where id = 6</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--int updateUser();--&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;updateUser&quot;</span>&gt;</span></span><br><span class=\"line\">     update t_user set username = &#x27;张三&#x27; where id = 5</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询一个实体类对象</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User getUserById();--&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserById&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.atguigu.mybatis.bean.User&quot;</span>&gt;</span>  </span><br><span class=\"line\">\tselect * from t_user where id = 2  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询集合</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.atguigu.mybatis.bean.User&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>\n<p>注意：</p>\n<ol>\n<li>查询的标签 select 必须设置属性 resultType 或 resultMap，用于设置实体类和数据库表的映射关系\n<ul>\n<li>resultType：自动映射，用于属性名和表中字段名一致的情况</li>\n<li>resultMap：自定义映射，用于一对多或多对一或字段名和属性名不一致的情况</li>\n</ul>\n</li>\n<li>当查询的数据为多条时，不能使用实体类作为返回值，只能使用集合，否则会抛出异常 TooManyResultsException；但是若查询的数据只有一条，可以使用实体类或集合作为返回值</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"mybatis获取参数值的两种方式重点\"><a class=\"markdownIt-Anchor\" href=\"#mybatis获取参数值的两种方式重点\">#</a> MyBatis 获取参数值的两种方式（重点）</h1>\n<ul>\n<li>MyBatis 获取参数值的两种方式：${} 和 #{}</li>\n<li>${} 的本质就是字符串拼接，#{} 的本质就是占位符赋值</li>\n<li>${} 使用字符串拼接的方式拼接 sql，若为字符串类型或日期类型的字段进行赋值时，需要手动加单引号；但是 #{} 使用占位符赋值的方式拼接 sql，此时为字符串类型或日期类型的字段进行赋值时，可以自动添加单引号</li>\n</ul>\n<h2 id=\"单个字面量类型的参数\"><a class=\"markdownIt-Anchor\" href=\"#单个字面量类型的参数\">#</a> 单个字面量类型的参数</h2>\n<ul>\n<li>若 mapper 接口中的方法参数为单个的字面量类型，此时可以使用 ${} 和 #{} 以任意的名称（最好见名识意）获取参数的值，注意 ${} 需要手动加单引号</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User getUserByUsername(String username);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserByUsername&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user where username = #&#123;username&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User getUserByUsername(String username);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserByUsername&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span>  </span><br><span class=\"line\">\tselect * from t_user where username = &#x27;$&#123;username&#125;&#x27;  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"多个字面量类型的参数\"><a class=\"markdownIt-Anchor\" href=\"#多个字面量类型的参数\">#</a> 多个字面量类型的参数</h2>\n<ul>\n<li>\n<p>若 mapper 接口中的方法参数为多个时，此时 MyBatis 会自动将这些参数放在一个 map 集合中</p>\n<ol>\n<li>以 arg0,arg1… 为键，以参数为值；</li>\n<li>以 param1,param2… 为键，以参数为值；</li>\n</ol>\n</li>\n<li>\n<p>因此只需要通过 ${} 和 #{} 访问 map 集合的键就可以获取相对应的值，注意 ${} 需要手动加单引号。</p>\n</li>\n<li>\n<p>使用 arg 或者 param 都行，要注意的是，arg 是从 arg0 开始的，param 是从 param1 开始的</p>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User checkLogin(String username,String password);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;checkLogin&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span>  </span><br><span class=\"line\">\tselect * from t_user where username = #&#123;arg0&#125; and password = #&#123;arg1&#125;  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User checkLogin(String username,String password);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;checkLogin&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user where username = &#x27;$&#123;param1&#125;&#x27; and password = &#x27;$&#123;param2&#125;&#x27;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"map集合类型的参数\"><a class=\"markdownIt-Anchor\" href=\"#map集合类型的参数\">#</a> map 集合类型的参数</h2>\n<ul>\n<li>若 mapper 接口中的方法需要的参数为多个时，此时可以手动创建 map 集合，将这些数据放在 map 中只需要通过 ${} 和 #{} 访问 map 集合的键就可以获取相对应的值，注意 ${} 需要手动加单引号</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User checkLoginByMap(Map&lt;String,Object&gt; map);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;checkLoginByMap&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user where username = #&#123;username&#125; and password = #&#123;password&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkLoginByMap</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tParameterMapper mapper = sqlSession.getMapper(ParameterMapper.class);</span><br><span class=\"line\">\tMap&lt;String,Object&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">\tmap.put(<span class=\"string\">&quot;usermane&quot;</span>,<span class=\"string\">&quot;admin&quot;</span>);</span><br><span class=\"line\">\tmap.put(<span class=\"string\">&quot;password&quot;</span>,<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\">\tUser user = mapper.checkLoginByMap(map);</span><br><span class=\"line\">\tSystem.out.println(user);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实体类类型的参数\"><a class=\"markdownIt-Anchor\" href=\"#实体类类型的参数\">#</a> 实体类类型的参数</h2>\n<ul>\n<li>若 mapper 接口中的方法参数为实体类对象时此时可以使用 ${} 和 #{}，通过访问实体类对象中的属性名获取属性值，注意 ${} 需要手动加单引号</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--int insertUser(User user);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertUser&quot;</span>&gt;</span></span><br><span class=\"line\">\tinsert into t_user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;sex&#125;,#&#123;email&#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tParameterMapper mapper = sqlSession.getMapper(ParameterMapper.class);</span><br><span class=\"line\">\tUser user = <span class=\"keyword\">new</span> User(<span class=\"keyword\">null</span>,<span class=\"string\">&quot;Tom&quot;</span>,<span class=\"string\">&quot;123456&quot;</span>,<span class=\"number\">12</span>,<span class=\"string\">&quot;男&quot;</span>,<span class=\"string\">&quot;123@321.com&quot;</span>);</span><br><span class=\"line\">\tmapper.insertUser(user);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用param标识参数\"><a class=\"markdownIt-Anchor\" href=\"#使用param标识参数\">#</a> 使用 @Param 标识参数</h2>\n<ul>\n<li>\n<p>可以通过 @Param 注解标识 mapper 接口中的方法参数，此时，会将这些参数放在 map 集合中</p>\n<ol>\n<li>以 @Param 注解的 value 属性值为键，以参数为值；</li>\n<li>以 param1,param2… 为键，以参数为值；</li>\n</ol>\n</li>\n<li>\n<p>只需要通过 ${} 和 #{} 访问 map 集合的键就可以获取相对应的值，注意 ${} 需要手动加单引号</p>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User CheckLoginByParam(@Param(&quot;username&quot;) String username, @Param(&quot;password&quot;) String password);--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;CheckLoginByParam&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">        select * from t_user where username = #&#123;username&#125; and password = #&#123;password&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkLoginByParam</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tParameterMapper mapper = sqlSession.getMapper(ParameterMapper.class);</span><br><span class=\"line\">\tmapper.CheckLoginByParam(<span class=\"string\">&quot;admin&quot;</span>,<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<ul>\n<li>\n<p>建议分成两种情况进行处理</p>\n<ol>\n<li>实体类类型的参数</li>\n<li>使用 @Param 标识参数</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"mybatis的各种查询功能\"><a class=\"markdownIt-Anchor\" href=\"#mybatis的各种查询功能\">#</a> MyBatis 的各种查询功能</h1>\n<ol>\n<li>如果查询出的数据只有一条，可以通过\n<ol>\n<li>实体类对象接收</li>\n<li>List 集合接收</li>\n<li>Map 集合接收，结果 <code>&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;</code></li>\n</ol>\n</li>\n<li>如果查询出的数据有多条，一定不能用实体类对象接收，会抛异常 TooManyResultsException，可以通过\n<ol>\n<li>实体类类型的 LIst 集合接收</li>\n<li>Map 类型的 LIst 集合接收</li>\n<li>在 mapper 接口的方法上添加 @MapKey 注解</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"查询一个实体类对象\"><a class=\"markdownIt-Anchor\" href=\"#查询一个实体类对象\">#</a> 查询一个实体类对象</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据用户id查询用户信息</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">User <span class=\"title\">getUserById</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;id&quot;)</span> <span class=\"keyword\">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--User getUserById(@Param(&quot;id&quot;) int id);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserById&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user where id = #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"查询一个list集合\"><a class=\"markdownIt-Anchor\" href=\"#查询一个list集合\">#</a> 查询一个 List 集合</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 查询所有用户信息</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">List&lt;User&gt; <span class=\"title\">getUserList</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"查询单个数据\"><a class=\"markdownIt-Anchor\" href=\"#查询单个数据\">#</a> 查询单个数据</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**  </span></span><br><span class=\"line\"><span class=\"comment\"> * 查询用户的总记录数  </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>  </span></span><br><span class=\"line\"><span class=\"comment\"> * 在MyBatis中，对于Java中常用的类型都设置了类型别名  </span></span><br><span class=\"line\"><span class=\"comment\"> * 例如：java.lang.Integer--&gt;int|integer  </span></span><br><span class=\"line\"><span class=\"comment\"> * 例如：int--&gt;_int|_integer  </span></span><br><span class=\"line\"><span class=\"comment\"> * 例如：Map--&gt;map,List--&gt;list  </span></span><br><span class=\"line\"><span class=\"comment\"> */</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getCount</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--int getCount();--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getCount&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;_integer&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect count(id) from t_user</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"查询一条数据为map集合\"><a class=\"markdownIt-Anchor\" href=\"#查询一条数据为map集合\">#</a> 查询一条数据为 map 集合</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**  </span></span><br><span class=\"line\"><span class=\"comment\"> * 根据用户id查询用户信息为map集合  </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> id  </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>  </span></span><br><span class=\"line\"><span class=\"comment\"> */</span>  </span><br><span class=\"line\"><span class=\"function\">Map&lt;String, Object&gt; <span class=\"title\">getUserToMap</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;id&quot;)</span> <span class=\"keyword\">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--Map&lt;String, Object&gt; getUserToMap(@Param(&quot;id&quot;) int id);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserToMap&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;map&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user where id = #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--结果：&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;--&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"查询多条数据为map集合\"><a class=\"markdownIt-Anchor\" href=\"#查询多条数据为map集合\">#</a> 查询多条数据为 map 集合</h2>\n<h3 id=\"方法一\"><a class=\"markdownIt-Anchor\" href=\"#方法一\">#</a> 方法一</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**  </span></span><br><span class=\"line\"><span class=\"comment\"> * 查询所有用户信息为map集合  </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>  </span></span><br><span class=\"line\"><span class=\"comment\"> * 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，此时可以将这些map放在一个list集合中获取  </span></span><br><span class=\"line\"><span class=\"comment\"> */</span>  </span><br><span class=\"line\">List&lt;Map&lt;String, Object&gt;&gt; getAllUserToMap();</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--Map&lt;String, Object&gt; getAllUserToMap();--&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getAllUserToMap&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;map&quot;</span>&gt;</span>  </span><br><span class=\"line\">\tselect * from t_user  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">\t结果：</span></span><br><span class=\"line\"><span class=\"comment\">\t[&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&#123;password=123456, sex=男, id=2, age=23, username=张三&#125;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&#123;password=123456, sex=男, id=3, age=23, username=张三&#125;]</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"方法二\"><a class=\"markdownIt-Anchor\" href=\"#方法二\">#</a> 方法二</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 查询所有用户信息为map集合</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> * 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，并且最终要以一个map的方式返回数据，此时需要通过<span class=\"doctag\">@MapKey</span>注解设置map集合的键，值是每条数据所对应的map集合</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@MapKey(&quot;id&quot;)</span></span><br><span class=\"line\"><span class=\"function\">Map&lt;String, Object&gt; <span class=\"title\">getAllUserToMap</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--Map&lt;String, Object&gt; getAllUserToMap();--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getAllUserToMap&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;map&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_user</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">\t结果：</span></span><br><span class=\"line\"><span class=\"comment\">\t&#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t1=&#123;password=123456, sex=男, id=1, age=23, username=admin&#125;,</span></span><br><span class=\"line\"><span class=\"comment\">\t2=&#123;password=123456, sex=男, id=2, age=23, username=张三&#125;,</span></span><br><span class=\"line\"><span class=\"comment\">\t3=&#123;password=123456, sex=男, id=3, age=23, username=张三&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t&#125;</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"特殊sql的执行\"><a class=\"markdownIt-Anchor\" href=\"#特殊sql的执行\">#</a> 特殊 SQL 的执行</h1>\n<h2 id=\"模糊查询\"><a class=\"markdownIt-Anchor\" href=\"#模糊查询\">#</a> 模糊查询</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据用户名进行模糊查询</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> username </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> java.util.List&lt;com.atguigu.mybatis.pojo.User&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/26 21:56</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">List&lt;User&gt; <span class=\"title\">getUserByLike</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;username&quot;)</span> String username)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;User&gt; getUserByLike(@Param(&quot;username&quot;) String username);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserByLike&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--select * from t_user where username like &#x27;%$&#123;mohu&#125;%&#x27;--&gt;</span>  </span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--select * from t_user where username like concat(&#x27;%&#x27;,#&#123;mohu&#125;,&#x27;%&#x27;)--&gt;</span>  </span><br><span class=\"line\">\tselect * from t_user where username like &quot;%&quot;#&#123;mohu&#125;&quot;%&quot;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>其中 <code>select * from t_user where username like &quot;%&quot;#&#123;mohu&#125;&quot;%&quot;</code>  是最常用的</li>\n</ul>\n<h2 id=\"批量删除\"><a class=\"markdownIt-Anchor\" href=\"#批量删除\">#</a> 批量删除</h2>\n<ul>\n<li>只能使用 ${}，如果使用 #{}，则解析后的 sql 语句为 <code>delete from t_user where id in ('1,2,3')</code> ，这样是将 <code>1,2,3</code>  看做是一个整体，只有 id 为 <code>1,2,3</code>  的数据会被删除。正确的语句应该是 <code>delete from t_user where id in (1,2,3)</code> ，或者 <code>delete from t_user where id in ('1','2','3')</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据id批量删除</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> ids </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> int</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/26 22:06</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">deleteMore</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ids&quot;)</span> String ids)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteMore&quot;</span>&gt;</span></span><br><span class=\"line\">\tdelete from t_user where id in ($&#123;ids&#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//测试类</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteMore</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tSQLMapper mapper = sqlSession.getMapper(SQLMapper.class);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> result = mapper.deleteMore(<span class=\"string\">&quot;1,2,3,8&quot;</span>);</span><br><span class=\"line\">\tSystem.out.println(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"动态设置表名\"><a class=\"markdownIt-Anchor\" href=\"#动态设置表名\">#</a> 动态设置表名</h2>\n<ul>\n<li>只能使用 ${}，因为表名不能加单引号</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 查询指定表中的数据</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> tableName </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> java.util.List&lt;com.atguigu.mybatis.pojo.User&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/27 14:41</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">List&lt;User&gt; <span class=\"title\">getUserByTable</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;tableName&quot;)</span> String tableName)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;User&gt; getUserByTable(@Param(&quot;tableName&quot;) String tableName);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserByTable&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from $&#123;tableName&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"添加功能获取自增的主键\"><a class=\"markdownIt-Anchor\" href=\"#添加功能获取自增的主键\">#</a> 添加功能获取自增的主键</h2>\n<ul>\n<li>\n<p>使用场景</p>\n</li>\n<li>\n<p>t_clazz(clazz_id,clazz_name)</p>\n<ul>\n<li>t_student(student_id,student_name,clazz_id)</li>\n</ul>\n<ol>\n<li>添加班级信息</li>\n<li>获取新添加的班级的 id</li>\n<li>为班级分配学生，即将某学的班级 id 修改为新添加的班级的 id</li>\n</ol>\n</li>\n<li>\n<p>在 mapper.xml 中设置两个属性</p>\n</li>\n<li>\n<p>useGeneratedKeys：设置使用自增的主键</p>\n<ul>\n<li>keyProperty：因为增删改有统一的返回值是受影响的行数，因此只能将获取的自增的主键放在传输的参数 user 对象的某个属性中</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 添加用户信息</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> user </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/27 15:04</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insertUser</span><span class=\"params\">(User user)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--void insertUser(User user);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertUser&quot;</span> <span class=\"attr\">useGeneratedKeys</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">&quot;id&quot;</span>&gt;</span></span><br><span class=\"line\">\tinsert into t_user values (null,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;sex&#125;,#&#123;email&#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//测试类</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tSQLMapper mapper = sqlSession.getMapper(SQLMapper.class);</span><br><span class=\"line\">\tUser user = <span class=\"keyword\">new</span> User(<span class=\"keyword\">null</span>, <span class=\"string\">&quot;ton&quot;</span>, <span class=\"string\">&quot;123&quot;</span>, <span class=\"number\">23</span>, <span class=\"string\">&quot;男&quot;</span>, <span class=\"string\">&quot;123@321.com&quot;</span>);</span><br><span class=\"line\">\tmapper.insertUser(user);</span><br><span class=\"line\">\tSystem.out.println(user);</span><br><span class=\"line\">\t<span class=\"comment\">//输出：user&#123;id=10, username=&#x27;ton&#x27;, password=&#x27;123&#x27;, age=23, sex=&#x27;男&#x27;, email=&#x27;123@321.com&#x27;&#125;，自增主键存放到了user的id属性中</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"自定义映射resultmap\"><a class=\"markdownIt-Anchor\" href=\"#自定义映射resultmap\">#</a> 自定义映射 resultMap</h1>\n<h2 id=\"resultmap处理字段和属性的映射关系\"><a class=\"markdownIt-Anchor\" href=\"#resultmap处理字段和属性的映射关系\">#</a> resultMap 处理字段和属性的映射关系</h2>\n<ul>\n<li>resultMap：设置自定义映射</li>\n<li>属性：\n<ul>\n<li>id：表示自定义映射的唯一标识，不能重复</li>\n<li>type：查询的数据要映射的实体类的类型</li>\n<li>子标签：</li>\n<li>id：设置主键的映射关系\n<ul>\n<li>result：设置普通字段的映射关系</li>\n<li>子标签属性：</li>\n<li>property：设置映射关系中实体类中的属性名\n<ul>\n<li>column：设置映射关系中表中的字段名</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>若字段名和实体类中的属性名不一致，则可以通过 resultMap 设置自定义映射，即使字段名和属性名一致的属性也要映射，也就是全部属性都要列出来</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;empResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;eid&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;eid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;emp_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;email&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;Emp&gt; getAllEmp();--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getAllEmp&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;empResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>若字段名和实体类中的属性名不一致，但是字段名符合数据库的规则（使用_），实体类中的属性名符合 Java 的规则（使用驼峰）。此时也可通过以下两种方式处理字段名和实体类中的属性的映射关系</p>\n<ol>\n<li>可以通过为字段起别名的方式，保证和实体类中的属性名保持一致 <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;Emp&gt; getAllEmp();--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getAllEmp&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect eid,emp_name empName,age,sex,email from t_emp</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>可以在 MyBatis 的核心配置文件中的 <code>setting</code>  标签中，设置一个全局配置信息 mapUnderscoreToCamelCase，可以在查询表中数据时，自动将_类型的字段名转换为驼峰，例如：字段名 user_name，设置了 mapUnderscoreToCamelCase，此时字段名就会转换为 userName。<a href=\"#%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3\">核心配置文件详解</a> <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;mapUnderscoreToCamelCase&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"多对一映射处理\"><a class=\"markdownIt-Anchor\" href=\"#多对一映射处理\">#</a> 多对一映射处理</h2>\n<blockquote>\n<p>查询员工信息以及员工所对应的部门信息</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Emp</span> </span>&#123;  </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Integer eid;  </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String empName;  </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Integer age;  </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String sex;  </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String email;  </span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Dept dept;</span><br><span class=\"line\">\t<span class=\"comment\">//...构造器、get、set方法等</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"级联方式处理映射关系\"><a class=\"markdownIt-Anchor\" href=\"#级联方式处理映射关系\">#</a> 级联方式处理映射关系</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;empAndDeptResultMapOne&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;eid&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;eid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;emp_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;email&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;dept.did&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;dept.deptName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;dept_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Emp getEmpAndDept(@Param(&quot;eid&quot;)Integer eid);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpAndDept&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;empAndDeptResultMapOne&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp left join t_dept on t_emp.eid = t_dept.did where t_emp.eid = #&#123;eid&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用association处理映射关系\"><a class=\"markdownIt-Anchor\" href=\"#使用association处理映射关系\">#</a> 使用 association 处理映射关系</h3>\n<ul>\n<li>association：处理多对一的映射关系</li>\n<li>property：需要处理多对的映射关系的属性名</li>\n<li>javaType：该属性的类型</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;empAndDeptResultMapTwo&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;eid&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;eid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;emp_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;email&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">association</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;dept&quot;</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;Dept&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;did&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;deptName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;dept_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">association</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Emp getEmpAndDept(@Param(&quot;eid&quot;)Integer eid);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpAndDept&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;empAndDeptResultMapTwo&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp left join t_dept on t_emp.eid = t_dept.did where t_emp.eid = #&#123;eid&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"分步查询\"><a class=\"markdownIt-Anchor\" href=\"#分步查询\">#</a> 分步查询</h3>\n<h4 id=\"1-查询员工信息\"><a class=\"markdownIt-Anchor\" href=\"#1-查询员工信息\">#</a> 1. 查询员工信息</h4>\n<ul>\n<li>select：设置分布查询的 sql 的唯一标识（namespace.SQLId 或 mapper 接口的全类名。方法名）</li>\n<li>column：设置分步查询的条件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//EmpMapper里的方法</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 通过分步查询，员工及所对应的部门信息</span></span><br><span class=\"line\"><span class=\"comment\"> * 分步查询第一步：查询员工信息</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> com.atguigu.mybatis.pojo.Emp</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/27 20:17</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">Emp <span class=\"title\">getEmpAndDeptByStepOne</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;eid&quot;)</span> Integer eid)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;empAndDeptByStepResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;eid&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;eid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;emp_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;email&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">association</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;dept&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t <span class=\"attr\">select</span>=<span class=\"string\">&quot;com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t <span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">association</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Emp getEmpAndDeptByStepOne(@Param(&quot;eid&quot;) Integer eid);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpAndDeptByStepOne&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;empAndDeptByStepResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp where eid = #&#123;eid&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-查询部门信息\"><a class=\"markdownIt-Anchor\" href=\"#2-查询部门信息\">#</a> 2. 查询部门信息</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//DeptMapper里的方法</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 通过分步查询，员工及所对应的部门信息</span></span><br><span class=\"line\"><span class=\"comment\"> * 分步查询第二步：通过did查询员工对应的部门信息</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> com.atguigu.mybatis.pojo.Emp</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/27 20:23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">Dept <span class=\"title\">getEmpAndDeptByStepTwo</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;did&quot;)</span> Integer did)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--此处的resultMap仅是处理字段和属性的映射关系--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;EmpAndDeptByStepTwoResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Dept&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;did&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;deptName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;dept_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Dept getEmpAndDeptByStepTwo(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpAndDeptByStepTwo&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;EmpAndDeptByStepTwoResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_dept where did = #&#123;did&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"一对多映射处理\"><a class=\"markdownIt-Anchor\" href=\"#一对多映射处理\">#</a> 一对多映射处理</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dept</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer did;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String deptName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Emp&gt; emps;</span><br><span class=\"line\">\t<span class=\"comment\">//...构造器、get、set方法等</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"collection\"><a class=\"markdownIt-Anchor\" href=\"#collection\">#</a> collection</h3>\n<ul>\n<li>collection：用来处理一对多的映射关系</li>\n<li>ofType：表示该属性对饮的集合中存储的数据的类型</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;DeptAndEmpResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Dept&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;did&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;deptName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;dept_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;emps&quot;</span> <span class=\"attr\">ofType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;eid&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;eid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;emp_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;email&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Dept getDeptAndEmp(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getDeptAndEmp&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;DeptAndEmpResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_dept left join t_emp on t_dept.did = t_emp.did where t_dept.did = #&#123;did&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"分步查询-2\"><a class=\"markdownIt-Anchor\" href=\"#分步查询-2\">#</a> 分步查询</h3>\n<h4 id=\"1-查询部门信息\"><a class=\"markdownIt-Anchor\" href=\"#1-查询部门信息\">#</a> 1. 查询部门信息</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 通过分步查询，查询部门及对应的所有员工信息</span></span><br><span class=\"line\"><span class=\"comment\"> * 分步查询第一步：查询部门信息</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> did </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> com.atguigu.mybatis.pojo.Dept</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/27 22:04</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">Dept <span class=\"title\">getDeptAndEmpByStepOne</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;did&quot;)</span> Integer did)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;DeptAndEmpByStepOneResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Dept&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;did&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;deptName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;dept_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;emps&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t<span class=\"attr\">select</span>=<span class=\"string\">&quot;com.atguigu.mybatis.mapper.EmpMapper.getDeptAndEmpByStepTwo&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t<span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Dept getDeptAndEmpByStepOne(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getDeptAndEmpByStepOne&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;DeptAndEmpByStepOneResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_dept where did = #&#123;did&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-根据部门id查询部门中的所有员工\"><a class=\"markdownIt-Anchor\" href=\"#2-根据部门id查询部门中的所有员工\">#</a> 2. 根据部门 id 查询部门中的所有员工</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 通过分步查询，查询部门及对应的所有员工信息</span></span><br><span class=\"line\"><span class=\"comment\"> * 分步查询第二步：根据部门id查询部门中的所有员工</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> did</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> java.util.List&lt;com.atguigu.mybatis.pojo.Emp&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/2/27 22:10</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">List&lt;Emp&gt; <span class=\"title\">getDeptAndEmpByStepTwo</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;did&quot;)</span> Integer did)</span></span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;Emp&gt; getDeptAndEmpByStepTwo(@Param(&quot;did&quot;) Integer did);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getDeptAndEmpByStepTwo&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp where did = #&#123;did&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"延迟加载\"><a class=\"markdownIt-Anchor\" href=\"#延迟加载\">#</a> 延迟加载</h2>\n<ul>\n<li>分步查询的优点：可以实现延迟加载，但是必须在核心配置文件中设置全局配置信息：</li>\n<li>lazyLoadingEnabled：延迟加载的全局开关。当开启时，所有关联对象都会延迟加载\n<ul>\n<li>aggressiveLazyLoading：当开启时，任何方法的调用都会加载该对象的所有属性。 否则，每个属性会按需加载</li>\n</ul>\n</li>\n<li>此时就可以实现按需加载，获取的数据是什么，就只会执行相应的 sql。此时可通过 association 和 collection 中的 fetchType 属性设置当前的分步查询是否使用延迟加载，fetchType=“lazy (延迟加载)|eager (立即加载)”</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--开启延迟加载--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;lazyLoadingEnabled&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getEmpAndDeptByStepOne</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tEmpMapper mapper = sqlSession.getMapper(EmpMapper.class);</span><br><span class=\"line\">\tEmp emp = mapper.getEmpAndDeptByStepOne(<span class=\"number\">1</span>);</span><br><span class=\"line\">\tSystem.out.println(emp.getEmpName());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>关闭延迟加载，两条 SQL 语句都运行了<img src=\"/passages/MyBatis/%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E6%B5%8B%E8%AF%951.png\" alt></li>\n<li>开启延迟加载，只运行获取 emp 的 SQL 语句<br>\n<img src=\"/passages/MyBatis/%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E6%B5%8B%E8%AF%952.png\" alt></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getEmpAndDeptByStepOne</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tEmpMapper mapper = sqlSession.getMapper(EmpMapper.class);</span><br><span class=\"line\">\tEmp emp = mapper.getEmpAndDeptByStepOne(<span class=\"number\">1</span>);</span><br><span class=\"line\">\tSystem.out.println(emp.getEmpName());</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;----------------&quot;</span>);</span><br><span class=\"line\">\tSystem.out.println(emp.getDept());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>开启后，需要用到查询 dept 的时候才会调用相应的 SQL 语句<img src=\"/passages/MyBatis/%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E6%B5%8B%E8%AF%953.png\" alt></p>\n</li>\n<li>\n<p>fetchType：当开启了全局的延迟加载之后，可以通过该属性手动控制延迟加载的效果，fetchType=“lazy (延迟加载)|eager (立即加载)”</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;empAndDeptByStepResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;eid&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;eid&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;empName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;emp_name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;sex&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;email&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">association</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;dept&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t <span class=\"attr\">select</span>=<span class=\"string\">&quot;com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t <span class=\"attr\">column</span>=<span class=\"string\">&quot;did&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t <span class=\"attr\">fetchType</span>=<span class=\"string\">&quot;lazy&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">association</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"动态sql\"><a class=\"markdownIt-Anchor\" href=\"#动态sql\">#</a> 动态 SQL</h1>\n<ul>\n<li>Mybatis 框架的动态 SQL 技术是一种根据特定条件动态拼装 SQL 语句的功能，它存在的意义是为了解决拼接 SQL 语句字符串时的痛点问题</li>\n</ul>\n<h2 id=\"if\"><a class=\"markdownIt-Anchor\" href=\"#if\">#</a> if</h2>\n<ul>\n<li>if 标签可通过 test 属性（即传递过来的数据）的表达式进行判断，若表达式的结果为 true，则标签中的内容会执行；反之标签中的内容不会执行</li>\n<li>在 where 后面添加一个恒成立条件 <code>1=1</code></li>\n<li>这个恒成立条件并不会影响查询的结果\n<ul>\n<li>这个 <code>1=1</code>  可以用来拼接 <code>and</code>  语句，例如：当 empName 为 null 时</li>\n<li>如果不加上恒成立条件，则 SQL 语句为 <code>select * from t_emp where and age = ? and sex = ? and email = ?</code> ，此时 <code>where</code>  会与 <code>and</code>  连用，SQL 语句会报错\n<ul>\n<li>如果加上一个恒成立条件，则 SQL 语句为 <code>select * from t_emp where 1= 1 and age = ? and sex = ? and email = ?</code> ，此时不报错</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpByCondition&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp where 1=1</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\tand emp_name = #&#123;empName&#125;</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\tand age = #&#123;age&#125;</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;sex != null and sex !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\tand sex = #&#123;sex&#125;</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;email != null and email !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\tand email = #&#123;email&#125;</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"where\"><a class=\"markdownIt-Anchor\" href=\"#where\">#</a> where</h2>\n<ul>\n<li>where 和 if 一般结合使用：</li>\n<li>若 where 标签中的 if 条件都不满足，则 where 标签没有任何功能，即不会添加 where 关键字\n<ul>\n<li>若 where 标签中的 if 条件满足，则 where 标签会自动添加 where 关键字，并将条件最前方多余的 and/or 去掉</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpByCondition&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\temp_name = #&#123;empName&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\tand age = #&#123;age&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;sex != null and sex !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\tand sex = #&#123;sex&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;email != null and email !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\tand email = #&#123;email&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>注意：where 标签不能去掉条件后多余的 and/or</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--这种用法是错误的，只能去掉条件前面的and/or，条件后面的不行--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">emp_name = #&#123;empName&#125; and</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\tage = #&#123;age&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"trim\"><a class=\"markdownIt-Anchor\" href=\"#trim\">#</a> trim</h2>\n<ul>\n<li>trim 用于去掉或添加标签中的内容</li>\n<li>常用属性</li>\n<li>prefix：在 trim 标签中的内容的前面添加某些内容\n<ul>\n<li>suffix：在 trim 标签中的内容的后面添加某些内容</li>\n<li>prefixOverrides：在 trim 标签中的内容的前面去掉某些内容</li>\n<li>suffixOverrides：在 trim 标签中的内容的后面去掉某些内容</li>\n</ul>\n</li>\n<li>若 trim 中的标签都不满足条件，则 trim 标签没有任何效果，也就是只剩下 <code>select * from t_emp</code></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpByCondition&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">&quot;where&quot;</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">&quot;and|or&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;empName != null and empName !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\temp_name = #&#123;empName&#125; and</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\tage = #&#123;age&#125; and</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;sex != null and sex !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\tsex = #&#123;sex&#125; or</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;email != null and email !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\temail = #&#123;email&#125;</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//测试类</span></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getEmpByCondition</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tDynamicSQLMapper mapper = sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class=\"line\">\tList&lt;Emp&gt; emps= mapper.getEmpByCondition(<span class=\"keyword\">new</span> Emp(<span class=\"keyword\">null</span>, <span class=\"string\">&quot;张三&quot;</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>));</span><br><span class=\"line\">\tSystem.out.println(emps);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/passages/MyBatis/trim%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png\" alt></p>\n<h2 id=\"choose-when-otherwise\"><a class=\"markdownIt-Anchor\" href=\"#choose-when-otherwise\">#</a> choose、when、otherwise</h2>\n<ul>\n<li><code>choose、when、otherwise</code>  相当于 <code>if...else if..else</code></li>\n<li>when 至少要有一个，otherwise 至多只有一个</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpByChoose&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect * from t_emp</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\temp_name = #&#123;empName&#125;</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;age != null and age != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\tage = #&#123;age&#125;</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;sex != null and sex != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\tsex = #&#123;sex&#125;</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;email != null and email != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\temail = #&#123;email&#125;</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">\t\t\t\tdid = 1</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getEmpByChoose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tDynamicSQLMapper mapper = sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class=\"line\">\tList&lt;Emp&gt; emps = mapper.getEmpByChoose(<span class=\"keyword\">new</span> Emp(<span class=\"keyword\">null</span>, <span class=\"string\">&quot;张三&quot;</span>, <span class=\"number\">23</span>, <span class=\"string\">&quot;男&quot;</span>, <span class=\"string\">&quot;123@qq.com&quot;</span>, <span class=\"keyword\">null</span>));</span><br><span class=\"line\">\tSystem.out.println(emps);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/passages/MyBatis/choose%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png\" alt></p>\n<ul>\n<li>相当于 <code>if a else if b else if c else d</code> ，只会执行其中一个</li>\n</ul>\n<h2 id=\"foreach\"><a class=\"markdownIt-Anchor\" href=\"#foreach\">#</a> foreach</h2>\n<ul>\n<li>\n<p>属性：</p>\n</li>\n<li>\n<p>collection：设置要循环的数组或集合</p>\n<ul>\n<li>item：表示集合或数组中的每一个数据</li>\n<li>separator：设置循环体之间的分隔符，分隔符前后默认有一个空格，如 <code>,</code></li>\n<li>open：设置 foreach 标签中的内容的开始符</li>\n<li>close：设置 foreach 标签中的内容的结束符</li>\n</ul>\n</li>\n<li>\n<p>批量删除</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--int deleteMoreByArray(Integer[] eids);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteMoreByArray&quot;</span>&gt;</span></span><br><span class=\"line\">\tdelete from t_emp where eid in</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;eids&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;eid&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t#&#123;eid&#125;</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteMoreByArray</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tDynamicSQLMapper mapper = sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> result = mapper.deleteMoreByArray(<span class=\"keyword\">new</span> Integer[]&#123;<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;);</span><br><span class=\"line\">\tSystem.out.println(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"/passages/MyBatis/foreach%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C1.png\" alt></p>\n<ul>\n<li>\n<p>批量添加</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--int insertMoreByList(@Param(&quot;emps&quot;) List&lt;Emp&gt; emps);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertMoreByList&quot;</span>&gt;</span></span><br><span class=\"line\">\tinsert into t_emp values</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;emps&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;emp&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t(null,#&#123;emp.empName&#125;,#&#123;emp.age&#125;,#&#123;emp.sex&#125;,#&#123;emp.email&#125;,null)</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertMoreByList</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tSqlSession sqlSession = SqlSessionUtils.getSqlSession();</span><br><span class=\"line\">\tDynamicSQLMapper mapper = sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class=\"line\">\tEmp emp1 = <span class=\"keyword\">new</span> Emp(<span class=\"keyword\">null</span>,<span class=\"string\">&quot;a&quot;</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;男&quot;</span>,<span class=\"string\">&quot;123@321.com&quot;</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\tEmp emp2 = <span class=\"keyword\">new</span> Emp(<span class=\"keyword\">null</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;男&quot;</span>,<span class=\"string\">&quot;123@321.com&quot;</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\tEmp emp3 = <span class=\"keyword\">new</span> Emp(<span class=\"keyword\">null</span>,<span class=\"string\">&quot;c&quot;</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;男&quot;</span>,<span class=\"string\">&quot;123@321.com&quot;</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\tList&lt;Emp&gt; emps = Arrays.asList(emp1, emp2, emp3);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> result = mapper.insertMoreByList(emps);</span><br><span class=\"line\">\tSystem.out.println(result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/passages/MyBatis/foreach%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C2.png\" alt></p>\n</li>\n</ul>\n<h2 id=\"sql片段\"><a class=\"markdownIt-Anchor\" href=\"#sql片段\">#</a> SQL 片段</h2>\n<ul>\n<li>sql 片段，可以记录一段公共 sql 片段，在使用的地方通过 include 标签进行引入</li>\n<li>声明 sql 片段： <code>&lt;sql&gt;</code>  标签</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;empColumns&quot;</span>&gt;</span>eid,emp_name,age,sex,email<span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>引用 sql 片段： <code>&lt;include&gt;</code>  标签</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getEmpByCondition&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Emp&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;empColumns&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span> from t_emp</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"mybatis的缓存\"><a class=\"markdownIt-Anchor\" href=\"#mybatis的缓存\">#</a> MyBatis 的缓存</h1>\n<h2 id=\"mybatis的一级缓存\"><a class=\"markdownIt-Anchor\" href=\"#mybatis的一级缓存\">#</a> MyBatis 的一级缓存</h2>\n<ul>\n<li>\n<p>一级缓存是 SqlSession 级别的，通过同一个 SqlSession 查询的数据会被缓存，下次查询相同的数据，就会从缓存中直接获取，不会从数据库重新访问</p>\n</li>\n<li>\n<p>使一级缓存失效的四种情况：</p>\n<ol>\n<li>不同的 SqlSession 对应不同的一级缓存</li>\n<li>同一个 SqlSession 但是查询条件不同</li>\n<li>同一个 SqlSession 两次查询期间执行了任何一次增删改操作</li>\n<li>同一个 SqlSession 两次查询期间手动清空了缓存</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"mybatis的二级缓存\"><a class=\"markdownIt-Anchor\" href=\"#mybatis的二级缓存\">#</a> MyBatis 的二级缓存</h2>\n<ul>\n<li>\n<p>二级缓存是 SqlSessionFactory 级别，通过同一个 SqlSessionFactory 创建的 SqlSession 查询的结果会被缓存；此后若再次执行相同的查询语句，结果就会从缓存中获取</p>\n</li>\n<li>\n<p>二级缓存开启的条件</p>\n<ol>\n<li>在核心配置文件中，设置全局配置属性 cacheEnabled=“true”，默认为 true，不需要设置</li>\n<li>在映射文件中设置标签<cache></cache></li>\n<li>二级缓存必须在 SqlSession 关闭或提交之后有效</li>\n<li>查询的数据所转换的实体类类型必须实现序列化的接口</li>\n</ol>\n</li>\n<li>\n<p>使二级缓存失效的情况：两次查询之间执行了任意的增删改，会使一级和二级缓存同时失效</p>\n</li>\n</ul>\n<h2 id=\"二级缓存的相关配置\"><a class=\"markdownIt-Anchor\" href=\"#二级缓存的相关配置\">#</a> 二级缓存的相关配置</h2>\n<ul>\n<li>在 mapper 配置文件中添加的 cache 标签可以设置一些属性</li>\n<li>eviction 属性：缓存回收策略</li>\n<li>LRU（Least Recently Used） – 最近最少使用的：移除最长时间不被使用的对象。\n<ul>\n<li>FIFO（First in First out） – 先进先出：按对象进入缓存的顺序来移除它们。</li>\n<li>SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。</li>\n<li>WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。</li>\n<li>默认的是 LRU</li>\n</ul>\n</li>\n<li>flushInterval 属性：刷新间隔，单位毫秒</li>\n<li>默认情况是不设置，也就是没有刷新间隔，缓存仅仅调用语句（增删改）时刷新</li>\n<li>size 属性：引用数目，正整数</li>\n<li>代表缓存最多可以存储多少个对象，太大容易导致内存溢出</li>\n<li>readOnly 属性：只读，true/false</li>\n<li>true：只读缓存；会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了很重要的性能优势。\n<ul>\n<li>false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是 false</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mybatis缓存查询的顺序\"><a class=\"markdownIt-Anchor\" href=\"#mybatis缓存查询的顺序\">#</a> MyBatis 缓存查询的顺序</h2>\n<ul>\n<li>先查询二级缓存，因为二级缓存中可能会有其他程序已经查出来的数据，可以拿来直接使用</li>\n<li>如果二级缓存没有命中，再查询一级缓存</li>\n<li>如果一级缓存也没有命中，则查询数据库</li>\n<li>SqlSession 关闭之后，一级缓存中的数据会写入二级缓存</li>\n</ul>\n<h2 id=\"整合第三方缓存ehcache了解\"><a class=\"markdownIt-Anchor\" href=\"#整合第三方缓存ehcache了解\">#</a> 整合第三方缓存 EHCache（了解）</h2>\n<h3 id=\"添加依赖\"><a class=\"markdownIt-Anchor\" href=\"#添加依赖\">#</a> 添加依赖</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Mybatis EHCache整合包 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.caches<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-ehcache<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- slf4j日志门面的一个具体实现 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>ch.qos.logback<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>logback-classic<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"各个jar包的功能\"><a class=\"markdownIt-Anchor\" href=\"#各个jar包的功能\">#</a> 各个 jar 包的功能</h3>\n<table>\n<thead>\n<tr>\n<th>jar 包名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mybatis-ehcache</td>\n<td>Mybatis 和 EHCache 的整合包</td>\n</tr>\n<tr>\n<td>ehcache</td>\n<td>EHCache 核心包</td>\n</tr>\n<tr>\n<td>slf4j-api</td>\n<td>SLF4J 日志门面包</td>\n</tr>\n<tr>\n<td>logback-classic</td>\n<td>支持 SLF4J 门面接口的一个具体实现</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"创建ehcache的配置文件ehcachexml\"><a class=\"markdownIt-Anchor\" href=\"#创建ehcache的配置文件ehcachexml\">#</a> 创建 EHCache 的配置文件 ehcache.xml</h3>\n<ul>\n<li>名字必须叫 <code>ehcache.xml</code></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ehcache</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:noNamespaceSchemaLocation</span>=<span class=\"string\">&quot;../config/ehcache.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 磁盘保存路径 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">diskStore</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;D:\\atguigu\\ehcache&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">defaultCache</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">maxElementsInMemory</span>=<span class=\"string\">&quot;1000&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">maxElementsOnDisk</span>=<span class=\"string\">&quot;10000000&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">eternal</span>=<span class=\"string\">&quot;false&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">overflowToDisk</span>=<span class=\"string\">&quot;true&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">timeToIdleSeconds</span>=<span class=\"string\">&quot;120&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">timeToLiveSeconds</span>=<span class=\"string\">&quot;120&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">diskExpiryThreadIntervalSeconds</span>=<span class=\"string\">&quot;120&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">memoryStoreEvictionPolicy</span>=<span class=\"string\">&quot;LRU&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">defaultCache</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"设置二级缓存的类型\"><a class=\"markdownIt-Anchor\" href=\"#设置二级缓存的类型\">#</a> 设置二级缓存的类型</h3>\n<ul>\n<li>在 xxxMapper.xml 文件中设置二级缓存类型</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cache</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"加入logback日志\"><a class=\"markdownIt-Anchor\" href=\"#加入logback日志\">#</a> 加入 logback 日志</h3>\n<ul>\n<li>存在 SLF4J 时，作为简易日志的 log4j 将失效，此时我们需要借助 SLF4J 的具体实现 logback 来打印日志。创建 logback 的配置文件 <code>logback.xml</code> ，名字固定，不可改变</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span> <span class=\"attr\">debug</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定日志输出的位置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;STDOUT&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 日志输出的格式 --&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 按照顺序分别是：时间、日志级别、线程名称、打印日志的类、日志主体内容、换行 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>[%d&#123;HH:mm:ss.SSS&#125;] [%-5level] [%thread] [%logger] [%msg]%n<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 设置全局日志级别。日志级别按顺序分别是：DEBUG、INFO、WARN、ERROR --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定任何一个日志级别都只打印当前级别和后面级别的日志。 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 指定打印日志的appender，这里通过“STDOUT”引用了前面配置的appender --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 根据特殊需求指定局部日志级别 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">logger</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.atguigu.crowd.mapper&quot;</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"ehcache配置文件说明\"><a class=\"markdownIt-Anchor\" href=\"#ehcache配置文件说明\">#</a> EHCache 配置文件说明</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>是否必须</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>maxElementsInMemory</td>\n<td>是</td>\n<td>在内存中缓存的 element 的最大数目</td>\n</tr>\n<tr>\n<td>maxElementsOnDisk</td>\n<td>是</td>\n<td>在磁盘上缓存的 element 的最大数目，若是 0 表示无穷大</td>\n</tr>\n<tr>\n<td>eternal</td>\n<td>是</td>\n<td>设定缓存的 elements 是否永远不过期。 如果为 true，则缓存的数据始终有效， 如果为 false 那么还要根据 timeToIdleSeconds、timeToLiveSeconds 判断</td>\n</tr>\n<tr>\n<td>overflowToDisk</td>\n<td>是</td>\n<td>设定当内存缓存溢出的时候是否将过期的 element 缓存到磁盘上</td>\n</tr>\n<tr>\n<td>timeToIdleSeconds</td>\n<td>否</td>\n<td>当缓存在 EhCache 中的数据前后两次访问的时间超过 timeToIdleSeconds 的属性取值时， 这些数据便会删除，默认值是 0, 也就是可闲置时间无穷大</td>\n</tr>\n<tr>\n<td>timeToLiveSeconds</td>\n<td>否</td>\n<td>缓存 element 的有效生命期，默认是 0., 也就是 element 存活时间无穷大</td>\n</tr>\n<tr>\n<td>diskSpoolBufferSizeMB</td>\n<td>否</td>\n<td>DiskStore (磁盘缓存) 的缓存区大小。默认是 30MB。每个 Cache 都应该有自己的一个缓冲区</td>\n</tr>\n<tr>\n<td>diskPersistent</td>\n<td>否</td>\n<td>在 VM 重启的时候是否启用磁盘保存 EhCache 中的数据，默认是 false</td>\n</tr>\n<tr>\n<td>diskExpiryThreadIntervalSeconds</td>\n<td>否</td>\n<td>磁盘缓存的清理线程运行间隔，默认是 120 秒。每个 120s， 相应的线程会进行一次 EhCache 中数据的清理工作</td>\n</tr>\n<tr>\n<td>memoryStoreEvictionPolicy</td>\n<td>否</td>\n<td>当内存缓存达到最大，有新的 element 加入的时候， 移除缓存中 element 的策略。 默认是 LRU（最近最少使用），可选的有 LFU（最不常使用）和 FIFO（先进先出</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"mybatis的逆向工程\"><a class=\"markdownIt-Anchor\" href=\"#mybatis的逆向工程\">#</a> MyBatis 的逆向工程</h1>\n<ul>\n<li>正向工程：先创建 Java 实体类，由框架负责根据实体类生成数据库表。Hibernate 是支持正向工程的</li>\n<li>逆向工程：先创建数据库表，由框架负责根据数据库表，反向生成如下资源：</li>\n<li>Java 实体类\n<ul>\n<li>Mapper 接口</li>\n<li>Mapper 映射文件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"创建逆向工程的步骤\"><a class=\"markdownIt-Anchor\" href=\"#创建逆向工程的步骤\">#</a> 创建逆向工程的步骤</h2>\n<h3 id=\"添加依赖和插件\"><a class=\"markdownIt-Anchor\" href=\"#添加依赖和插件\">#</a> 添加依赖和插件</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- MyBatis核心依赖包 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- junit测试 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.13.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.27<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- log4j日志 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 构建过程中用到的插件 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 插件的依赖 --&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">&lt;!-- 逆向工程的核心依赖 --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.mchange<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.27<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建mybatis的核心配置文件-2\"><a class=\"markdownIt-Anchor\" href=\"#创建mybatis的核心配置文件-2\">#</a> 创建 MyBatis 的核心配置文件</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"meta-keyword\">PUBLIC</span> <span class=\"meta-string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建逆向工程的配置文件\"><a class=\"markdownIt-Anchor\" href=\"#创建逆向工程的配置文件\">#</a> 创建逆向工程的配置文件</h3>\n<ul>\n<li>文件名必须是： <code>generatorConfig.xml</code></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">generatorConfiguration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"meta-keyword\">PUBLIC</span> <span class=\"meta-string\">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"meta-string\">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    targetRuntime: 执行生成的逆向工程的版本</span></span><br><span class=\"line\"><span class=\"comment\">    MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span></span><br><span class=\"line\"><span class=\"comment\">    MyBatis3: 生成带条件的CRUD（奢华尊享版）</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;DB2Tables&quot;</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">&quot;MyBatis3Simple&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 数据库的连接信息 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">connectionURL</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">userId</span>=<span class=\"string\">&quot;root&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">password</span>=<span class=\"string\">&quot;123456&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- javaBean的生成策略--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;com.atguigu.mybatis.pojo&quot;</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;.\\src\\main\\java&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;enableSubPackages&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;trimStrings&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- SQL映射文件的生成策略 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;com.atguigu.mybatis.mapper&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;.\\src\\main\\resources&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;enableSubPackages&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Mapper接口的生成策略 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;XMLMAPPER&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                             <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;.\\src\\main\\java&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;enableSubPackages&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 逆向分析的表 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">&quot;t_emp&quot;</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">&quot;Emp&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">&quot;t_dept&quot;</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">&quot;Dept&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"执行mbg插件的generate目标\"><a class=\"markdownIt-Anchor\" href=\"#执行mbg插件的generate目标\">#</a> 执行 MBG 插件的 generate 目标</h3>\n<ul>\n<li><img src=\"/passages/MyBatis/%E6%89%A7%E8%A1%8CMBG%E6%8F%92%E4%BB%B6%E7%9A%84generate%E7%9B%AE%E6%A0%87.png\" alt></li>\n<li>如果出现报错： <code>Exception getting JDBC Driver</code> ，可能是 pom.xml 中，数据库驱动配置错误</li>\n<li>dependency 中的驱动<img src=\"/passages/MyBatis/dependency%E4%B8%AD%E7%9A%84%E9%A9%B1%E5%8A%A8.png\" alt>\n<ul>\n<li>mybatis-generator-maven-plugin 插件中的驱动<img src=\"/passages/MyBatis/%E6%8F%92%E4%BB%B6%E4%B8%AD%E7%9A%84%E9%A9%B1%E5%8A%A8.png\" alt></li>\n<li>两者的驱动版本应该相同</li>\n</ul>\n</li>\n<li>执行结果<img src=\"/passages/MyBatis/%E9%80%86%E5%90%91%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.png\" alt></li>\n</ul>\n<h2 id=\"qbc\"><a class=\"markdownIt-Anchor\" href=\"#qbc\">#</a> QBC</h2>\n<h3 id=\"查询\"><a class=\"markdownIt-Anchor\" href=\"#查询\">#</a> 查询</h3>\n<ul>\n<li><code>selectByExample</code> ：按条件查询，需要传入一个 example 对象或者 null；如果传入一个 null，则表示没有条件，也就是查询所有数据</li>\n<li><code>example.createCriteria().xxx</code> ：创建条件对象，通过 andXXX 方法为 SQL 添加查询添加，每个条件之间是 and 关系</li>\n<li><code>example.or().xxx</code> ：将之前添加的条件通过 or 拼接其他条件<br>\n<img src=\"/passages/MyBatis/example%E7%9A%84%E6%96%B9%E6%B3%95.png\" alt></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testMBG</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\tInputStream is = Resources.getResourceAsStream(<span class=\"string\">&quot;mybatis-config.xml&quot;</span>);</span><br><span class=\"line\">\tSqlSessionFactoryBuilder sqlSessionFactoryBuilder = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder();</span><br><span class=\"line\">\tSqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(is);</span><br><span class=\"line\">\tSqlSession sqlSession = sqlSessionFactory.openSession(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\tEmpMapper mapper = sqlSession.getMapper(EmpMapper.class);</span><br><span class=\"line\">\tEmpExample example = <span class=\"keyword\">new</span> EmpExample();</span><br><span class=\"line\">\t<span class=\"comment\">//名字为张三，且年龄大于等于20</span></span><br><span class=\"line\">\texample.createCriteria().andEmpNameEqualTo(<span class=\"string\">&quot;张三&quot;</span>).andAgeGreaterThanOrEqualTo(<span class=\"number\">20</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//或者did不为空</span></span><br><span class=\"line\">\texample.or().andDidIsNotNull();</span><br><span class=\"line\">\tList&lt;Emp&gt; emps = mapper.selectByExample(example);</span><br><span class=\"line\">\temps.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/passages/MyBatis/example%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png\" alt></p>\n<h3 id=\"增改\"><a class=\"markdownIt-Anchor\" href=\"#增改\">#</a> 增改</h3>\n<ul>\n<li><code>updateByPrimaryKey</code> ：通过主键进行数据修改，如果某一个值为 null，也会将对应的字段改为 null</li>\n<li><code>mapper.updateByPrimaryKey(new Emp(1,&quot;admin&quot;,22,null,&quot;456@qq.com&quot;,3));</code>\n<ul>\n<li><img src=\"/passages/MyBatis/%E5%A2%9E%E5%88%A0%E6%94%B9%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C1.png\" alt></li>\n</ul>\n</li>\n<li><code>updateByPrimaryKeySelective()</code> ：通过主键进行选择性数据修改，如果某个值为 null，则不修改这个字段</li>\n<li><code>mapper.updateByPrimaryKeySelective(new Emp(2,&quot;admin2&quot;,22,null,&quot;456@qq.com&quot;,3));</code>\n<ul>\n<li><img src=\"/passages/MyBatis/%E5%A2%9E%E5%88%A0%E6%94%B9%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C2.png\" alt></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"分页插件\"><a class=\"markdownIt-Anchor\" href=\"#分页插件\">#</a> 分页插件</h1>\n<h2 id=\"分页插件使用步骤\"><a class=\"markdownIt-Anchor\" href=\"#分页插件使用步骤\">#</a> 分页插件使用步骤</h2>\n<h3 id=\"添加依赖-2\"><a class=\"markdownIt-Anchor\" href=\"#添加依赖-2\">#</a> 添加依赖</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置分页插件\"><a class=\"markdownIt-Anchor\" href=\"#配置分页插件\">#</a> 配置分页插件</h3>\n<ul>\n<li>在 MyBatis 的核心配置文件（mybatis-config.xml）中配置插件</li>\n<li><img src=\"/passages/MyBatis/%E9%85%8D%E7%BD%AE%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.png\" alt></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--设置分页插件--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">interceptor</span>=<span class=\"string\">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"分页插件的使用\"><a class=\"markdownIt-Anchor\" href=\"#分页插件的使用\">#</a> 分页插件的使用</h2>\n<h3 id=\"开启分页功能\"><a class=\"markdownIt-Anchor\" href=\"#开启分页功能\">#</a> 开启分页功能</h3>\n<ul>\n<li>在查询功能之前使用 <code>PageHelper.startPage(int pageNum, int pageSize)</code>  开启分页功能</li>\n<li>pageNum：当前页的页码\n<ul>\n<li>pageSize：每页显示的条数</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testPageHelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\tInputStream is = Resources.getResourceAsStream(<span class=\"string\">&quot;mybatis-config.xml&quot;</span>);</span><br><span class=\"line\">\tSqlSessionFactoryBuilder sqlSessionFactoryBuilder = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder();</span><br><span class=\"line\">\tSqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(is);</span><br><span class=\"line\">\tSqlSession sqlSession = sqlSessionFactory.openSession(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\tEmpMapper mapper = sqlSession.getMapper(EmpMapper.class);</span><br><span class=\"line\">\t<span class=\"comment\">//访问第一页，每页四条数据</span></span><br><span class=\"line\">\tPageHelper.startPage(<span class=\"number\">1</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">\tList&lt;Emp&gt; emps = mapper.selectByExample(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\temps.forEach(System.out::println);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/passages/MyBatis/%E5%88%86%E9%A1%B5%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png\" alt></p>\n<h3 id=\"分页相关数据\"><a class=\"markdownIt-Anchor\" href=\"#分页相关数据\">#</a> 分页相关数据</h3>\n<h4 id=\"方法一直接输出\"><a class=\"markdownIt-Anchor\" href=\"#方法一直接输出\">#</a> 方法一：直接输出</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testPageHelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\tInputStream is = Resources.getResourceAsStream(<span class=\"string\">&quot;mybatis-config.xml&quot;</span>);</span><br><span class=\"line\">\tSqlSessionFactoryBuilder sqlSessionFactoryBuilder = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder();</span><br><span class=\"line\">\tSqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(is);</span><br><span class=\"line\">\tSqlSession sqlSession = sqlSessionFactory.openSession(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\tEmpMapper mapper = sqlSession.getMapper(EmpMapper.class);</span><br><span class=\"line\">\t<span class=\"comment\">//访问第一页，每页四条数据</span></span><br><span class=\"line\">\tPage&lt;Object&gt; page = PageHelper.startPage(<span class=\"number\">1</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tList&lt;Emp&gt; emps = mapper.selectByExample(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//在查询到List集合后，打印分页数据</span></span><br><span class=\"line\">\tSystem.out.println(page);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>分页相关数据：</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page&#123;count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=8, pages=2, reasonable=false, pageSizeZero=false&#125;[Emp&#123;eid=1, empName=&#x27;admin&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=2, empName=&#x27;admin2&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=3, empName=&#x27;王五&#x27;, age=12, sex=&#x27;女&#x27;, email=&#x27;123@qq.com&#x27;, did=3&#125;, Emp&#123;eid=4, empName=&#x27;赵六&#x27;, age=32, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;, did=1&#125;]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"方法二使用pageinfo\"><a class=\"markdownIt-Anchor\" href=\"#方法二使用pageinfo\">#</a> 方法二使用 PageInfo</h4>\n<ul>\n<li>在查询获取 list 集合之后，使用 <code>PageInfo&lt;T&gt; pageInfo = new PageInfo&lt;&gt;(List&lt;T&gt; list, intnavigatePages)</code>  获取分页相关数据</li>\n<li>list：分页之后的数据\n<ul>\n<li>navigatePages：导航分页的页码数</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testPageHelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\tInputStream is = Resources.getResourceAsStream(<span class=\"string\">&quot;mybatis-config.xml&quot;</span>);</span><br><span class=\"line\">\tSqlSessionFactoryBuilder sqlSessionFactoryBuilder = <span class=\"keyword\">new</span> SqlSessionFactoryBuilder();</span><br><span class=\"line\">\tSqlSessionFactory sqlSessionFactory = sqlSessionFactoryBuilder.build(is);</span><br><span class=\"line\">\tSqlSession sqlSession = sqlSessionFactory.openSession(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\tEmpMapper mapper = sqlSession.getMapper(EmpMapper.class);</span><br><span class=\"line\">\tPageHelper.startPage(<span class=\"number\">1</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">\tList&lt;Emp&gt; emps = mapper.selectByExample(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\tPageInfo&lt;Emp&gt; page = <span class=\"keyword\">new</span> PageInfo&lt;&gt;(emps,<span class=\"number\">5</span>);</span><br><span class=\"line\">\tSystem.out.println(page);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>分页相关数据：</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageInfo&#123;</span><br><span class=\"line\">pageNum=1, pageSize=4, size=4, startRow=1, endRow=4, total=8, pages=2, </span><br><span class=\"line\">list=Page&#123;count=true, pageNum=1, pageSize=4, startRow=0, endRow=4, total=8, pages=2, reasonable=false, pageSizeZero=false&#125;[Emp&#123;eid=1, empName=&#x27;admin&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=2, empName=&#x27;admin2&#x27;, age=22, sex=&#x27;男&#x27;, email=&#x27;456@qq.com&#x27;, did=3&#125;, Emp&#123;eid=3, empName=&#x27;王五&#x27;, age=12, sex=&#x27;女&#x27;, email=&#x27;123@qq.com&#x27;, did=3&#125;, Emp&#123;eid=4, empName=&#x27;赵六&#x27;, age=32, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;, did=1&#125;], </span><br><span class=\"line\">prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=5, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>其中 list 中的数据等同于方法一中直接输出的 page 数据</p>\n</li>\n</ul>\n<h4 id=\"常用数据\"><a class=\"markdownIt-Anchor\" href=\"#常用数据\">#</a> 常用数据：</h4>\n<ul>\n<li>pageNum：当前页的页码</li>\n<li>pageSize：每页显示的条数</li>\n<li>size：当前页显示的真实条数</li>\n<li>total：总记录数</li>\n<li>pages：总页数</li>\n<li>prePage：上一页的页码</li>\n<li>nextPage：下一页的页码</li>\n<li>isFirstPage/isLastPage：是否为第一页 / 最后一页</li>\n<li>hasPreviousPage/hasNextPage：是否存在上一页 / 下一页</li>\n<li>navigatePages：导航分页的页码数</li>\n<li>navigatepageNums：导航分页的页码，[1,2,3,4,5]</li>\n</ul>\n",
            "tags": [
                "学习 教程"
            ]
        },
        {
            "id": "http://example.com/passages/C%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "url": "http://example.com/passages/C%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "title": "C语言快速入门",
            "date_published": "2021-10-09T04:31:29.000Z",
            "content_html": "<h1 id=\"序言\"><a class=\"markdownIt-Anchor\" href=\"#序言\">#</a> 序言</h1>\n<p>​        C 语言是一种面向过程的计算机编程语言，多用于嵌入式开发（电路硬件编程）与系统底层编写， 比如我们常用的 Linux 系统，Windows 系统就是主要由 C 语言编写的。同时 c 语言也是最早出现的编程语 言之一，最早在 1972 年就已经被使用，并且直到现在它也是使用率最多的编程语言之一。</p>\n<h2 id=\"计算机的内存\"><a class=\"markdownIt-Anchor\" href=\"#计算机的内存\">#</a> 计算机的内存</h2>\n<p>代码本身存储在计算机的硬盘里，不管计算机开机还是关机，你写的程序的代码都是存在的，但是 一个程序要想运行起来就需要运行在计算机的内存里。</p>\n<p>可以将计算机的内存想象成一个大的空间，这个空间中有各种各样的程序在运行着，并且每个程序 都会占用一定的空间，而所占空间的大小由程序本身所有的一些变量，函数等决定。</p>\n<h2 id=\"什么是编译器\"><a class=\"markdownIt-Anchor\" href=\"#什么是编译器\">#</a> 什么是编译器</h2>\n<p>我们的计算机只能够识别由 0 和 1 的二进制码，因此我们写出来的代码要想运行起来必须经过软件的 编译，将英文的编程语句转换为电脑能够识别的二进制码，不论哪种编程语言，最终都会经过编译转换 为计算机可识别的二进制码。** 将代码转换为二进制机器码的过程就叫做编译，负责进行转换的程序叫做 编译器。** 例如 gcc 编译器 等</p>\n<h2 id=\"ide集成开发环境是什么\"><a class=\"markdownIt-Anchor\" href=\"#ide集成开发环境是什么\">#</a> IDE (集成开发环境) 是什么</h2>\n<p>​        IDE 是 Intergreated Development Environment 的缩写，中文称为集成开发环境，是指辅助程序 员开发的应用软件。</p>\n<p>​        我们已经知道，想要运行一个 C 语言程序必须有编译器，但是在实际开发过程中，除运行程序必须 的编译器之外，我们往往还需要很多其他的辅助工具，比如 语言编辑器、自动建立工具、除错器等等 。这些被打包在一起成为一个开发软件， 统一发布和安装，统称为集成开发环境（IDE）。比如我们使 用的 VS2010，devc++，CLion 等都是 IDE。</p>\n<p><strong>IDE 与编译器的区别</strong></p>\n<p>​       IDE 是编译器与其它各种开发工具的集合体。</p>\n<p><strong>面向过程思想</strong></p>\n<p>​\t\t面向过程是一种以过程为中心的编程思想，其原理就是将问题分解成一个一个详细的步骤，然后通 过函数实现每一个步骤，并依次调用。 面向过程我们所关心的是解决一个问题的步骤，举个例子，汽车发动、汽车熄火，这是两个不同 的事件，对于面向过程而言，我们关心的是事件本身，因此我们会使用两个函数完成以上两个动作，然 后依次调用即可。</p>\n<p>​\t\t再比如 进入游戏，开始游戏，游戏结算，这是三个不同的事件，我们在玩游戏时只会关注这三个事 件，我们可以使用函数来表示这三个不同的动作，依次调用。</p>\n<p>计算机基本快捷键的使用</p>\n<ol>\n<li>ctrl + 空格 /ctrl+shift : 快速切换中英文输入法</li>\n<li>Ctrl-X：剪切所选项并拷贝到剪贴板。</li>\n<li>Ctrl-C：将所选项拷贝到剪贴板。</li>\n<li>Ctrl-V：将剪贴板的内容粘贴到当前文稿或应用中。</li>\n<li>Ctrl-Z：撤销上一个命令。</li>\n<li>Ctrl-A：全选各项。</li>\n<li>Ctrl-S: 保存当前文件</li>\n<li>Ctrl-F：查找文稿中的项目或打开 “查找” 窗口。</li>\n<li>win+R: 唤起 “运行” 对话框，快速运行特定程序</li>\n<li>win+X: 唤起系统菜单</li>\n</ol>\n<h2 id=\"第一个程序hello-world\"><a class=\"markdownIt-Anchor\" href=\"#第一个程序hello-world\">#</a> 第一个程序（Hello World!)</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"comment\">/* 我的第一个 C 程序 */</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello, World! \\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"程序解析\"><a class=\"markdownIt-Anchor\" href=\"#程序解析\">#</a> 程序解析</h2>\n<p>一个最基础的 C 语言程序由 <strong>预处理器指令，函数，变量，语句和表达式 以及 注释</strong>组成</p>\n<p>接下来我们讲解一下上面这段程序：</p>\n<ol>\n<li>程序的第一行 <strong>#include</strong> 是预处理器指令，告诉 C 编译器在实际编译之前要包含<strong> stdio.h</strong> 文 件，可以将头文件理解为一个工具箱，在我们开始工作前，需要先拿好工具箱才能开始我们的 工作。</li>\n<li>下一行<strong> int main ()</strong> 是主函数，程序从这里开始执行。</li>\n<li>下一行 <strong>/<em>…</em>/</strong> 将会被编译器忽略，不会执行，这里放置程序的注释内容。它们用来告诉读者 这个程序或者这些代码要做什么。</li>\n<li>下一行 **printf (…)** 是 C 中另一个可用的函数，会在屏幕上显示消息 “Hello, World!”。</li>\n<li>下一行 <strong>return 0;</strong> 终止 main () 函数，并返回值 0，表示程序完整地结束。</li>\n</ol>\n<h1 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\">#</a> 基本语法</h1>\n<p>​\t\t分号：在 c 语言中，每个语句之后必须跟一个 <strong>英文分号</strong>表示一个语句的结束</p>\n<p>​\t\t注释：C 语言有两种注释方式，分别是 <strong>//<strong> 和</strong>上文那种</strong>，// 是单行注释，只会将一行标注为注释，而<strong>上文那种</strong>是多行注释。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 单行注释 //</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">多行注释</span></span><br><span class=\"line\"><span class=\"comment\">多行注释</span></span><br><span class=\"line\"><span class=\"comment\">多行注释</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>标识符:</strong></p>\n<p>​\t\tC 标识符内不允许出现标点字符，比如 @、$ 和 %。C 语言是<strong>区分大小写</strong>的编程语言。因此，在 C 中， Manpower 和 manpower 是两个不同的标识符。</p>\n<h1 id=\"数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型\">#</a> 数据类型</h1>\n<h2 id=\"基本类型\"><a class=\"markdownIt-Anchor\" href=\"#基本类型\">#</a> 基本类型</h2>\n<h3 id=\"int整型\"><a class=\"markdownIt-Anchor\" href=\"#int整型\">#</a> <strong>int（整型）</strong></h3>\n<p>​\t\t可以用来声明一个整数变量</p>\n<h3 id=\"short短字节类型\"><a class=\"markdownIt-Anchor\" href=\"#short短字节类型\">#</a> <strong>short（短字节类型）</strong></h3>\n<p>​\t\t可以用来声明短整形（节约内存）</p>\n<h3 id=\"long-int长字节类型\"><a class=\"markdownIt-Anchor\" href=\"#long-int长字节类型\">#</a> <strong>long int（长字节类型）</strong></h3>\n<p>​\t\t当数据的大小超出 int 类型的上限时，可以使用 long int 甚至是 long long int 来扩大取值范围</p>\n<h3 id=\"double和float浮点类型\"><a class=\"markdownIt-Anchor\" href=\"#double和float浮点类型\">#</a> <strong>double 和 float（浮点类型）</strong></h3>\n<p>​\t\tdouble 和 float 用来表示浮点数（小数）</p>\n<p>​\t\t区别：</p>\n<p>​\t\t double 可以存储到小数点后 15 位，float 可以存储到小数点后 6 位</p>\n<h3 id=\"char字符类型\"><a class=\"markdownIt-Anchor\" href=\"#char字符类型\">#</a> <strong>char（字符类型）</strong></h3>\n<p>​\t\tchar 是最小的基本类型，只占 1 个字节的存储空间，主要用来表示字符，例如‘a’,‘b’,‘c’,‘d’等。</p>\n<p>​\t\t 值得注意的是，<strong>char 类型的‘1’和 int 类型的 1 是不一样的</strong>，在实际编写代码时需要注意。</p>\n<h3 id=\"unsigned无符号修饰符\"><a class=\"markdownIt-Anchor\" href=\"#unsigned无符号修饰符\">#</a> <strong>unsigned（无符号）修饰符</strong></h3>\n<p>​\t\tunsigned 可以用来修饰前面的数据类型，例如 unsigned int,unsigned char,unsigned double 等， 被 unsigned 修饰的数据类型其所占的存储空间大小不变，但是最大值会扩大为原来的 2 倍，最小值变为 0. 也就是说，一个数据类型被 unsigned 修饰以后，这个数据类型将变为无符号类型，也就是其不再有负 数值。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> age = <span class=\"number\">20201022</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> year = <span class=\"number\">2020</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">short</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">short</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> num = <span class=\"number\">1234567890</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> weight = <span class=\"number\">188.5326</span>;</span><br><span class=\"line\"><span class=\"keyword\">float</span> high = <span class=\"number\">100.25</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> <span class=\"keyword\">int</span> a=<span class=\"number\">32767</span>,b=a+<span class=\"number\">1</span>;<span class=\"comment\">//定义短整型无符号</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=%u\\nb=%u\\n&quot;</span>,a,b);<span class=\"comment\">//以无符号输出</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>相对于 unsigned，还有一个 signed 修饰符，signed 是有符号修饰符，但是我们一般省略他，c 语 言默认的数据类型都是有符号的</strong></p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>储存空间大小</th>\n<th>最小值</th>\n<th>最大值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>char</td>\n<td>（与 signed char 或 unsigned char 相同）</td>\n<td>（与 signed char 或 unsigned char 相同）</td>\n<td>（与 signed char 或 unsigned char 相同）</td>\n</tr>\n<tr>\n<td>unsigned char</td>\n<td>1 个字节</td>\n<td>0</td>\n<td>255</td>\n</tr>\n<tr>\n<td>signed char</td>\n<td>1 个字节</td>\n<td>-128</td>\n<td>127</td>\n</tr>\n<tr>\n<td>int</td>\n<td>2 个或 4 个字节</td>\n<td>-32 768 或 -2 147 483 684</td>\n<td>32 768 或 2 147 483 684</td>\n</tr>\n<tr>\n<td>unsigned int</td>\n<td>2 个或 4 个字节</td>\n<td>0</td>\n<td>65 535 或 4 294 967 295</td>\n</tr>\n<tr>\n<td>short</td>\n<td>2 个字节</td>\n<td>-32 768</td>\n<td>32 767</td>\n</tr>\n<tr>\n<td>unsigned short</td>\n<td>2 个字节</td>\n<td>0</td>\n<td>65 535</td>\n</tr>\n<tr>\n<td>long</td>\n<td>4 个字节</td>\n<td>-2 147 483 648</td>\n<td>2 147 483 647</td>\n</tr>\n<tr>\n<td>unsigned long</td>\n<td>4 个字节</td>\n<td>0</td>\n<td>4 294 967 295</td>\n</tr>\n<tr>\n<td>long long（C99）</td>\n<td>8 个字节</td>\n<td>-9 223 372 036 854 755 808</td>\n<td>9 223 372 036 854 755 808</td>\n</tr>\n<tr>\n<td>unsigned long long（C99）</td>\n<td>8 个字节</td>\n<td>0</td>\n<td>18 446 744 073 709 551 615</td>\n</tr>\n</tbody>\n</table>\n<p>​\t\t<strong>注：int 类型在 16 位系统中占 2 个字节，在 32 和 64 位系统中占 4 个字节</strong></p>\n<h2 id=\"基本类型转换\"><a class=\"markdownIt-Anchor\" href=\"#基本类型转换\">#</a> 基本类型转换</h2>\n<h4 id=\"1自动类型转换\"><a class=\"markdownIt-Anchor\" href=\"#1自动类型转换\">#</a> 1. 自动类型转换</h4>\n<p>当两个不同类型的变量进行运算时，编译器会自动进行类型转换，自动类型转换遵从以下规则：</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2021/10/95b6bbcb25e8bb2f.png\" alt></p>\n<p>例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> b = <span class=\"number\">1.2</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> c = a+b;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%f&quot;</span>,c);</span><br></pre></td></tr></table></figure>\n<p>​\t\t在执行 a+b 运算的时候编译器会先把 int 类型的 a 转为 double 类型，然后再和 b 进行运算</p>\n<h4 id=\"2强制类型转换\"><a class=\"markdownIt-Anchor\" href=\"#2强制类型转换\">#</a> 2. 强制类型转换</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">double</span> a = <span class=\"number\">3.641593</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,(<span class=\"keyword\">int</span>)a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lf\\n&quot;</span>,a );<span class=\"comment\">// 3.641593</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>注：在进行由高到低的强制类型转换时，数据会有部分丢失</strong></p>\n<p><strong>强制类型转换是临时的，不会修改变量本来的类型</strong></p>\n</blockquote>\n<h2 id=\"基本类型书写\"><a class=\"markdownIt-Anchor\" href=\"#基本类型书写\">#</a> 基本类型书写</h2>\n<p><strong>整数</strong></p>\n<ul>\n<li>\n<p>默认为 10 进制 ，10 ，20。</p>\n</li>\n<li>\n<p>以 0 开头为 8 进制，012，024。</p>\n</li>\n<li>\n<p>以 0b 开头为 2 进制，0b1010, 0b10100。</p>\n</li>\n<li>\n<p>以 0x 开头为 16 进制，0xa，0x14。</p>\n</li>\n</ul>\n<p><strong>小数</strong></p>\n<p>单精度常量（float）：2.3f 。</p>\n<p>双精度常量（double）：2.3，默认为双精度。</p>\n<p><strong>字符型常量</strong></p>\n<p>用英文单引号括起来，只保存一个字符，‘a’、‘b’ 、’*’ ，还有转义字符 ‘\\n’ 、’\\t’。</p>\n<p><strong>字符串常量</strong></p>\n<p>用英文的双引号引起来 可以保存多个字符：“abc”。</p>\n<h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h2>\n<p>​\t\t变量其实只不过是程序可操作的存储区的名称。C 中每个变量都有特定的类型，类型决定了变量存 储的大小和布局，该范围内的值都可以存储在内存中，运算符可应用于变量上。 例如</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> age = <span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里的 age 就是一个变量，变量 age 的值为 5，而”age“叫做变量名。</p>\n<p>​\t\t同一类型的多个变量的声明之间可以用逗号隔开</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> i, j, k;</span><br><span class=\"line\"><span class=\"comment\">//声明并定义了变量 i、j 和 k，</span></span><br><span class=\"line\"><span class=\"comment\">//这指示编译器创建类型为 int 的名为 i、j、k 的变量。下面同理</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> c, ch;</span><br><span class=\"line\"><span class=\"keyword\">float</span> f, salary;</span><br><span class=\"line\"><span class=\"keyword\">double</span> d;</span><br></pre></td></tr></table></figure>\n<h3 id=\"变量的输入和输出\"><a class=\"markdownIt-Anchor\" href=\"#变量的输入和输出\">#</a> 变量的输入和输出</h3>\n<p>1.scanf</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 输入char变量：</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> a;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%c&quot;</span>,&amp;a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输入int变量：</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输入double/float变量：</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> a;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>,&amp;a);</span><br><span class=\"line\"><span class=\"keyword\">float</span> a;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%f&quot;</span>,&amp;a);</span><br></pre></td></tr></table></figure>\n<p>2.printf</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 输出char变量：</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> a = <span class=\"string\">&#x27;c&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,a); <span class=\"comment\">// c</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出int变量：</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a); <span class=\"comment\">// 50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出double/float变量：</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> a = <span class=\"number\">3.14</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%f&quot;</span>,a); <span class=\"comment\">// 3.140000 默认保留六位小数</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2f&quot;</span>,a);<span class=\"comment\">// 3.14</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.1f&quot;</span>,a);<span class=\"comment\">// 3.1</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th><strong>符号</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n<th><strong>示例</strong></th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>x</td>\n<td>unsigned int</td>\n<td>以十六进制小写输出</td>\n<td>printf(&quot;%x&quot;,11);</td>\n<td>b</td>\n</tr>\n<tr>\n<td>X</td>\n<td>unsigned int</td>\n<td>以十六进制大写输出</td>\n<td>printf(&quot;%X&quot;,11);</td>\n<td>B</td>\n</tr>\n<tr>\n<td>o</td>\n<td>unsigned int</td>\n<td>以八进制无符号整 S 输出</td>\n<td>printf( &quot;%o”,100);</td>\n<td>144</td>\n</tr>\n<tr>\n<td>u</td>\n<td>unsigned int</td>\n<td>以无符号整型输出</td>\n<td>printf( “%u,%u”,100u,100);</td>\n<td>100,100</td>\n</tr>\n<tr>\n<td>d、i</td>\n<td>int</td>\n<td>以整型输出</td>\n<td>printf(&quot;%i,%d&quot;, 100,100);</td>\n<td>100,100</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"常量\"><a class=\"markdownIt-Anchor\" href=\"#常量\">#</a> 常量</h2>\n<p>​\t\t常量是固定值，在程序执行期间不会改变。</p>\n<p>​\t\t常量可以是任何的基本数据类型，比如 int,double,char</p>\n<h3 id=\"常量的定义\"><a class=\"markdownIt-Anchor\" href=\"#常量的定义\">#</a> 常量的定义：</h3>\n<ol>\n<li>\n<p>使用 <strong>#define</strong> 预处理器。</p>\n</li>\n<li>\n<p>使用 <strong>const</strong> 关键字。 <strong>被 const 和 define 修饰的变量不可变</strong></p>\n<p><strong>#define 预处理器</strong></p>\n<p>下面是使用 #define 预处理器定义常量的形式：</p>\n<p>注意：define 定义之后不需要加分号</p>\n</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//模式：</span></span><br><span class=\"line\"><span class=\"comment\">//#define identifier value</span></span><br><span class=\"line\"><span class=\"comment\">//例子：</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PI 3.1415926</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> R 5</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LENGTH 10</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> WIDTH 5</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NEWLINE <span class=\"meta-string\">&#x27;\\n&#x27;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> area;</span><br><span class=\"line\">area = LENGTH * WIDTH;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;value of area : %d\\n&quot;</span>, area);</span><br><span class=\"line\"><span class=\"keyword\">double</span> r_area;</span><br><span class=\"line\">r_area = PI * R * R;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;value of double area:%lf\\n&quot;</span>, r_area);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, NEWLINE);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>const 关键字</strong></p>\n<p>​\t\t可以使用 const 前缀声明指定类型的常量，如下所示：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> LENGTH = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> WIDTH = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> NEWLINE = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> area;</span><br><span class=\"line\">area = LENGTH * WIDTH;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;value of area : %d&quot;</span>, area);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, NEWLINE);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"运算符\"><a class=\"markdownIt-Anchor\" href=\"#运算符\">#</a> 运算符</h1>\n<h2 id=\"算术运算符\"><a class=\"markdownIt-Anchor\" href=\"#算术运算符\">#</a> 算术运算符</h2>\n<ol>\n<li>\n<p>”+“运算符：把两个数相加</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = a + b;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c); <span class=\"comment\">// c = 7</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>”-“运算符：把两个数相减</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = a - b;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c); <span class=\"comment\">// c = -3</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>“*” 运算符：把两个数相乘</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = a * b;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c); <span class=\"comment\">// c = 10</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>“/” 运算符：把两个数相除，左边是被除数，右边的是除数（右边的数不能为 0）：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = a / b;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c); <span class=\"comment\">// c = 0</span></span><br><span class=\"line\"><span class=\"comment\">/*这里因为a，b，c都是int类型，a/b=0.4,所以会直接舍去后面的.4，只剩0*/</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> d = <span class=\"number\">2.0</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> e = <span class=\"number\">3.0</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> f = e / d;</span><br><span class=\"line\"><span class=\"comment\">//double类型允许小数的存在，因此这里的f就是1.5了</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>注意：C 语言不会对计算结果进行四舍五入，会直接全部舍去，比如 3.9，转为 int 类型的时候 就会变成 3</p>\n</li>\n<li>\n<p>”%“：取余运算符，可以直接取整除之后的余数：</p>\n</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = b % a;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c); <span class=\"comment\">// c = 1</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>”++“运算符：自增运算符，让变量的值加 1：</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = a++;<span class=\"comment\">//也可以写成 c = ++a;</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c); <span class=\"comment\">// c = </span></span><br></pre></td></tr></table></figure>\n<p><strong>a<ins> 与</ins> a 的区别:</strong></p>\n<p>​\t\t在进行 a++ 运算时，程序会先对 a 复制一次，然后让其 + 1，执行的操作类似 a = a + 1</p>\n<p>​\t\t在进行 ++a 运算时，程序会直接让 a+1</p>\n<ol start=\"7\">\n<li>\n<p>“–” 运算符：自减运算符，让变量的值 - 1：</p>\n<p>​\t与 ++ 运算符同理，a–运算会对 a 先复制一次，再让其 - 1，–a 会直接让其 - 1</p>\n</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,--a);<span class=\"comment\">//输出0</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,b--);<span class=\"comment\">//输出1</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,b);<span class=\"comment\">//输出0</span></span><br></pre></td></tr></table></figure>\n<p><strong>关系运算符</strong></p>\n<ol>\n<li>== 运算符：</li>\n</ol>\n<p>在 c 语言中 ” = “表示的是对一个变量进行赋值，而要想判断两个变量的值是否相同所用到的 是” == “运算符，该运算符返回的是一个真假值（在 c 语言中 1 表示真值，0 表示假值）。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">5</span>,b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a == b);<span class=\"comment\">// 1</span></span><br><span class=\"line\">a = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a == b); <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>!= 运算符:</li>\n</ol>\n<p>这个运算符表示两个变量是否不同，返回值为真假值：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">5</span>,b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a != b);<span class=\"comment\">// 0</span></span><br><span class=\"line\">a = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a != b); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>&gt; 运算符：</li>\n</ol>\n<p>判断运算符左边的变量是否大于右边的变量：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">5</span>,b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &gt; b);<span class=\"comment\">// 0</span></span><br><span class=\"line\">a = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &gt; b); <span class=\"comment\">// 1</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>&lt; 运算符：</li>\n</ol>\n<p>判断运算符左边的变量是否小于右边的变量：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">4</span>,b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &lt; b);<span class=\"comment\">// 1</span></span><br><span class=\"line\">a = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &lt; b); <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>&gt;= 运算符：</li>\n</ol>\n<p>判断运算符左边的变量是否大于等于右边的变量：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">5</span>,b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &gt;= b);<span class=\"comment\">// 1</span></span><br><span class=\"line\">a = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &gt;= b); <span class=\"comment\">// 1 </span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>&lt;= 运算符：</li>\n</ol>\n<p>判断运算符左边的变量是否小于等于右边的变量：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">4</span>,b = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &lt; b);<span class=\"comment\">// 1</span></span><br><span class=\"line\">a = <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a &lt; b); <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"逻辑运算符\"><a class=\"markdownIt-Anchor\" href=\"#逻辑运算符\">#</a> 逻辑运算符</h2>\n<ol>\n<li>&amp;&amp; 运算符： 表示 “且”，如果左右两个操作全部为真，则该表达式返回真</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>,b = <span class=\"number\">3</span>;</span><br><span class=\"line\">(a &lt; b &amp;&amp; a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 1</span></span><br><span class=\"line\">(a &lt; b &amp;&amp; a == <span class=\"number\">3</span>) <span class=\"comment\">// 这个表达式为 0</span></span><br><span class=\"line\">(a &lt; b &amp;&amp; a == <span class=\"number\">3</span>) <span class=\"comment\">// 这个表达式为 0</span></span><br><span class=\"line\">(a &gt; b &amp;&amp; a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 0</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>|| 运算符： 表示 “或”，左右两个操作有一个为真，则该表达式为真</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>,b = <span class=\"number\">3</span>;</span><br><span class=\"line\">(a &lt; b || a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 1</span></span><br><span class=\"line\">(a &lt; b || a == <span class=\"number\">3</span>) <span class=\"comment\">// 这个表达式为 1</span></span><br><span class=\"line\">(a &gt; b || a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 1</span></span><br><span class=\"line\">(a &gt; b || a == <span class=\"number\">3</span>) <span class=\"comment\">// 这个表达式为 0</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>! 运算符： 表示 “非”，如果修饰的条件表达式为真，则该表达式为假，反之为真。</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">2</span>,b = <span class=\"number\">3</span>;</span><br><span class=\"line\">(a &lt; b || a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 1</span></span><br><span class=\"line\">!(a &lt; b || a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 0</span></span><br><span class=\"line\">(a &gt; b &amp;&amp; a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 0</span></span><br><span class=\"line\">!(a &gt; b &amp;&amp; a == <span class=\"number\">2</span>) <span class=\"comment\">// 这个表达式为 1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"赋值运算符\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算符\">#</a> 赋值运算符</h2>\n<table>\n<thead>\n<tr>\n<th><strong>运算符</strong></th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td>简单的赋值运算符，把右边操作数的值赋给左边操作数</td>\n<td>C = A + B 将把 A + B 的 值赋给 C</td>\n</tr>\n<tr>\n<td>+=</td>\n<td>加且赋值运算符，把右边操作数加上左边操作数的结果赋 值给左边操作数</td>\n<td>C += A 相当于 C = C + A</td>\n</tr>\n<tr>\n<td>-=</td>\n<td>减且赋值运算符，把左边操作数减去右边操作数的结果赋 值给左边操作数</td>\n<td>C -= A 相当于 C = C - A</td>\n</tr>\n<tr>\n<td>*=</td>\n<td>乘且赋值运算符，把右边操作数乘以左边操作数的结果赋 值给左边操作数</td>\n<td>C *= A 相当于 C = C * A</td>\n</tr>\n<tr>\n<td>/=</td>\n<td>除且赋值运算符，把左边操作数除以右边操作数的结果赋 值给左边操作数</td>\n<td>C /= A 相当于 C = C / A</td>\n</tr>\n<tr>\n<td>%=</td>\n<td>求模且赋值运算符，求两个操作数的模赋值给左边操作数</td>\n<td>C %= A 相当于 C = C % A</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">a += <span class=\"number\">3</span>; <span class=\"comment\">// a = a + 3</span></span><br><span class=\"line\">a -= <span class=\"number\">3</span>; <span class=\"comment\">// a = a - 3</span></span><br><span class=\"line\">a *= <span class=\"number\">3</span>; <span class=\"comment\">// a = a * 3</span></span><br><span class=\"line\">a /= <span class=\"number\">3</span>; <span class=\"comment\">// a = a / 3</span></span><br><span class=\"line\">a %= <span class=\"number\">3</span>; <span class=\"comment\">// a = a % 3</span></span><br><span class=\"line\">a = <span class=\"number\">3</span>; <span class=\"comment\">// a = 3</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"判断语句\"><a class=\"markdownIt-Anchor\" href=\"#判断语句\">#</a> 判断语句</h1>\n<p><img src=\"https://static.runoob.com/wp-content/uploads/c/C-decision-20200923-1.svg\" alt></p>\n<p>​\t\t判断结构要求程序员指定一个或多个要评估或测试的条件，以及条件为真时要执行的语句（必需 的）和条件为假时要执行的语句（可选的）。</p>\n<h2 id=\"if-语句\"><a class=\"markdownIt-Anchor\" href=\"#if-语句\">#</a> if 语句</h2>\n<p>​\t模式：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(条件语句)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">//执行语句</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a == b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = b!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t一个 if 语句由一个条件语句后跟一个或多个语句组成</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (a == b &amp;&amp; a &gt; <span class=\"number\">0</span> &amp;&amp; b &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a = b!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"else语句\"><a class=\"markdownIt-Anchor\" href=\"#else语句\">#</a> else 语句</h2>\n<p>​\t当条件不满足 if 中的条件语句时会跳入 else 语句执行</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(布尔表达式/条件语句)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">/* 如果布尔表达式为真将执行的语句 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">/* 如果布尔表达式为假将执行的语句 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://static.runoob.com/wp-content/uploads/c/c-if-else-20200923.svg\" alt></p>\n<p>​\t\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">3</span>,b = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a &lt; b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a&lt;b!&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a&gt;=b!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"else-if-语句\"><a class=\"markdownIt-Anchor\" href=\"#else-if-语句\">#</a> else if 语句</h2>\n<p>​\t\t当需要进行多次判断时，可以使用 else if 语句</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(布尔表达式<span class=\"number\">1</span>/条件语句<span class=\"number\">1</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">/* 如果布尔表达式1为真将执行的语句 */</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(布尔表达式<span class=\"number\">2</span>/条件语句<span class=\"number\">2</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">/* 如果布尔表达式1为假,布尔表达式2为真将执行的语句 */</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">/*如果两个布尔表达式都为假要执行的语句*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">3</span>,b = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a &lt; b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a&lt;b!&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a == b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=b!&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a&gt;b!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"switch-case-语句\"><a class=\"markdownIt-Anchor\" href=\"#switch-case-语句\">#</a> switch case 语句</h2>\n<p>​\t\t如果需要判断的语句很多的时候，if else 未免显得非常繁琐，因此我们可以使用效率更高，更加精 简的 switch case 语句。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(变量)&#123;<span class=\"keyword\">case</span> 值<span class=\"number\">1</span> :statement(s);<span class=\"comment\">//执行语句break; /* 可选的 */case 值2 :statement(s);//执行语句break; /* 可选的 *//* 可以有任意数量的 case 语句 */default : /* 可选的 如果匹配不成功就会跳到这个标签下面去执行这个标签下面的语句*/statement(s);&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> x = <span class=\"number\">5</span>;<span class=\"keyword\">switch</span>(x)&#123;<span class=\"keyword\">case</span> <span class=\"number\">0</span>:<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;x=0&quot;</span>);<span class=\"comment\">//执行语句break; /* 可选的 */case 5:printf(&quot;x=5&quot;);//执行语句break; /* 可选的 *//* 可以有任意数量的 case 语句 */default : /* 可选的 如果匹配不成功就会跳到这个标签下面去执行这个标签下面的语句*/printf(&quot;no pattern&quot;);&#125;</span></span><br></pre></td></tr></table></figure>\n<p><strong>switch</strong> 语句必须遵循下面的规则：</p>\n<ul>\n<li>\n<p>switch 语句中 case 后面是一个常量（不能为浮点数） 在一个 switch 中可以有任意数量的 case 语句。</p>\n</li>\n<li>\n<p>case 后面的常量 必须与 switch 中的变量具有相同的数据类型。</p>\n</li>\n<li>\n<p>当被测试的变量等于 case 中的常量时，case 后跟的语句将被执行，直到遇到 break 语句为 止。</p>\n</li>\n<li>\n<p>当遇到 break 语句时，switch 终止，控制流将跳转到 switch 语句后的下一行。</p>\n</li>\n<li>\n<p>不是每一个 case 都需要包含 break。如果 case 语句不包含 break，控制流将会继续后续的 case，直到遇到 break 为止。</p>\n</li>\n<li>\n<p>一个 switch 语句可以有一个可选的 default，出现在 switch 的结尾。在上面所有的 case 都 不执行时执行。default 中的 break 语句不是必需的。</p>\n<p>​\t示例：</p>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">char</span> grade = <span class=\"string\">&#x27;B&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(grade)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span> :</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;很棒！\\n&quot;</span> );</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span> :</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&#x27;C&#x27;</span> :</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;做得好\\n&quot;</span> );</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&#x27;D&#x27;</span> :</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;您通过了\\n&quot;</span> );</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&#x27;F&#x27;</span> :</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;最好再试一下\\n&quot;</span> );</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">default</span> :</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无效的成绩\\n&quot;</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;成绩是 %c\\n&quot;</span>, grade );</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"循环\"><a class=\"markdownIt-Anchor\" href=\"#循环\">#</a> 循环</h1>\n<p>​\t\t当我们需要重复执行同一块代码时，我们可以使用循环操作来减少代码量。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/12/loop.png\" alt></p>\n<h2 id=\"1while循环\"><a class=\"markdownIt-Anchor\" href=\"#1while循环\">#</a> 1.while 循环</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(条件语句)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">statement(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (n &lt; <span class=\"number\">10</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d \\n&quot;</span>,n);</span><br><span class=\"line\">++n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 依次打印出0--9</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/09/BFE13459-897C-41A5-AE94-D71B0CA50FB6.jpg\" alt></p>\n<h2 id=\"2for循环\"><a class=\"markdownIt-Anchor\" href=\"#2for循环\">#</a> 2.for 循环</h2>\n<h2 id><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( init; condition; increment )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">statement(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> n = <span class=\"number\">0</span>; n &lt; <span class=\"number\">10</span>; ++n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//依次打印出从0到9</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/09/69978E61-0BA5-4D66-A115-D3AD15B16F47.jpg\" alt></p>\n<h2 id=\"3do\"><a class=\"markdownIt-Anchor\" href=\"#3do\">#</a> <a href=\"http://3.do\">3.do</a>…while 循环：</h2>\n<p>​\t\t不像 <strong>for</strong> 和 while 循环，它们是在循环头部测试循环条件。在 C 语言中，do…while 循环是 在循环的尾部检查它的条件。</p>\n<p>​\t\tdo…while 循环与 while 循环类似，但是 do…while 循环会确保至少执行一次循环。也就是 说，do…while 结构会先执行循环，后进行条件判断。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">statement(s);</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>( condition );</span><br></pre></td></tr></table></figure>\n<p>​\t\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,n);</span><br><span class=\"line\">++n;</span><br><span class=\"line\">&#125; <span class=\"keyword\">while</span>(n &lt; <span class=\"number\">0</span>); <span class=\"comment\">// 输出 0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (n &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,n);</span><br><span class=\"line\">++n;</span><br><span class=\"line\">&#125; <span class=\"comment\">// 无输出</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/09/B2FE1EC7-6477-439B-8F50-82D537673799.jpg\" alt></p>\n<h1 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h1>\n<p>​\t\t函数是一组一起执行一个任务的语句。每个 C 程序都至少有一个函数，即主函数 main () ，所有简 单的程序都可以定义其他额外的函数。</p>\n<p>​\t\t定义方法：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回类型 函数名(参数)&#123;</span><br><span class=\"line\">函数体</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>** 返回类型：** 一个函数可以返回一个值。指函数返回的值的数据类型。有些函数执行所需的操作而不 返回值，在这种情况下，返回类型是 void。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a &gt; b)&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_a</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,a);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数声明\"><a class=\"markdownIt-Anchor\" href=\"#函数声明\">#</a> 函数声明</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int max(int ,int );</span><br><span class=\"line\">void print_a(int );</span><br><span class=\"line\">int max(int a,int b)&#123;</span><br><span class=\"line\">if(a &gt; b)&#123;</span><br><span class=\"line\">return a;</span><br><span class=\"line\">&#125;else&#123;</span><br><span class=\"line\">return b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">void print_a(int a)&#123;</span><br><span class=\"line\">printf(&quot;%d&quot;,a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">int n = 0,m = 5;</span><br><span class=\"line\">int num = max(n,m);</span><br><span class=\"line\">print_a(num);</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"数组\"><a class=\"markdownIt-Anchor\" href=\"#数组\">#</a> 数组</h1>\n<p>​\t\t当我们需要声明或使用同一类型的多个变量时，一个个声明未免太过繁琐，我们可以使用数组来达 到这个目的。</p>\n<blockquote>\n<p>数组是一个 <strong>固定大小</strong> 的 <strong>相同类型元素</strong> 的 <strong>顺序集合</strong>。</p>\n</blockquote>\n<p>​\t\t声明方式：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型 数组名[数组大小];</span><br></pre></td></tr></table></figure>\n<p>​\t\t示例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">10</span>]; <span class=\"comment\">// 声明一个大小为10的int类型数组,它可以存储10个int类型的元素</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> <span class=\"built_in\">array</span>[<span class=\"number\">10</span>]; <span class=\"comment\">// 声明一个大小为10的double类型数组，它可以存储10个double类型的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化数组\"><a class=\"markdownIt-Anchor\" href=\"#初始化数组\">#</a> 初始化数组</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">5</span>] = &#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>注意： 大括号 {} 之间的值的数目不能大于我们在数组声明时在方括号 [] 中指定的元素数目。</strong></p>\n<p>​\t\t有时我们会开一个超级大的数组，这时使用大括号来进行初始化就非常麻烦了，因此我们结合之前 的循环操作来对数组进行初始化</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; <span class=\"number\">5</span> ; i++)&#123;</span><br><span class=\"line\"><span class=\"built_in\">array</span>[i] = i+<span class=\"number\">100</span>; <span class=\"comment\">// 设置元素i的值为i+100</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>访问数组元素</strong></p>\n<p>​\t\t数组元素可以通过数组名称加索引进行访问。元素的索引是放在方括号内，跟在数组名称的后边。 例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">5</span>] = &#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num = <span class=\"built_in\">array</span>[<span class=\"number\">0</span>]; <span class=\"comment\">// num = 0;</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;num = %d\\n&quot;</span>,num);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; j++ )<span class=\"comment\">//利用循环打印整个数组</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Array[%d] = %d\\n&quot;</span>, j, <span class=\"built_in\">array</span>[j] );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>注意：数组元素只被创建而没有被初始化的时候是不能进行正常访问的，只有数组中元素被赋值才 可以正常访问。</strong></p>\n<h1 id=\"指针\"><a class=\"markdownIt-Anchor\" href=\"#指针\">#</a> 指针</h1>\n<h2 id=\"使用指针\"><a class=\"markdownIt-Anchor\" href=\"#使用指针\">#</a> 使用指针</h2>\n<p>​\t\t想要在函数中完成变量的交换，不被形参所限制。</p>\n<p>​\t\t<strong>指针</strong>可以达成我们的目的。</p>\n<p>​\t\t在程序运行时，变量被创建时， 变量都会被分配到一个内存位置。</p>\n<p>​\t\t内存位置可以通过 **&amp; 运算符<strong>获取</strong>地址 **。</p>\n<p>​\t\t<strong>注意： 指针变量的类型必须要跟被取地址变量类型一致</strong></p>\n<h2 id=\"怎么理解指针\"><a class=\"markdownIt-Anchor\" href=\"#怎么理解指针\">#</a> 怎么理解指针</h2>\n<p>让我们把 *p ，拆分成两部分去理解。</p>\n<p><strong>’p’ 部分 ：是一个变量，能存储地址。</strong></p>\n<p><strong>’*’ 部分 ：获取变量 p 储存的地址，并找到该地址上存储的值。</strong></p>\n<p>​\t\t运行上面的代码，输出 *p 的值就是 var 的值。</p>\n<p>​\t\t** 注意：** 多数时候指针初始化置 <strong>NULL</strong> 很有必要。</p>\n<h2 id=\"指针基本运算\"><a class=\"markdownIt-Anchor\" href=\"#指针基本运算\">#</a> 指针基本运算</h2>\n<p>​\t\t指针就是地址，地址在内存中也是以数的形式存在，所以指针也能进行基本运算。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p = &amp;a;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p\\n&quot;</span>,p);</span><br><span class=\"line\">p++;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p\\n&quot;</span>,p);</span><br><span class=\"line\">p -= <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%p\\n&quot;</span>,p);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"指向一维数组的指针\"><a class=\"markdownIt-Anchor\" href=\"#指向一维数组的指针\">#</a> 指向一维数组的指针</h2>\n<ul>\n<li>\n<p>数组中的每个数据都会保存在一个储存单元里面，只要是储存单元就会有地址，所以就可以用 指针保存数组储存单元的地址。</p>\n<p><em>为指针赋数组数据的地址</em></p>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[<span class=\"number\">5</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">p = &amp;num[i];</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,*p);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>可以使用指针操作一维数组</strong></p>\n<ul>\n<li>第一种</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">5</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p = a;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,*p);</span><br><span class=\"line\">p++;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,*p);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第二种</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> num[<span class=\"number\">5</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p;</span><br><span class=\"line\">p = &amp;num[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure>\n<h2 id=\"指向二维数组的指针\"><a class=\"markdownIt-Anchor\" href=\"#指向二维数组的指针\">#</a> 指向二维数组的指针</h2>\n<p>​\t\t跟一维数组相似</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> num[<span class=\"number\">3</span>][<span class=\"number\">2</span>] = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;,&#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;,&#123;<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p = &amp;num[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意： 不能为指针直接赋予二维数组的数组名，即上面的代码不能写成： int *p = num；</li>\n</ul>\n<h2 id=\"数组指针\"><a class=\"markdownIt-Anchor\" href=\"#数组指针\">#</a> 数组指针</h2>\n<p>​\t\t<strong>顾名思义：</strong> 指向数组的指针</p>\n<p>​\t\t如果一个指针指向了数组，就称它为数组指针。c</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;&#123;<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br></pre></td></tr></table></figure>\n<p>​\t\t在概念上的矩阵是像这种矩阵的样子：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"number\">5</span> <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t但实际上它在内存中是链式存储的：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">5</span> <span class=\"number\">6</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t定义一个数组指针</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> (*p)[<span class=\"number\">3</span>] = a;</span><br></pre></td></tr></table></figure>\n<p><strong>括号里面的 * 代表 p 是一个指针，[3] 代表这个 指针 p 指向了类型为 int [3] 的数组</strong></p>\n<ul>\n<li>\n<p>p 指向数组 a 的开头，就是指向数组的第 0 行元素，p + 1 指向数组的第一行元素</p>\n</li>\n<li>\n<p>所以 *(p+1) 就表示数组的第一行元素的值，有多个数据</p>\n</li>\n<li>\n<p>*(p+1) + 1 表示第一行的第一个数据的地址</p>\n</li>\n</ul>\n<h2 id=\"二级指针\"><a class=\"markdownIt-Anchor\" href=\"#二级指针\">#</a> 二级指针</h2>\n<p>​\t\t<strong>顾名思义：</strong> 指向指针的指针</p>\n<p>​\t\t假设有一个 int 类型的变量 a ， p1 是指向 a 的指针变量， p2 又是指向 p1 的指针变量。</p>\n<p>​\t\t用代码形式展现就是：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p1 = &amp;a;</span><br><span class=\"line\"><span class=\"keyword\">int</span> **p2 = &amp;p1;</span><br></pre></td></tr></table></figure>\n<p>​\t\t指针变量也是一种变量，也会占用存储空间，也可以使用 &amp; 获取它的地址。C 语言不限制指针的级 数，每增加一级指针，在定义指针变量时就得增加一个星号。p1 是一级指针，指向普通类型的数据， 定义时有一个；p2 是二级指针，指向一级指针 p1，定义时有两个 *。</p>\n<p>​\t\t** 同理：** 指针可以有三级指针、四级指针等等。</p>\n<h2 id=\"指针在函数中的作用\"><a class=\"markdownIt-Anchor\" href=\"#指针在函数中的作用\">#</a> 指针在函数中的作用</h2>\n<p><strong>指针作为函数的参数</strong></p>\n<p>写一个函数并调用，实现交换变量的值</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> temp= a;</span><br><span class=\"line\">a = b;</span><br><span class=\"line\">b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\">swap(a, b);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=%d\\nb=%d\\n&quot;</span>,a,b);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t运行上面的代码，<strong>a 和 b 的值并没有发生交换</strong></p>\n<h2 id=\"形参形式参数\"><a class=\"markdownIt-Anchor\" href=\"#形参形式参数\">#</a> 形参（形式参数）</h2>\n<p>​\t\t在函数定义中出现的参数，它没有数据，只能在函数被调用时接收传递进来的数据，所以称为<strong>形式参数</strong>。</p>\n<h2 id=\"实参实际参数\"><a class=\"markdownIt-Anchor\" href=\"#实参实际参数\">#</a> 实参（实际参数）</h2>\n<p>​\t\t函数被调用时给出的参数包含了实实在在的数据，会被函数内部的代码使用，所以称为<strong>实际参数</strong>。 形参和实参的功能是传递数据，发生函数调用时，实参的值会传递给形参。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> temp= a;</span><br><span class=\"line\">a = b;</span><br><span class=\"line\">b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\">swap(a, b);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=%d\\nb=%d\\n&quot;</span>,a,b);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>main 函数</strong> 中调用的 <strong>swap 函数</strong> <strong>swap(a, b);</strong> 中的 a，b 是<strong>实参</strong>。</p>\n<p>​\t\t<strong>swap 函数</strong> 定义的 <strong>void swap(int a,int b)</strong> 中的 a，b 是<strong>形参。</strong></p>\n<p>​\t\t在 c 语言中实参和形参之间的数据传输是单向的 “值传递” 方式，也就是实参可以影响形参，而形参不 能影响实参。指针变量作为参数也不例外，但是可以改变实参指针变量所指向的变量的值。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确的变量交换代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span> *a,<span class=\"keyword\">int</span> *b)</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *temp= a;</span><br><span class=\"line\">a = b;</span><br><span class=\"line\">b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a);</span><br><span class=\"line\">swap(&amp;a, &amp;b);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=%d\\nb=%d\\n&quot;</span>,a,b);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t上面代码在调用 scanf 或者 swap 函数的时候，传入变量时，变量前都使用了 &amp; 运算符</p>\n<p>​\t\t这两个函数通过传入的地址去改变了实参。</p>\n<h2 id=\"指针函数\"><a class=\"markdownIt-Anchor\" href=\"#指针函数\">#</a> 指针函数</h2>\n<p>​\t\tC 语言允许函数的返回值是一个指针（地址），我们将这样的函数称为指针函数。</p>\n<p>​\t\t下面的例子定义了一个函数 strlong () ，用来返回两个字符串中较长的一个：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> *<span class=\"title\">strlong</span><span class=\"params\">(<span class=\"keyword\">char</span> *str1, <span class=\"keyword\">char</span> *str2)</span></span>&#123;<span class=\"comment\">//返回类型是(char*)</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">strlen</span>(str1) &gt;= <span class=\"built_in\">strlen</span>(str2))&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> str1;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> str2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">char</span> str1[<span class=\"number\">30</span>], str2[<span class=\"number\">30</span>], *str;</span><br><span class=\"line\">gets(str1);</span><br><span class=\"line\">gets(str2);</span><br><span class=\"line\">str = strlong(str1, str2);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Longer string: %s\\n&quot;</span>, str);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>注意：函数运行结束后会销毁在它内部定义的所有局部数据，包括局部变量、局部数组和形式参数。</strong></p>\n<h1 id=\"结构体\"><a class=\"markdownIt-Anchor\" href=\"#结构体\">#</a> 结构体</h1>\n<p>​\t\t如果我们想存储多个学生的信息，比如身高、体重、学习成绩，等等。</p>\n<p>​\t\t在学结构体前，我们可以使用多个数组，用相同下标去存储一个学生的所有信息。</p>\n<p>​\t\t或者使用很多的变量，去储存信息，上述实现方法显得相当麻烦。</p>\n<p>​\t\tC 语言向我们提供了一种数据类型 <strong>：结构体（struct）</strong>。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构体定义</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">student</span>&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> height;</span><br><span class=\"line\"><span class=\"keyword\">double</span> weight;</span><br><span class=\"line\"><span class=\"keyword\">char</span> name[<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> score;</span><br><span class=\"line\">&#125;student1;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这是一个结构体的定义，拆分看。</p>\n<p>​\t\t<strong>struct student:</strong> struct 是定义结构体必备的前缀。student 是结构体标签。 struct student 可 以像 int、double、float 作为定义变量的数据类型。</p>\n<p>​\t\t**{} 内的变量：** 结构体就像个模板，能规定好里面填什么变量。</p>\n<p>​\t\t**student1：** 定义 struct student 类型的变量 .</p>\n<p><strong>typedef</strong></p>\n<p>​\t\t<strong>typedef</strong> 这是一个重命名的关键字</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//typedef + 数据类型 + 你想要重命名的英文</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">student</span>&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> height;</span><br><span class=\"line\"><span class=\"keyword\">double</span> weight;</span><br><span class=\"line\"><span class=\"keyword\">char</span> name[<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> score;</span><br><span class=\"line\">&#125;Stu;</span><br></pre></td></tr></table></figure>\n<p>​\t\ttypedef 在这段代码中将 stu 等效成了  <code>struct student ，而不是一个 struct student</code>  类型的变量。</p>\n<p>​\t\t<strong>结构体变量的初始化</strong></p>\n<p>​\t\t结构体也是一种数据类型，从某种程度上说与 int 等类似，属于同级，所以定义变量的方式也是一样的。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">truct Stu stu1,stu2; <span class=\"comment\">//这里定义了Stu类型的变量</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>结构体成员的赋值</strong></p>\n<p>​\t\t结构体成员的获取形式为：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">结构体变量名.成员名;</span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>示例：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Stu stu1;</span><br><span class=\"line\">stu1.height = <span class=\"number\">175</span>;</span><br><span class=\"line\">stu1.name = <span class=\"string\">&#x27;辰灏&#x27;</span>;</span><br><span class=\"line\">stu1.weight = <span class=\"number\">100.0</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;身高：%d,姓名：%s,体重：%lf\\n&quot;</span>,stu1.height,stu1.name,stu1.weight);</span><br></pre></td></tr></table></figure>\n<h2 id=\"结构体的使用\"><a class=\"markdownIt-Anchor\" href=\"#结构体的使用\">#</a> 结构体的使用</h2>\n<ul>\n<li>在结构体中使用数组</li>\n</ul>\n<p><strong>结构体中的成员变量可以是数组，没有什么特别的。</strong></p>\n<ul>\n<li>结构体与指针</li>\n</ul>\n<p><strong>结构体可以作为函数的参数传进子函数中，然后在子函数中使用.</strong></p>\n<p><strong>下面是一个输出函数</strong></p>\n<p><strong>Node 是一个结构体，print () 是一个子函数，这个子函数有一个 Node 类型的参数</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(Stu *stu)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!p)</span><br><span class=\"line\"><span class=\"keyword\">return</span>;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,stu-&gt;height);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"链表\"><a class=\"markdownIt-Anchor\" href=\"#链表\">#</a> 链表</h2>\n<p>结构体变量指针</p>\n<ul>\n<li>结构体变量指向自身</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">table</span>&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> i;</span><br><span class=\"line\"><span class=\"keyword\">char</span> c;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">table</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//在初始化时，变量next,会指向自身，所以在初始化变量时要把next指针置NULL。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>指向其它结构变量</p>\n<p>​\t即将定义的两个结构体变量，比方说定义了 st1 和 st2 两个结构体变量，只需要将 st2 的地址 赋给 st1 的指针域，这样 st1 的指针就指向了 st2。</p>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">table</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> i;</span><br><span class=\"line\"><span class=\"keyword\">char</span> c;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">table</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">strcut table st1 = &#123;<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">table</span> <span class=\"title\">st2</span> =</span> &#123;<span class=\"number\">2</span>,<span class=\"string\">&#x27;b&#x27;</span>&#125;;</span><br><span class=\"line\">st1.next = &amp;st2;</span><br></pre></td></tr></table></figure>\n<h3 id=\"动态创建链表\"><a class=\"markdownIt-Anchor\" href=\"#动态创建链表\">#</a> 动态创建链表</h3>\n<ul>\n<li>\n<p>构造一个结构类型，此结构类型必须包含至少一个成员指针，此指针要指向此结构类型</p>\n</li>\n<li>\n<p>定义 3 个结构体类型的指针，按照用途可以命名为，p_head,p_rail,p_new</p>\n</li>\n<li>\n<p>动态生成新的结点，为各成员变量赋值，最后加到链表当中。</p>\n</li>\n<li>\n<p>动态创建的链表，没有一个单独的变量名去寻找到节点，全部都是由结构体中的 next 指针找 到下一个节点</p>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">short</span> i; <span class=\"comment\">//数据域</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> c; <span class=\"comment\">///数据域</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span> <span class=\"comment\">//指针域，用于指向下一个结点</span></span><br><span class=\"line\">&#125;Node;</span><br></pre></td></tr></table></figure>\n<p>​\t\t定义结构体指针，不一定要在 main 函数中定义</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Node *p_head,*p_rail,*p_new ;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用malloc函数申请存储空间\"><a class=\"markdownIt-Anchor\" href=\"#使用malloc函数申请存储空间\">#</a> 使用 malloc 函数申请存储空间</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p_head = (Node*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>（struct node*) 强制类型转换</p>\n</li>\n<li>\n<p>malloc () 申请空间函数</p>\n</li>\n<li>\n<p>sizeof () 申请的大小函数 在使用完这个结构体以后可以使用函数</p>\n</li>\n<li>\n<p>free () 将申请的空间释放。</p>\n</li>\n</ul>\n<p>​\t示例：</p>\n<p>​\t\t构造结构体</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">short</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> c;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;Node;</span><br><span class=\"line\"><span class=\"comment\">//定义变量</span></span><br><span class=\"line\">Node node1 = &#123;<span class=\"number\">1</span>,<span class=\"string\">&#x27;A&#x27;</span>&#125;;</span><br><span class=\"line\">Node node2 = &#123;<span class=\"number\">2</span>,<span class=\"string\">&#x27;B&#x27;</span>&#125;;</span><br><span class=\"line\">Node node3 = &#123;<span class=\"number\">3</span>,<span class=\"string\">&#x27;C&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//链表连接</span></span><br><span class=\"line\">node1.next = &amp;node2;</span><br><span class=\"line\">node2.next = &amp;node3;</span><br><span class=\"line\"><span class=\"comment\">//动态申请节点并添加到链表中</span></span><br><span class=\"line\">Node *p_new;</span><br><span class=\"line\">p_new = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">p_new-&gt;i = <span class=\"number\">4</span>;</span><br><span class=\"line\">p_new-&gt;c = <span class=\"string\">&#x27;d&#x27;</span>;</span><br><span class=\"line\">node3.next = p_new;</span><br></pre></td></tr></table></figure>\n<h3 id=\"链表操作\"><a class=\"markdownIt-Anchor\" href=\"#链表操作\">#</a> 链表操作</h3>\n<p>插入</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2021/10/0bf521dd435c6a14.png\" alt></p>\n<ul>\n<li>插入节点到头节点之前</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Node p_new = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node)); <span class=\"comment\">//创建新结点，并为其开辟空间</span></span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%c&quot;</span>,&amp;(p_new-&gt;i),&amp;(p_new-&gt;c)); <span class=\"comment\">//录入结点数据</span></span><br><span class=\"line\"><span class=\"comment\">//插入节点</span></span><br><span class=\"line\">p_new-&gt;next = p_head;</span><br><span class=\"line\">p_head = p_new;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>插入节点到链表中间</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Node *p_new = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node)); <span class=\"comment\">//创建新结点，并为其开辟空间</span></span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%c&quot;</span>,&amp;(p_new-&gt;i),&amp;(p_new-&gt;c)); <span class=\"comment\">//录入结点数据</span></span><br><span class=\"line\">Node *p_front = p_head-&gt;next;</span><br><span class=\"line\">p_new-&gt;next = p_front-&gt;next;</span><br><span class=\"line\">p_front-&gt;next = p_new;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>插入节点到末尾</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(Node *p)</span></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!p)&#123; <span class=\"comment\">//如果p是空的</span></span><br><span class=\"line\">p = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%c&quot;</span>,&amp;(p-&gt;i),&amp;(p-&gt;c)); <span class=\"comment\">//录入结点数据</span></span><br><span class=\"line\">p-&gt;next = <span class=\"literal\">NULL</span>;<span class=\"comment\">//next节点置空</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Node p_loop = p;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(p_loop)&#123;</span><br><span class=\"line\">p_loop = p_loop-&gt;next;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p_new = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%c&quot;</span>,&amp;(p_new-&gt;i),&amp;(p_new-&gt;c)); <span class=\"comment\">//录入结点数据</span></span><br><span class=\"line\">p_new-&gt;next = <span class=\"literal\">NULL</span>;<span class=\"comment\">//next节点置空</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除某一位置节点</li>\n</ul>\n<p><img src=\"https://s3.bmp.ovh/imgs/2021/10/9c1b67676cb5017d.png\" alt></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">del_list</span><span class=\"params\">(struct node *p_head,<span class=\"keyword\">int</span> pos)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstrct node *p_front,*p_del;</span><br><span class=\"line\">\tp_front = p_head;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt;= pos - <span class=\"number\">1</span>;i ++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\tp_front = p_front-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    p_del = p_front-&gt;next;</span><br><span class=\"line\">\tp_front-&gt;next = p_del-&gt;next;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(p_del);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "学习 教程"
            ]
        }
    ]
}