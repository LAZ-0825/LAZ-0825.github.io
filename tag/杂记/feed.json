{
    "version": "https://jsonfeed.org/version/1",
    "title": "LXR的小站 • All posts by \"杂记\" tag",
    "description": "",
    "home_page_url": "http://laz0825.cn",
    "items": [
        {
            "id": "http://laz0825.cn/passages/8/",
            "url": "http://laz0825.cn/passages/8/",
            "title": "某菜鸡艰难的you-get使用历程",
            "date_published": "2021-09-09T09:14:33.000Z",
            "content_html": "<p>​        <strong>声明：本文主要功能是记录使用 you-get 的感受和经历，也写了一些使用的过程，可以参考，但不是教学式的教程。（需要教程请百度 / 必应一下）</strong></p>\n<h1 id=\"you-get初体验\"><a class=\"markdownIt-Anchor\" href=\"#you-get初体验\">#</a> you-get 初体验</h1>\n<p>​        偶尔有看到身边的同学在用 you-get，并推荐给了我们，当时并没有感觉有很棒，但是后来感觉还是很好用的（真香定律。</p>\n<h1 id=\"you-get的使用\"><a class=\"markdownIt-Anchor\" href=\"#you-get的使用\">#</a> you-get 的使用</h1>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>​        首先我们需要准备 Python 环境，可以去 python 官网下载，大于等于 Python3 即可，我用的是 python3.9.7。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2021/09/d969338599694a69.png\" alt></p>\n<p>​        准备好环境之后就可以下载 you-get 了。（cmd 和 git bush 都可以）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install you-get</span><br><span class=\"line\"></span><br><span class=\"line\"># 如果下载的慢，可以使用国内的源站下载</span><br><span class=\"line\">#豆瓣</span><br><span class=\"line\">pip install -i http://pypi.douban.com/simple/ you-get</span><br><span class=\"line\">#清华</span><br><span class=\"line\">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple you-get</span><br></pre></td></tr></table></figure>\n<p>​        安装之后输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">you-get</span><br></pre></td></tr></table></figure>\n<p>​        出现如下内容说明安装好了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: you-get [OPTION]... URL...</span><br><span class=\"line\"></span><br><span class=\"line\">A tiny downloader that scrapes the web</span><br><span class=\"line\"></span><br><span class=\"line\">optional arguments:</span><br><span class=\"line\">  -V, --version         Print version and exit</span><br><span class=\"line\">  -h, --help            Print this help message and exit</span><br><span class=\"line\"></span><br><span class=\"line\">Dry-run options:</span><br><span class=\"line\">  (no actual downloading)</span><br><span class=\"line\"></span><br><span class=\"line\">  -i, --info            Print extracted information</span><br><span class=\"line\">  -u, --url             Print extracted information with URLs</span><br><span class=\"line\">  --json                Print extracted URLs in JSON format</span><br><span class=\"line\"></span><br><span class=\"line\">Download options:</span><br><span class=\"line\">  -n, --no-merge        Do not merge video parts</span><br><span class=\"line\">  --no-caption          Do not download captions (subtitles, lyrics, danmaku, ...)</span><br><span class=\"line\">  -f, --force           Force overwriting existing files</span><br><span class=\"line\">  --skip-existing-file-size-check</span><br><span class=\"line\">                        Skip existing file without checking file size</span><br><span class=\"line\">  -F STREAM_ID, --format STREAM_ID</span><br><span class=\"line\">                        Set video format to STREAM_ID</span><br><span class=\"line\">  -O FILE, --output-filename FILE</span><br><span class=\"line\">                        Set output filename</span><br><span class=\"line\">  -o DIR, --output-dir DIR</span><br><span class=\"line\">                        Set output directory</span><br><span class=\"line\">  -p PLAYER, --player PLAYER</span><br><span class=\"line\">                        Stream extracted URL to a PLAYER</span><br><span class=\"line\">  -c COOKIES_FILE, --cookies COOKIES_FILE</span><br><span class=\"line\">                        Load cookies.txt or cookies.sqlite</span><br><span class=\"line\">  -t SECONDS, --timeout SECONDS</span><br><span class=\"line\">                        Set socket timeout</span><br><span class=\"line\">  -d, --debug           Show traceback and other debug info</span><br><span class=\"line\">  -I FILE, --input-file FILE</span><br><span class=\"line\">                        Read non-playlist URLs from FILE</span><br><span class=\"line\">  -P PASSWORD, --password PASSWORD</span><br><span class=\"line\">                        Set video visit password to PASSWORD</span><br><span class=\"line\">  -l, --playlist        Prefer to download a playlist</span><br><span class=\"line\">  -a, --auto-rename     Auto rename same name different files</span><br><span class=\"line\">  -k, --insecure        ignore ssl errors</span><br><span class=\"line\"></span><br><span class=\"line\">Proxy options:</span><br><span class=\"line\">  -x HOST:PORT, --http-proxy HOST:PORT</span><br><span class=\"line\">                        Use an HTTP proxy for downloading</span><br><span class=\"line\">  -y HOST:PORT, --extractor-proxy HOST:PORT</span><br><span class=\"line\">                        Use an HTTP proxy for extracting only</span><br><span class=\"line\">  --no-proxy            Never use a proxy</span><br><span class=\"line\">  -s HOST:PORT or USERNAME:PASSWORD@HOST:PORT, --socks-proxy HOST:PORT or USERNAME:PASSWORD@HOST:PORT</span><br><span class=\"line\">                        Use an SOCKS5 proxy for downloading</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​        里面也包含了可用参数和命令。<br>\n​        其中比较重要的有：</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-i</td>\n<td>显示资源信息，比如说格式、清晰度、大小等</td>\n</tr>\n<tr>\n<td>-i</td>\n<td>指定下载或查看的 url，有时候可以省略 - u 直接加上 url</td>\n</tr>\n<tr>\n<td>-o</td>\n<td>设置输出文件夹，即保存路径，若不指定，则保存在当前工作目录</td>\n</tr>\n<tr>\n<td>-O</td>\n<td>设置文件名，可采用默认文件名</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>强制覆盖已存在的文件</td>\n</tr>\n<tr>\n<td>-l</td>\n<td>优先下载整个列表</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>使用密码（若访问视频需要密码）</td>\n</tr>\n<tr>\n<td>-t</td>\n<td>设置超时时间，单位是秒</td>\n</tr>\n<tr>\n<td>-c</td>\n<td>使用 cookie，加载 cookies.txt 或者 cookies.sqlite</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h2>\n<p>​        好的终于是安装成功了，可以愉快的开始使用了。</p>\n<p>​        我们这里以蛋黄派 2021.9.7 更新的视频为例来下载。</p>\n<p>​        输入如下语句来进行下载</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">you-get https://www.bilibili.com/video/BV1Eb4y1U7hY?spm_id_from=333.851.b_7265636f6d6d656e64.1</span><br></pre></td></tr></table></figure>\n<p>​        之后就可以在默认路径下找到你下载的视频啦～</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2021/09/fbaaaa0c69a96bb6.png\" alt></p>\n<p>​        下载成功的话会有一个 MP4 文件和一个 XML 文件，分别对应视频和弹幕。</p>\n<p>​        在这个步骤部分小伙伴会有疑问：<strong>为森么我下载下来是 FLV 文件和 XML 文件呢</strong>？</p>\n<p>我们可以通过 -i 指令来查看。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">you-get -i https://www.bilibili.com/video/BV1Eb4y1U7hY?spm_id_from=333.851.b_7265636f6d6d656e64.1</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.bmp.ovh/imgs/2021/09/4e6e16c7e83a9394.png\" alt></p>\n<p>​        在这里我们可以找到 1080p 的 MP4 格式的下载指令，于是我们删除之前下载的文件，输入如下代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">you-get --format=dash-flv https://www.bilibili.com/video/BV1Eb4y1U7hY?spm_id_from=333.851.b_7265636f6d6d656e64.1</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.bmp.ovh/imgs/2021/09/af6db85327aa8ef7.png\" alt></p>\n<p>​        在这一步之后，有人（比如我）会发现：<strong>咦？为森么下载了两个 MP4 文件，是原视频的音频和视频分开的那种</strong>。</p>\n<p>​        这里就要提到一个叫<strong> FFmpeg</strong> 的东西了，它可以解决这个问题，具体解决方法建议自行百度 / 必应。（主要是因为我的问题是萱琪姐姐帮忙解决的，具体操作我也不是很清楚</p>\n<p>​       还要推荐一个叫 Windows powerShell 的东西，这个也比较好用。在文件夹处 shift + 邮件即可呼出，我们可以通过 Windows powerShell 来使用 git 和 cmd，当然使用 Windows powerShell 配合 you-get 下载也十分的方便。</p>\n<p>​        最后附上 Windows powerShell 的下载界面。<br>\n<img src=\"https://s3.bmp.ovh/imgs/2021/09/5f81eae2d969af1a.png\" alt></p>\n",
            "tags": [
                "杂记",
                "教程"
            ]
        },
        {
            "id": "http://laz0825.cn/passages/2/",
            "url": "http://laz0825.cn/passages/2/",
            "title": "HEXO+GitHub搭建博客的小教程",
            "date_published": "2021-07-12T07:20:05.000Z",
            "content_html": "<h1 id=\"如何用hexo搭建自己的博客及美化自己的博客\"><a class=\"markdownIt-Anchor\" href=\"#如何用hexo搭建自己的博客及美化自己的博客\">#</a> 如何用 hexo 搭建自己的博客及美化自己的博客</h1>\n<p>这是我配好环境使用 hexo 写的第一篇博客</p>\n<p>这里特别感谢各位大佬们的支持与帮助 ε≡٩(๑&gt;₃&lt;)۶</p>\n<h2 id=\"配置相关环境\"><a class=\"markdownIt-Anchor\" href=\"#配置相关环境\">#</a> 配置相关环境</h2>\n<p>要想创建自己的 hexo 博客需要配置相关的环境（我前几次就经常把环境搞炸），接下来开始配置创建博客所必须的环境</p>\n<p>过程来源: <strong>Gaein nidb</strong>，<strong>Code Sheep</strong>.</p>\n<p>相关视频链接: <a href=\"https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=4666682153927695444\">https://www.bilibili.com/video/BV1Yb411a7ty?from=search&amp;seid=4666682153927695444</a></p>\n<h3 id=\"安装nodejs\"><a class=\"markdownIt-Anchor\" href=\"#安装nodejs\">#</a> 安装 Node.js</h3>\n<p>可以去<a href=\"https://www.nodejs.org/\"> https://www.nodejs.org</a> 网址下载</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/1.png\" alt></p>\n<p>选择左边 LTS (长期支持版) 下载，安装时无脑下一步即可</p>\n<p>安装完成之后会有两个组件，如图所示</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/2.png\" alt></p>\n<p>可以顺带检查一下它们俩的版本，按下键盘的 win + R 键，在弹出面板输入 cmd，打开 dos 命令窗口。</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/3.png\" alt></p>\n<p>输入 npm -v 和 node -v</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/4.png\" alt></p>\n<p>我们需要利用 npm 安装镜像包，但是因为国内的下载速度比较慢，所以我们需要下载一个 cnpm 淘宝的源</p>\n<p>在 dos 命令窗口中输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>如果安装成功，可以在 dos 命令窗口输入 cnpm 检查一下</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/5.png\" alt></p>\n<p>然后使用 cnpm 安装 hexo 框架</p>\n<p>在 dos 命令窗口输入 cnpm install -g hexo-cli</p>\n<p>如果安装成功，可以在 dos 命令窗口输入 hexo -v 检查一下</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/6.png\" alt></p>\n<p>那么你的环境已经配置好了，我们来正式搭建 hexo 博客</p>\n<h2 id=\"在本地创建hexo的博客\"><a class=\"markdownIt-Anchor\" href=\"#在本地创建hexo的博客\">#</a> 在本地创建 hexo 的博客</h2>\n<p>首先我们需要一个存放你博客的文件夹，所以第一步我们需要新建一个文件夹。</p>\n<p>举个栗子：C:\\Users\\fiower\\Documents\\blog 这是我的文件夹路径</p>\n<p>我们终于可以创建自己的博客了 (๑╹◡╹)ﾉ”””</p>\n<p>由于本人没有用过 powershell（菜），所以接下来我们使用 dos 命令窗口 (git bash）创建本地博客</p>\n<p>只需要两种方法选一即可 (这里以 dos 命令窗口为例，git bash 和 dos 命令窗口的指令是完全一样的，搭建时没必要纠结使用哪个)</p>\n<h3 id=\"使用dos命令窗口\"><a class=\"markdownIt-Anchor\" href=\"#使用dos命令窗口\">#</a> 使用 dos 命令窗口</h3>\n<p>按下键盘的 win + R 键，在弹出面板输入 cmd，打开 dos 命令窗口。</p>\n<p>这时路径默认是 C:\\Users\\ 你的用户名字 &gt;</p>\n<p>输入 cd 你的博客所在路径 转入你的博客路径</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/7.png\" alt></p>\n<h3 id=\"使用git-bash\"><a class=\"markdownIt-Anchor\" href=\"#使用git-bash\">#</a> 使用 git bash</h3>\n<p>在你的博客文件夹下按下右键，点击 git bash</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/8.jpg\" alt></p>\n<h2 id=\"开始创建本地博客\"><a class=\"markdownIt-Anchor\" href=\"#开始创建本地博客\">#</a> 开始创建本地博客</h2>\n<p>输入 hexo init 并按下回车等待</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/9.png\" alt></p>\n<p>这时你的目标文件夹就会多出一些文件</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/10.png\" alt></p>\n<p>那么恭喜你，现在 hexo 博客已经配置完毕了（bushi</p>\n<p>继续在 dos 命令窗口输入 hexo s 并按下回车等待</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/10.png\" alt></p>\n<p>如图所示，这时候出现了一个 4000 端口的网址</p>\n<p>让我们在浏览器内打开这个网址</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/13.png\" alt></p>\n<p>我们的第一个本地博客就搭建好了</p>\n<p>但是你的程序还在运行着，这时候需要在 dos 窗口 /git bash 窗口中按下 Ctrl + C 键即可中断本地网址的建立（hexo s 以后会用于博客写入新东西时的调试工作）</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/14.png\" alt></p>\n<p>如果你没有成功到达这一步，不用害怕，只需要把你创建的文件夹<strong>干掉重来</strong>即可，多试试几次总会成功的</p>\n<h2 id=\"将hexo博客同步到远端github\"><a class=\"markdownIt-Anchor\" href=\"#将hexo博客同步到远端github\">#</a> 将 hexo 博客同步到远端 (Github)</h2>\n<p>我相信你已经非常兴奋而且想要把你的博客让朋友们看到，别急，现在我们就把自己的博客部署到远端</p>\n<p>接下来我们要把自己的博客部署到 Github 上 (毫无疑问需要你的账号，没有的小伙伴需注册)</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/15.png\" alt></p>\n<p>新建一个仓库</p>\n<p><em><strong>* 注意，用户部署个人博客的 Github 仓库的命名必须符合特定要求 *</strong></em></p>\n<p><em><strong>* 命名格式为：  <a href=\"http://xn--Github-on9i027mnx4aga157g.github.io\">你的 Github 的昵称.github.io</a>*</strong></em></p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/16.png\" alt></p>\n<p>建立了空仓库之后，我们需要装一个插件</p>\n<p>在命令行中输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/17.png\" alt></p>\n<p>然后用 vscode 打开你的 blog 的根目录_config.yml 文件 (没有安装 vscode 的话也可以选择记事本打开)</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/18.png\" alt></p>\n<p>由于我没有新建空仓库，放一张 CodeSheep 的图片 (这样获取你部署到远端的网址)</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/19.png\" alt=\"aaa\"></p>\n<p>然后在 dos 命令窗口输入 hexo d</p>\n<p>这样你的 hexo 博客就部署到了远端 (所有人都可以用这个网址访问你的博客了)</p>\n<h2 id=\"美化自己的hexo博客\"><a class=\"markdownIt-Anchor\" href=\"#美化自己的hexo博客\">#</a> 美化自己的 hexo 博客</h2>\n<p>首先你需要下载一个博客的主题 (如果你认为你的博客默认主题已经非常好看的了请忽略我说的话)</p>\n<p>我们以 ad 主题为例（分站使用的是 ad 主题</p>\n<p>你需要先找见 ad 主题在 github 的网址，以便把这个主题克隆到自己的文件夹里面</p>\n<p>ad 主题地址:<a href=\"https://github.com/dongyuanxin/theme-ad\">https://github.com/dongyuanxin/theme-ad</a></p>\n<p>然后我们需要在命令行中输入 git clone <a href=\"https://github.com/dongyuanxin/theme-ad.git\">https://github.com/dongyuanxin/theme-ad.git</a> themes/ad</p>\n<p>这样就能把 ad 的主题文件克隆到你的 themes 文件夹里面了</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/20.png\" alt></p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/21.png\" alt=\"aaa\"></p>\n<p>用 vscode 打开你的 blog 的根目录_config.yml 文件，修改<strong> themes: landscape 为 themes: ad</strong></p>\n<p>然后保存退出</p>\n<p>在命令行输入 hexo s 进行调试，打开 4000 端口</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/22.png\" alt></p>\n<p>然后输入 hexo clean 清楚临时缓存的文件，输入 hexo d 部署到远端</p>\n<p>这样我们的主题就修改好了</p>\n<h3 id=\"如何修改博客上的一些内容\"><a class=\"markdownIt-Anchor\" href=\"#如何修改博客上的一些内容\">#</a> 如何修改博客上的一些内容</h3>\n<p>这里的内容指的是超链接，修改博客文字内容等操作，可以使你的博客更加个性化 (也许 (っ・̀ω・́) っ✎⁾⁾)</p>\n<p>相信你已经发现了，blog 的根目录_config.yml 文件很重要，打开发现有很多设置的东西</p>\n<p>其实你 themes 目录下的主题也有_config.yml 文件，只要你打开它，我相信你就会知道怎么使用它了 (确信)</p>\n<h3 id=\"如何在文章中加入超链接\"><a class=\"markdownIt-Anchor\" href=\"#如何在文章中加入超链接\">#</a> 如何在文章中加入超链接</h3>\n<p>你可以使用 Typora 来写文章，可以直接使用超链接的格式，当然也可以用其他的软件来写 (<s>比如记事本</s>)</p>\n<p>格式:[你想写的内容]+(你想加入的链接)</p>\n<p>这是基于 markdown 语法的格式，markdown 格式的参考网址可以参考我在下文放出的链接</p>\n<h3 id=\"如何写文章及在写文章时加入图片不推荐建议使用图片链接\"><a class=\"markdownIt-Anchor\" href=\"#如何写文章及在写文章时加入图片不推荐建议使用图片链接\">#</a> 如何写文章及在写文章时加入图片（不推荐，建议使用图片链接）</h3>\n<p>我们只需在命令行输入 hexo new “文章标题” 就可以创建一个空文件夹了，然后可以打开改.md 文件进行写入内容</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/23.png\" alt></p>\n<p>那么问题来了，如何才能写出像我一样带有图片的文章呢？</p>\n<p>我们需要再下载一个插件</p>\n<p>我们需要打开 git bash (dos 也可以) 输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n<p>然后打开 hexo 的配置文件_config.yml</p>\n<p>找到 post_asset_folder，把这个选项从 false 改成 true</p>\n<p>这样我们每次新建的文章都会带有一个同名的文件夹 (原来的文件可以直接新建同名文件夹食用)</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/24.png\" alt=\"aaa\"></p>\n<p>由于 hexo 文章是基于 markdown 语法写的，我们需要如何用 markdown 语法插入图片</p>\n<p>参考网址:<a href=\"https://www.runoob.com/markdown/md-tutorial.html\">https://www.runoob.com/markdown/md-tutorial.html</a></p>\n<p>格式：比如我这篇文章就是这样写的:</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/25.png\" alt></p>\n<p>这样就可以在文章中间加入图片了 qwq</p>\n<h3 id=\"如何写文章及在写文章时加入音乐播放器\"><a class=\"markdownIt-Anchor\" href=\"#如何写文章及在写文章时加入音乐播放器\">#</a> 如何写文章及在写文章时加入音乐播放器</h3>\n<p>我相信有些人喜欢和我一样在博客中加入音乐播放器 (显得有 13 格)，所以和我一起在自己的博客中加入这个好玩的东西吧</p>\n<p>由于是我自学的如何插入，本文只能简单的进行插入工作 (菜)</p>\n<p>原文链接 <a href=\"https://blog.csdn.net/thewindkee/article/details/55086735?utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control\">https://blog.csdn.net/thewindkee/article/details/55086735?utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-4.control</a></p>\n<p>我接下来展示如何在 ad 主题下添加网易云音乐播放器</p>\n<p>首先我们打开网页版网易云，选择一首你喜欢的歌曲</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/26.png\" alt></p>\n<p>点击” 生成外链播放器”</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/27.png\" alt=\"aaa\"></p>\n<p>复制这个 HTML 代码</p>\n<p>然后打开路径 themes\\ad\\layout\\partials 下的 head.ejs 文件</p>\n<p>(选择 head 是为了让播放器放到博客的左上角，当然我们也可以选择这个文件夹的任意文件进行修改)</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/28.png\" alt=\"aaa\"></p>\n<p>加入这段代码</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/29.png\" alt=\"aaa\"></p>\n<p>这样播放器就可以部署到你的博客里面了，但是我们还需要调一下 css 样式</p>\n<p>打开路径 themes\\ad\\source\\css</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/30.png\" alt></p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/31.png\" alt=\"aaa\"></p>\n<p margin-top: 80px;>.header-music</p>\n<p>这样我们的播放器就可以部署到博客上了</p>\n<p>![<img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/32.png\" alt=\"aaa\"></p>\n<h3 id=\"如何写文章及在写文章时加入音乐播放器升级版\"><a class=\"markdownIt-Anchor\" href=\"#如何写文章及在写文章时加入音乐播放器升级版\">#</a> 如何写文章及在写文章时加入音乐播放器 (升级版）</h3>\n<p>由于我看了隔壁学长 farewell 的博客发现他的播放器和我上面配置的不一样 (我的太菜了)</p>\n<p>所以我决定我也要搞一个，但是这个过程并不顺利。。。经过我艰苦卓绝的努力，终于找到一个教程，现在用我的方法呈现出来</p>\n<p>原文链接 <a href=\"https://www.cnblogs.com/fby698/p/12663089.html\">https://www.cnblogs.com/fby698/p/12663089.html</a></p>\n<p>Aplayer 官网文档：<a href=\"https://aplayer.js.org/#/\">https://aplayer.js.org/#/</a></p>\n<p>Metingjs 官网文档：<a href=\"https://github.com/metowolf/MetingJS\">https://github.com/metowolf/MetingJS</a><br>\n| 选项                        | 默认        | 描述                                                         |<br>\n| ————————— | ———– | ———————————————————— |<br>\n| server (平台)                | <strong>require</strong> | 音乐平台： <code>netease</code> ， <code>tencent</code> ， <code>kugou</code> ， <code>xiami</code> ， <code>baidu</code>     |<br>\n| id (编号)                    | <strong>require</strong> | 歌曲 ID / 播放列表 ID / 专辑 ID / 搜索关键字                       |<br>\n| auto（支持类种 类）         | options     | 音乐链接，支持： <code>netease</code> ， <code>tencent</code> ， <code>xiami</code>                 |<br>\n| type（类型）                | <strong>require</strong> |  <code>song</code> ， <code>playlist</code> ， <code>album</code> ， <code>search</code> ， <code>artist</code>               |<br>\n| fixed（固定模式）           |  <code>false</code>      | 启用固定模式，默认 <code>false</code>                                     |<br>\n| mini（迷你模式）            |  <code>false</code>      | 启用迷你模式，默认 <code>false</code>                                      |<br>\n| autoplay（自动播放）        |  <code>false</code>      | 音频自动播放，默认 <code>false</code>                                     |<br>\n| theme (主题颜色)             |  <code>#2980b9</code>    | 默认 <code>#2980b9</code>                                                 |<br>\n| loop（循环）                |  <code>all</code>        | 播放器循环播放，值：“all”，one”，“none”                      |<br>\n| order (顺序)                 |  <code>list</code>       | 播放器播放顺序，值：“list”，“random”                         |<br>\n| preload (加载)               |  <code>auto</code>       | 值：“none”，“metadata”，“’auto”                              |<br>\n| volume（声量）              |  <code>0.7</code>        | 默认音量，请注意播放器会记住用户设置，用户自己设置音量后默认音量将不起作用 |<br>\n| mutex（限制）               |  <code>true</code>       | 防止同时播放多个玩家，在该玩家开始播放时暂停其他玩家         |<br>\n| lrc-type（歌词）            |  <code>0</code>          | 歌词显示                                                     |<br>\n| list-folded（列表折叠）     |  <code>false</code>      | 指示列表是否应该首先折叠                                     |<br>\n| list-max-height（最大高度） |  <code>340px</code>      | 列出最大高度                                                 |<br>\n| storage-name（储存名称）    |  <code>metingjs</code>   | 存储播放器设置的 localStorage 键                               |<br>\n 然后在你博客的适当位置加入以下代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">         &lt;!-- 引用Aplayer和metingjs --&gt;</span><br><span class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;&gt;</span><br><span class=\"line\">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;div id=&quot;my-aplayer&quot;</span><br><span class=\"line\">\tclass=&quot;aplayer&quot; </span><br><span class=\"line\">\tdata-id=&quot;706800324&quot; </span><br><span class=\"line\">  data-server=&quot;netease&quot; </span><br><span class=\"line\">  data-mini=&quot;false&quot;</span><br><span class=\"line\">\tdata-type=&quot;playlist&quot; </span><br><span class=\"line\">\tdata-fixed=&quot;false&quot; // 吸底模式可以固定播放器于页面底部(这个底部指的是你屏幕下方，并非指的网页下方)</span><br><span class=\"line\">\tdata-autoplay=&quot;fals&quot; </span><br><span class=\"line\">\tdata-order=&quot;list&quot; </span><br><span class=\"line\">  data-volume=&quot;0.55&quot; </span><br><span class=\"line\">  data-list-folded=&quot;ture&quot;</span><br><span class=\"line\">  data-theme=&quot;#66CCFF&quot; </span><br><span class=\"line\">  data-list-max-height=&quot;340px&quot;</span><br><span class=\"line\">  data-preload=&quot;auto&quot; </span><br></pre></td></tr></table></figure>\n<p><strong>适当位置</strong>指的是你博客的主界面的文件中的位置，举个栗子</p>\n<p>选择 themes\\ad\\layout\\partials\\footer.ejs (因为我使用的 ad 主题，所以这里以 ad 主题为例，若使用其他主题，只需要点开对应主题的.ejs 文件)</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/26.png\" alt></p>\n<p>然后在适当位置加入代码 (该代码在文件中的位置直接对应到播放器在你的博客页面的位置)</p>\n<p>比如我的就是在这里加的</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/27.png\" alt=\"aaa\"></p>\n<p>需要注意的是，你这样拷贝的是我的播放器列表 (当然用我的歌单我将感激不尽)，我相信你肯定想拥有一个属于自己的播放列表</p>\n<p>这里就拿网易云音乐举例，仔细看上面的代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data-id=&quot;706800324&quot; </span><br><span class=\"line\">data-server=&quot;netease&quot; </span><br></pre></td></tr></table></figure>\n<p>我相信你如果仔细看过上面的表格的话一定知道我想表达什么了 (<s>可能</s>)</p>\n<p>你首先需要选择你需要播放的音乐平台，比如你想使用网易云，就在 data-serve 后面输入 <code>netease</code> ，你想使用 qq 音乐，就在 data-serve 后面输入 <code>tencent</code> ，以此类推。。。</p>\n<p>不管你是哪个平台的忠实听众，你的每个歌单都有属于它自己的 id，你需要的是把这个 id 找到然后 cv 到你的 data-id 上</p>\n<p>接下来让我们看看这么才能找到你歌单的 id</p>\n<p>首先打开网页版的网易云音乐，然后<s>登陆</s>，找到自己的歌单</p>\n<p><img src=\"https://water-boiled-fish.github.io/2020/09/03/hexo/28.png\" alt=\"aaa\"></p>\n<p>看见最上方链接的那一串数字了没？那就是我们想要的东西</p>\n<p>赶快 cv 一下，然后粘贴替换掉上面我的 id (<s>悲</s>)</p>\n<p>然后你的这段代码就是你自己的了，赶快 hexo s 试一试</p>\n<p>该播放器的更多使用方法在上方表格内都写出来了，如果看见代码里面没有的但是表格中确实有使用方法的，可以手动添加，在代码末端加入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data-选项名称(英文)=“ ”</span><br></pre></td></tr></table></figure>\n<p>这样达到你需要的目的，其他选项可以自行修改，更多使用方法请自行尝试 (<s>因为那些也就改几个字的事情，没必要教</s>)</p>\n<p><s>emmmmm 其实有的主题在主题对应的_config.yml 文件中就已经配置好了</s></p>\n<h3 id=\"如何在博客中加入live_2d看板娘\"><a class=\"markdownIt-Anchor\" href=\"#如何在博客中加入live_2d看板娘\">#</a> 如何在博客中加入 live_2d 看板娘</h3>\n<p>因为我还没有学过 HTML 的用法，所以我只能部署一个比较简单的 live_2d 看板娘</p>\n<p>在命令行输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>安装</p>\n<p>但是这个 live2d 的插件真的一言难尽 (我和学长一致认为这个 live2d 插件自带的人物很少 (<s>且不对我 xp</s>) 且不能自行添加)</p>\n<p>安装截图我就不放了，毕竟能看到这里的都安装过不下 10 次了吧 (</p>\n<p>安装好了之后就可以去下载 live2d 文件了 (其实你也可以边等边下载的)</p>\n<p>下载地址:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md</span><br></pre></td></tr></table></figure>\n<p>下载的文件是文件夹格式的，我们需要把它们移到（）文件路径中</p>\n<p>然后你还需要再次修改根目录中的_config.yml 文件，修改代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">live2d:  enable: true  pluginModelPath: assets/  model:    use: live2d-widget-model-xxx  #这是你需要把模板放入的目录，在node_modules里，xxx表示你的live_2d的具体文件  display:    position: right      #放置在你的博客的左下还是右下    width: 150     height: 300  mobile:    show: false  #是否在手机进行显示</span><br></pre></td></tr></table></figure>\n<p>原文章代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">live2d:  enable: true  scriptFrom: local  pluginRootPath: live2dw/  pluginJsPath: lib/  pluginModelPath: assets/  tagMode: false  log: false  model:    use: live2d-widget-model-wanko  display:    position: right    width: 150    height: 300  mobile:    show: true  react:    opacity: 0.7</span><br></pre></td></tr></table></figure>\n<p>如图所示</p>\n<p>（）</p>\n<p>然后你就可以在命令行中输入 hexo s 来进行本地调试了</p>\n<p>选择一个你喜欢的 live_2d 吧ヾ (๑╹◡╹)ﾉ”</p>\n<p><strong>未完待续（文章有点小问题，找时间改改）</strong></p>\n<p><strong>原文链接：<a href=\"https://water-boiled-fish.github.io/2020/09/03/hexo/\">使用 hexo 搭建自己的博客及美化与上传 Github | Little_Flower_Fa (water-boiled-fish.github.io)</a></strong></p>\n<p>（白嫖什么的，真香）</p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "http://laz0825.cn/passages/1/",
            "url": "http://laz0825.cn/passages/1/",
            "title": "First Blog",
            "date_published": "2021-07-12T03:04:19.000Z",
            "content_html": "<p>First Blog 完成啦！</p>\n<p>博客可算是搭好了，等了好久终于等到今天～～</p>\n<p>想说的话：现在保证能跑就行</p>\n<p>‘Text.’</p>\n<p><a href=\"https://cn.bing.com/?mkt=zh-CN\">必应 (bing.com)</a></p>\n<p><code>printf()</code>  函数</p>\n",
            "tags": [
                "杂记"
            ]
        }
    ]
}